import { AfterContentInit, AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, InjectionToken, NgZone, OnDestroy, QueryList } from '@angular/core';
import { Platform } from '@angular-mdc/web/common';
import { MdcRipple } from '@angular-mdc/web/ripple';
import { MdcIcon, MdcIconLocation, MdcIconRegistry } from '@angular-mdc/web/icon';
export interface MdcChipInteractionEvent {
    detail: {
        chipId: string;
    };
}
export interface MdcChipSelectionEvent extends MdcChipInteractionEvent {
    isUserInput?: boolean;
    detail: {
        chipId: string;
        selected: boolean;
        value: any;
    };
}
export interface MdcChipRemovedEvent extends MdcChipInteractionEvent {
    detail: {
        chipId: string;
        root: MdcChip;
    };
}
/**
 * Describes a parent MdcChipSet component.
 * Contains properties that MdcChip can inherit.
 */
export interface MdcChipSetParentComponent {
    input: boolean;
    filter: boolean;
    choice: boolean;
}
/**
 * Injection token used to provide the parent MdcChipSet component to MdcChip.
 */
export declare const MDC_CHIPSET_PARENT_COMPONENT: InjectionToken<MdcChipSetParentComponent>;
export declare class MdcChipCheckmark {
    elementRef: ElementRef<HTMLElement>;
    constructor(elementRef: ElementRef<HTMLElement>);
}
export declare class MdcChipText {
    elementRef: ElementRef<HTMLElement>;
    constructor(elementRef: ElementRef<HTMLElement>);
}
export declare class MdcChip implements AfterViewInit, OnDestroy {
    private _platform;
    private _ngZone;
    private _changeDetectorRef;
    private _ripple;
    elementRef: ElementRef<HTMLElement>;
    private _parent;
    /** Emits whenever the component is destroyed. */
    private _destroyed;
    private _id;
    /** The unique ID of the chip. */
    readonly id: string;
    readonly leadingIcon: MdcChipIcon | undefined;
    label?: string;
    selected: boolean;
    private _selected;
    filter: boolean;
    private _filter;
    choice: boolean;
    private _choice;
    input: boolean;
    private _input;
    primary: boolean;
    private _primary;
    secondary: boolean;
    private _secondary;
    /** Determines whether or not the chip displays the remove styling and emits (removed) events. */
    removable: boolean;
    private _removable;
    /** Whether the chip is disabled. */
    disabled: boolean;
    private _disabled;
    /** Whether the chip ripple is disabled. */
    disableRipple: boolean;
    private _disableRipple;
    /** The value of the chip. Defaults to the content inside `<mdc-chip>` tags. */
    value: any;
    protected _value: any;
    /** Emitted when the chip is selected or deselected. */
    readonly selectionChange: EventEmitter<MdcChipSelectionEvent>;
    /** Emitted when the chip icon is interacted with. */
    readonly trailingIconInteraction: EventEmitter<MdcChipInteractionEvent>;
    /** Emitted when a chip is to be removed. */
    readonly removed: EventEmitter<MdcChipRemovedEvent>;
    _checkmark?: MdcChipCheckmark;
    _icons: QueryList<MdcChipIcon>;
    private _createAdapter;
    private _foundation;
    constructor(_platform: Platform, _ngZone: NgZone, _changeDetectorRef: ChangeDetectorRef, _ripple: MdcRipple, elementRef: ElementRef<HTMLElement>, _parent: MdcChipSetParentComponent);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /** Selects the chip. */
    select(): void;
    /** Deselects the chip. */
    deselect(): void;
    /** Select this chip and emit selected event */
    selectViaInteraction(): void;
    /** Allows for programmatic focusing of the chip. */
    focus(): void;
    _handleInteraction(evt: KeyboardEvent | MouseEvent): void;
    _handleTrailingIconInteraction(evt: KeyboardEvent | MouseEvent): void;
    private _initRipple;
    private _setVariantFromChipSet;
    private _loadListeners;
    /** Emits the removed event. */
    _emitRemovedEvent(): void;
    /** Emits the selection change event. */
    private _emitSelectionChangeEvent;
    /** Retrieves the DOM element of the component host. */
    private _getHostElement;
}
export declare class MdcChipIcon extends MdcIcon implements AfterContentInit {
    private _parentChip;
    leading: boolean;
    private _leading;
    trailing: boolean;
    private _trailing;
    constructor(_parentChip: MdcChip, elementRef: ElementRef<HTMLElement>, iconRegistry: MdcIconRegistry, ariaHidden: string, location?: MdcIconLocation);
    ngAfterContentInit(): void;
    _onIconInteraction(evt: KeyboardEvent | MouseEvent): void;
}
