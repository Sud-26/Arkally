{"version":3,"file":"drawer.js","sources":["../../../packages/drawer/drawer-module.ts","../../../packages/drawer/drawer.ts","../../../node_modules/@material/drawer/index.js","../../../node_modules/@material/drawer/util.js","../../../node_modules/@material/list/index.js","../../../node_modules/@material/dom/ponyfill.js","../../../node_modules/@material/list/foundation.js","../../../node_modules/@material/list/constants.js","../../../node_modules/@material/list/adapter.js","../../../node_modules/@material/drawer/modal/foundation.js","../../../node_modules/@material/drawer/dismissible/foundation.js","../../../node_modules/@material/drawer/constants.js","../../../node_modules/@material/drawer/adapter.js","../../../node_modules/@material/base/component.js","../../../node_modules/@material/base/foundation.js","../../../node_modules/focus-trap/index.js","../../../node_modules/xtend/immutable.js","../../../node_modules/tabbable/index.js"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MdcDrawer,\r\n  MdcDrawerAppContent,\r\n  MdcDrawerContent,\r\n  MdcDrawerHeader,\r\n  MdcDrawerSubtitle,\r\n  MdcDrawerTitle\r\n} from './drawer';\r\n\r\nconst DRAWER_DECLARATIONS = [\r\n  MdcDrawer,\r\n  MdcDrawerAppContent,\r\n  MdcDrawerContent,\r\n  MdcDrawerHeader,\r\n  MdcDrawerSubtitle,\r\n  MdcDrawerTitle\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [DRAWER_DECLARATIONS],\r\n  declarations: [DRAWER_DECLARATIONS]\r\n})\r\nexport class MdcDrawerModule { }\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Output,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Subscription, fromEvent } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { Platform, toBoolean } from '@angular-mdc/web/common';\r\nimport { MdcList } from '@angular-mdc/web/list';\r\n\r\nimport createFocusTrap, { FocusTrap } from 'focus-trap';\r\n\r\nimport {\r\n  MDCDismissibleDrawerFoundation,\r\n  MDCModalDrawerFoundation\r\n} from '@material/drawer/index';\r\n\r\nexport type MdcDrawerType = 'permanent' | 'dismissible' | 'modal';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mdc-drawer-header',\r\n  template: `\r\n  <ng-content></ng-content>\r\n  <h3 class=\"mdc-drawer__title\" *ngIf=\"title\">{{title}}</h3>\r\n  <h6 class=\"mdc-drawer__subtitle\" *ngIf=\"subtitle\">{{subtitle}}</h6>`,\r\n  host: { 'class': 'mdc-drawer__header' },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MdcDrawerHeader {\r\n  @Input() title?: string;\r\n  @Input() subtitle?: string;\r\n\r\n  constructor(public elementRef: ElementRef<HTMLElement>) { }\r\n}\r\n\r\n@Directive({\r\n  selector: '[mdcDrawerTitle]',\r\n  host: { 'class': 'mdc-drawer__title' }\r\n})\r\nexport class MdcDrawerTitle { }\r\n\r\n@Directive({\r\n  selector: '[mdcDrawerSubtitle]',\r\n  host: { 'class': 'mdc-drawer__subtitle' }\r\n})\r\nexport class MdcDrawerSubtitle { }\r\n\r\n@Directive({\r\n  selector: 'mdc-drawer-content, [mdcDrawerContent]',\r\n  host: { 'class': 'mdc-drawer__content' }\r\n})\r\nexport class MdcDrawerContent { }\r\n\r\n@Directive({\r\n  selector: 'mdc-drawer-app-content, [mdcDrawerAppContent]',\r\n  host: { 'class': 'mdc-drawer-app-content' }\r\n})\r\nexport class MdcDrawerAppContent { }\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mdc-drawer',\r\n  exportAs: 'mdcDrawer',\r\n  host: {\r\n    'role': 'navigation',\r\n    'class': 'mdc-drawer',\r\n    '(keydown)': '_onKeydown($event)'\r\n  },\r\n  template: '<ng-content></ng-content>',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MdcDrawer implements AfterViewInit, OnDestroy {\r\n  private _initialized: boolean = false;\r\n  private _previousFocus: Element | null = null;\r\n  private _scrimElement: HTMLElement | null = null;\r\n\r\n  private _focusTrapInstance: FocusTrap | null = null;\r\n\r\n  @Input()\r\n  get open(): boolean { return this._open; }\r\n  set open(value: boolean) {\r\n    this._open = toBoolean(value);\r\n    if (this._platform.isBrowser) {\r\n      this._open ? this._foundation.open() : this._foundation.close();\r\n    }\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  private _open: boolean = false;\r\n\r\n  @Input()\r\n  get drawer(): string { return this._drawer; }\r\n  set drawer(drawer: string) {\r\n    if (this._drawer !== drawer) {\r\n      this._initialized = false;\r\n      this.setDrawer(drawer);\r\n    }\r\n  }\r\n  private _drawer: string = 'permanent';\r\n\r\n  @Input()\r\n  get fixedAdjustElement(): any { return this._fixedAdjustElement; }\r\n  set fixedAdjustElement(element: any) {\r\n    this.setFixedAdjustElement(element);\r\n  }\r\n  private _fixedAdjustElement: any;\r\n\r\n  @Output() readonly opened: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() readonly closed: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @ContentChild(MdcList) _list?: MdcList;\r\n\r\n  private _transitionEndSubscription: Subscription | null = null;\r\n  private _scrimSubscription: Subscription | null = null;\r\n\r\n  get modal(): boolean { return this.drawer === 'modal'; }\r\n  get dismissible(): boolean { return this.drawer === 'dismissible'; }\r\n  get permanent(): boolean { return this.drawer === 'permanent'; }\r\n\r\n  private _createAdapter() {\r\n    return {\r\n      addClass: (className: string) => this._getHostElement().classList.add(className),\r\n      removeClass: (className: string) => this._getHostElement().classList.remove(className),\r\n      hasClass: (className: string) => this._getHostElement().classList.contains(className),\r\n      elementHasClass: (element: Element, className: string) => element.classList.contains(className),\r\n      saveFocus: () => this._previousFocus = this._platform.isBrowser ? document.activeElement! : null,\r\n      restoreFocus: () => {\r\n        if (!this._platform.isBrowser) { return; }\r\n\r\n        const previousFocus = this._previousFocus && (<any>this._previousFocus).focus;\r\n        if (this._getHostElement().contains(document.activeElement!) && previousFocus) {\r\n          (<any>this._previousFocus).focus();\r\n        }\r\n      },\r\n      focusActiveNavigationItem: () => {\r\n        if (!this._platform.isBrowser || !this._list) { return; }\r\n\r\n        const selectedItem = this._list.getSelectedItem();\r\n        if (selectedItem) {\r\n          selectedItem.focus();\r\n        }\r\n      },\r\n      notifyClose: () => this.closed.emit(),\r\n      notifyOpen: () => this.opened.emit(),\r\n      trapFocus: () => this._focusTrapInstance!.activate(),\r\n      releaseFocus: () => this._focusTrapInstance!.deactivate()\r\n    };\r\n  }\r\n\r\n  private _foundation: {\r\n    destroy(): void,\r\n    open(): void,\r\n    close(): void,\r\n    isOpen(): boolean,\r\n    handleKeydown(evt: KeyboardEvent): void,\r\n    handleTransitionEnd(evt: TransitionEvent): void\r\n  } = new MDCDismissibleDrawerFoundation(this._createAdapter());\r\n\r\n  constructor(\r\n    private _platform: Platform,\r\n    private _ngZone: NgZone,\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    public elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this._initListType();\r\n\r\n    if (!this._initialized) {\r\n      this._initFoundation();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.open = false;\r\n    if (this._scrimElement) {\r\n      this._scrimElement.remove();\r\n    }\r\n    this._unloadListeners();\r\n\r\n    if (this._foundation && this._platform.isBrowser) {\r\n      this._foundation.destroy();\r\n    }\r\n  }\r\n\r\n  setDrawer(drawer: string): void {\r\n    if (!drawer) {\r\n      drawer = 'permanent';\r\n    }\r\n\r\n    if (this.drawer !== drawer) {\r\n      this._drawer = drawer;\r\n      this._initFoundation();\r\n    }\r\n  }\r\n\r\n  setFixedAdjustElement(element: any): void {\r\n    this._fixedAdjustElement = element;\r\n\r\n    element ? this._getHostElement().style.setProperty('position', 'absolute') :\r\n      this._getHostElement().style.removeProperty('position');\r\n\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  _onKeydown(evt: KeyboardEvent): void {\r\n    this._foundation.handleKeydown(evt);\r\n  }\r\n\r\n  private _loadListeners(): void {\r\n    this._unloadListeners();\r\n\r\n    if (this.modal && this._platform.isBrowser) {\r\n      this._createScrim();\r\n      this._focusTrapInstance = this._createFocusTrapInstance();\r\n    } else if (this._scrimElement) {\r\n      this._scrimElement.remove();\r\n    }\r\n    this._initTransitionEndListener();\r\n  }\r\n\r\n  private _unloadListeners(): void {\r\n    if (this._scrimSubscription) {\r\n      this._scrimSubscription.unsubscribe();\r\n    }\r\n    if (this._transitionEndSubscription) {\r\n      this._transitionEndSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private _createScrim(): void {\r\n    this._scrimElement = document.createElement('div');\r\n    this._scrimElement.classList.add('mdc-drawer-scrim');\r\n    this._getHostElement().insertAdjacentElement('afterend', this._scrimElement);\r\n\r\n    this._scrimSubscription =\r\n      this._ngZone.runOutsideAngular(() =>\r\n        fromEvent<MouseEvent>(this._scrimElement!, 'click')\r\n          .subscribe(() => this._ngZone.run(() => this.open = false)));\r\n  }\r\n\r\n  private _initFoundation(): void {\r\n    if (this._initialized) { return; }\r\n\r\n    this._initialized = true;\r\n    this._removeDrawerModifiers();\r\n\r\n    if (this.modal) {\r\n      this._foundation = new MDCModalDrawerFoundation(this._createAdapter());\r\n    } else {\r\n      this._foundation = new MDCDismissibleDrawerFoundation(this._createAdapter());\r\n    }\r\n\r\n    if (!this.permanent) {\r\n      this._getHostElement().classList.add(`mdc-drawer--${this.drawer}`);\r\n    }\r\n\r\n    this._loadListeners();\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private _initListType(): void {\r\n    if (this._list && (this._list.singleSelection || this._list.singleSelection === undefined)) {\r\n      this._list.wrapFocus = true;\r\n      this._list.singleSelection = true;\r\n      this._list.useActivatedClass = true;\r\n    }\r\n  }\r\n\r\n  private _removeDrawerModifiers(): void {\r\n    this._getHostElement().classList.remove('mdc-drawer--modal');\r\n    this._getHostElement().classList.remove('mdc-drawer--dismissible');\r\n  }\r\n\r\n  private _initTransitionEndListener(): void {\r\n    this._transitionEndSubscription =\r\n      this._ngZone.runOutsideAngular(() =>\r\n        fromEvent<TransitionEvent>(this._getHostElement(), 'transitionend').pipe(\r\n          filter((e: TransitionEvent) => e.target === this._getHostElement()))\r\n          .subscribe(evt => this._ngZone.run(() => this._foundation.handleTransitionEnd(evt))));\r\n  }\r\n\r\n  private _createFocusTrapInstance(focusTrapFactory = createFocusTrap): any {\r\n    return focusTrapFactory(this._getHostElement(), {\r\n      clickOutsideDeactivates: true,\r\n      initialFocus: this._getHostElement(), // Navigation drawer sets focus to activated item\r\n      escapeDeactivates: false, // Navigation drawer handles ESC.\r\n      returnFocusOnDeactivate: false, // Navigation drawer handles restore focus.\r\n    });\r\n  }\r\n\r\n  private _getHostElement(): HTMLElement {\r\n    return this.elementRef.nativeElement;\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport MDCComponent from '@material/base/component';\nimport MDCDismissibleDrawerFoundation from './dismissible/foundation';\nimport MDCModalDrawerFoundation from './modal/foundation';\nimport MDCDrawerAdapter from './adapter';\nimport {MDCList} from '@material/list/index';\nimport MDCListFoundation from '@material/list/foundation';\nimport {strings} from './constants';\nimport * as util from './util';\nimport createFocusTrap from 'focus-trap';\n\n/**\n * @extends {MDCComponent<!MDCDismissibleDrawerFoundation>}\n * @final\n */\nclass MDCDrawer extends MDCComponent {\n  /**\n   * @param {...?} args\n   */\n  constructor(...args) {\n    super(...args);\n\n    /** @private {!Element} */\n    this.previousFocus_;\n\n    /** @private {!Function} */\n    this.handleKeydown_;\n\n    /** @private {!Function} */\n    this.handleTransitionEnd_;\n\n    /** @private {!Function} */\n    this.focusTrapFactory_;\n\n    /** @private {!FocusTrapInstance} */\n    this.focusTrap_;\n\n    /** @private {?Element} */\n    this.scrim_;\n\n    /** @private {?Function} */\n    this.handleScrimClick_;\n\n    /** @private {?MDCList} */\n    this.list_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCDrawer}\n   */\n  static attachTo(root) {\n    return new MDCDrawer(root);\n  }\n\n  /**\n   * Returns true if drawer is in the open position.\n   * @return {boolean}\n   */\n  get open() {\n    return this.foundation_.isOpen();\n  }\n\n  /**\n   * Toggles the drawer open and closed.\n   * @param {boolean} isOpen\n   */\n  set open(isOpen) {\n    if (isOpen) {\n      this.foundation_.open();\n    } else {\n      this.foundation_.close();\n    }\n  }\n\n  initialize(\n    focusTrapFactory = createFocusTrap,\n    listFactory = (el) => new MDCList(el)) {\n    const listEl = /** @type {!Element} */ (this.root_.querySelector(`.${MDCListFoundation.cssClasses.ROOT}`));\n    if (listEl) {\n      this.list_ = listFactory(listEl);\n      this.list_.wrapFocus = true;\n    }\n    this.focusTrapFactory_ = focusTrapFactory;\n  }\n\n  initialSyncWithDOM() {\n    const {MODAL} = MDCDismissibleDrawerFoundation.cssClasses;\n\n    if (this.root_.classList.contains(MODAL)) {\n      const {SCRIM_SELECTOR} = MDCDismissibleDrawerFoundation.strings;\n      this.scrim_ = /** @type {!Element} */ (this.root_.parentNode.querySelector(SCRIM_SELECTOR));\n      this.handleScrimClick_ = () => /** @type {!MDCModalDrawerFoundation} */ (this.foundation_).handleScrimClick();\n      this.scrim_.addEventListener('click', this.handleScrimClick_);\n      this.focusTrap_ = util.createFocusTrapInstance(this.root_, this.focusTrapFactory_);\n    }\n\n    this.handleKeydown_ = (evt) => this.foundation_.handleKeydown(evt);\n    this.handleTransitionEnd_ = (evt) => this.foundation_.handleTransitionEnd(evt);\n\n    this.root_.addEventListener('keydown', this.handleKeydown_);\n    this.root_.addEventListener('transitionend', this.handleTransitionEnd_);\n  }\n\n  destroy() {\n    this.root_.removeEventListener('keydown', this.handleKeydown_);\n    this.root_.removeEventListener('transitionend', this.handleTransitionEnd_);\n\n    if (this.list_) {\n      this.list_.destroy();\n    }\n\n    const {MODAL} = MDCDismissibleDrawerFoundation.cssClasses;\n    if (this.root_.classList.contains(MODAL)) {\n      this.scrim_.removeEventListener('click', /** @type {!Function} */ (this.handleScrimClick_));\n      // Ensure drawer is closed to hide scrim and release focus\n      this.open = false;\n    }\n  }\n\n  getDefaultFoundation() {\n    /** @type {!MDCDrawerAdapter} */\n    const adapter = /** @type {!MDCDrawerAdapter} */ (Object.assign({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      hasClass: (className) => this.root_.classList.contains(className),\n      elementHasClass: (element, className) => element.classList.contains(className),\n      saveFocus: () => {\n        this.previousFocus_ = document.activeElement;\n      },\n      restoreFocus: () => {\n        const previousFocus = this.previousFocus_ && this.previousFocus_.focus;\n        if (this.root_.contains(document.activeElement) && previousFocus) {\n          this.previousFocus_.focus();\n        }\n      },\n      focusActiveNavigationItem: () => {\n        const activeNavItemEl = this.root_.querySelector(`.${MDCListFoundation.cssClasses.LIST_ITEM_ACTIVATED_CLASS}`);\n        if (activeNavItemEl) {\n          activeNavItemEl.focus();\n        }\n      },\n      notifyClose: () => this.emit(strings.CLOSE_EVENT, {}, true /* shouldBubble */),\n      notifyOpen: () => this.emit(strings.OPEN_EVENT, {}, true /* shouldBubble */),\n      trapFocus: () => this.focusTrap_.activate(),\n      releaseFocus: () => this.focusTrap_.deactivate(),\n    }));\n\n    const {DISMISSIBLE, MODAL} = MDCDismissibleDrawerFoundation.cssClasses;\n    if (this.root_.classList.contains(DISMISSIBLE)) {\n      return new MDCDismissibleDrawerFoundation(adapter);\n    } else if (this.root_.classList.contains(MODAL)) {\n      return new MDCModalDrawerFoundation(adapter);\n    } else {\n      throw new Error(\n        `MDCDrawer: Failed to instantiate component. Supported variants are ${DISMISSIBLE} and ${MODAL}.`);\n    }\n  }\n}\n\nexport {MDCDrawer, MDCDismissibleDrawerFoundation, MDCModalDrawerFoundation, util};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport createFocusTrap from 'focus-trap';\n\n/**\n * @param {!Element} surfaceEl\n * @param {!Function} focusTrapFactory\n * @return {!FocusTrapInstance}\n */\nfunction createFocusTrapInstance(surfaceEl, focusTrapFactory = createFocusTrap) {\n  return focusTrapFactory(surfaceEl, {\n    clickOutsideDeactivates: true,\n    initialFocus: false, // Navigation drawer handles focusing on active nav item.\n    escapeDeactivates: false, // Navigation drawer handles ESC.\n    returnFocusOnDeactivate: false, // Navigation drawer handles restore focus.\n  });\n}\n\nexport {createFocusTrapInstance};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCListFoundation from './foundation';\nimport MDCListAdapter from './adapter';\nimport {matches} from '@material/dom/ponyfill';\nimport {cssClasses, strings, Index} from './constants'; // eslint-disable-line no-unused-vars\n\n/**\n * @extends MDCComponent<!MDCListFoundation>\n */\nclass MDCList extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n    /** @private {!Function} */\n    this.handleKeydown_;\n    /** @private {!Function} */\n    this.handleClick_;\n    /** @private {!Function} */\n    this.focusInEventListener_;\n    /** @private {!Function} */\n    this.focusOutEventListener_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCList}\n   */\n  static attachTo(root) {\n    return new MDCList(root);\n  }\n\n  destroy() {\n    this.root_.removeEventListener('keydown', this.handleKeydown_);\n    this.root_.removeEventListener('click', this.handleClick_);\n    this.root_.removeEventListener('focusin', this.focusInEventListener_);\n    this.root_.removeEventListener('focusout', this.focusOutEventListener_);\n  }\n\n  initialSyncWithDOM() {\n    this.handleClick_ = this.handleClickEvent_.bind(this);\n    this.handleKeydown_ = this.handleKeydownEvent_.bind(this);\n    this.focusInEventListener_ = this.handleFocusInEvent_.bind(this);\n    this.focusOutEventListener_ = this.handleFocusOutEvent_.bind(this);\n    this.root_.addEventListener('keydown', this.handleKeydown_);\n    this.root_.addEventListener('focusin', this.focusInEventListener_);\n    this.root_.addEventListener('focusout', this.focusOutEventListener_);\n    this.root_.addEventListener('click', this.handleClick_);\n    this.layout();\n    this.initializeListType();\n  }\n\n  layout() {\n    const direction = this.root_.getAttribute(strings.ARIA_ORIENTATION);\n    this.vertical = direction !== strings.ARIA_ORIENTATION_HORIZONTAL;\n\n    // List items need to have at least tabindex=-1 to be focusable.\n    [].slice.call(this.root_.querySelectorAll('.mdc-list-item:not([tabindex])'))\n      .forEach((ele) => {\n        ele.setAttribute('tabindex', -1);\n      });\n\n    // Child button/a elements are not tabbable until the list item is focused.\n    [].slice.call(this.root_.querySelectorAll(strings.FOCUSABLE_CHILD_ELEMENTS))\n      .forEach((ele) => ele.setAttribute('tabindex', -1));\n\n    this.foundation_.layout();\n  }\n\n  /**\n   * Used to figure out which list item this event is targetting. Or returns -1 if\n   * there is no list item\n   * @param {Event} evt\n   * @private\n   */\n  getListItemIndex_(evt) {\n    let eventTarget = /** @type {HTMLElement} */ (evt.target);\n    let index = -1;\n\n    // Find the first ancestor that is a list item or the list.\n    while (!eventTarget.classList.contains(cssClasses.LIST_ITEM_CLASS)\n    && !eventTarget.classList.contains(cssClasses.ROOT)) {\n      eventTarget = eventTarget.parentElement;\n    }\n\n    // Get the index of the element if it is a list item.\n    if (eventTarget.classList.contains(cssClasses.LIST_ITEM_CLASS)) {\n      index = this.listElements.indexOf(eventTarget);\n    }\n\n    return index;\n  }\n\n  /**\n   * Used to figure out which element was clicked before sending the event to the foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleFocusInEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n    this.foundation_.handleFocusIn(evt, index);\n  }\n\n  /**\n   * Used to figure out which element was clicked before sending the event to the foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleFocusOutEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n    this.foundation_.handleFocusOut(evt, index);\n  }\n\n  /**\n   * Used to figure out which element was focused when keydown event occurred before sending the event to the\n   * foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleKeydownEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n\n    if (index >= 0) {\n      this.foundation_.handleKeydown(evt, evt.target.classList.contains(cssClasses.LIST_ITEM_CLASS), index);\n    }\n  }\n\n  /**\n   * Used to figure out which element was clicked before sending the event to the foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleClickEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n\n    // Toggle the checkbox only if it's not the target of the event, or the checkbox will have 2 change events.\n    const toggleCheckbox = !matches(/** @type {!Element} */ (evt.target), strings.CHECKBOX_RADIO_SELECTOR);\n    this.foundation_.handleClick(index, toggleCheckbox);\n  }\n\n  /**\n   * Initialize selectedIndex value based on pre-selected checkbox list items, single selection or radio.\n   */\n  initializeListType() {\n    const checkboxListItems = this.root_.querySelectorAll(strings.ARIA_ROLE_CHECKBOX_SELECTOR);\n    const singleSelectedListItem = this.root_.querySelector(`.${cssClasses.LIST_ITEM_ACTIVATED_CLASS},\n        .${cssClasses.LIST_ITEM_SELECTED_CLASS}`);\n    const radioSelectedListItem = this.root_.querySelector(strings.ARIA_CHECKED_RADIO_SELECTOR);\n\n    if (checkboxListItems.length) {\n      const preselectedItems = this.root_.querySelectorAll(strings.ARIA_CHECKED_CHECKBOX_SELECTOR);\n      this.selectedIndex = [].map.call(preselectedItems, (listItem) => this.listElements.indexOf(listItem));\n    } else if (singleSelectedListItem) {\n      if (singleSelectedListItem.classList.contains(cssClasses.LIST_ITEM_ACTIVATED_CLASS)) {\n        this.foundation_.setUseActivatedClass(true);\n      }\n\n      this.singleSelection = true;\n      this.selectedIndex = this.listElements.indexOf(singleSelectedListItem);\n    } else if (radioSelectedListItem) {\n      this.selectedIndex = this.listElements.indexOf(radioSelectedListItem);\n    }\n  }\n\n  /** @param {boolean} value */\n  set vertical(value) {\n    this.foundation_.setVerticalOrientation(value);\n  }\n\n  /** @return Array<!Element>*/\n  get listElements() {\n    return [].slice.call(this.root_.querySelectorAll(strings.ENABLED_ITEMS_SELECTOR));\n  }\n\n  /** @param {boolean} value */\n  set wrapFocus(value) {\n    this.foundation_.setWrapFocus(value);\n  }\n\n  /** @param {boolean} isSingleSelectionList */\n  set singleSelection(isSingleSelectionList) {\n    this.foundation_.setSingleSelection(isSingleSelectionList);\n  }\n\n  /** @return {!Index} */\n  get selectedIndex() {\n    return this.foundation_.getSelectedIndex();\n  }\n\n  /** @param {!Index} index */\n  set selectedIndex(index) {\n    this.foundation_.setSelectedIndex(index);\n  }\n\n  /** @return {!MDCListFoundation} */\n  getDefaultFoundation() {\n    return new MDCListFoundation(/** @type {!MDCListAdapter} */ (Object.assign({\n      getListItemCount: () => this.listElements.length,\n      getFocusedElementIndex: () => this.listElements.indexOf(document.activeElement),\n      setAttributeForElementIndex: (index, attr, value) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.setAttribute(attr, value);\n        }\n      },\n      removeAttributeForElementIndex: (index, attr) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.removeAttribute(attr);\n        }\n      },\n      addClassForElementIndex: (index, className) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.classList.add(className);\n        }\n      },\n      removeClassForElementIndex: (index, className) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.classList.remove(className);\n        }\n      },\n      focusItemAtIndex: (index) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.focus();\n        }\n      },\n      setTabIndexForListItemChildren: (listItemIndex, tabIndexValue) => {\n        const element = this.listElements[listItemIndex];\n        const listItemChildren = [].slice.call(element.querySelectorAll(strings.CHILD_ELEMENTS_TO_TOGGLE_TABINDEX));\n        listItemChildren.forEach((ele) => ele.setAttribute('tabindex', tabIndexValue));\n      },\n      hasCheckboxAtIndex: (index) => {\n        const listItem = this.listElements[index];\n        return !!listItem.querySelector(strings.CHECKBOX_SELECTOR);\n      },\n      hasRadioAtIndex: (index) => {\n        const listItem = this.listElements[index];\n        return !!listItem.querySelector(strings.RADIO_SELECTOR);\n      },\n      isCheckboxCheckedAtIndex: (index) => {\n        const listItem = this.listElements[index];\n        const toggleEl = listItem.querySelector(strings.CHECKBOX_SELECTOR);\n        return toggleEl.checked;\n      },\n      setCheckedCheckboxOrRadioAtIndex: (index, isChecked) => {\n        const listItem = this.listElements[index];\n        const toggleEl = listItem.querySelector(strings.CHECKBOX_RADIO_SELECTOR);\n        toggleEl.checked = isChecked;\n\n        const event = document.createEvent('Event');\n        event.initEvent('change', true, true);\n        toggleEl.dispatchEvent(event);\n      },\n      notifyAction: (index) => {\n        this.emit(strings.ACTION_EVENT, index, /** shouldBubble */ true);\n      },\n      isFocusInsideList: () => {\n        return this.root_.contains(document.activeElement);\n      },\n    })));\n  }\n}\n\nexport {MDCList, MDCListFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element}\n */\nfunction closest(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  let el = element;\n  while (el) {\n    if (matches(el, selector)) {\n      return el;\n    }\n    el = el.parentElement;\n  }\n  return null;\n}\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {boolean}\n */\nfunction matches(element, selector) {\n  const nativeMatches = element.matches\n    || element.webkitMatchesSelector\n    || element.msMatchesSelector;\n  return nativeMatches.call(element, selector);\n}\n\nexport {closest, matches};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCListAdapter from './adapter';\nimport {strings, cssClasses, Index} from './constants'; // eslint-disable-line no-unused-vars\n\nconst ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\n\nclass MDCListFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCListAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCListAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCListAdapter} */ ({\n      getListItemCount: () => {},\n      getFocusedElementIndex: () => {},\n      setAttributeForElementIndex: () => {},\n      removeAttributeForElementIndex: () => {},\n      addClassForElementIndex: () => {},\n      removeClassForElementIndex: () => {},\n      focusItemAtIndex: () => {},\n      setTabIndexForListItemChildren: () => {},\n      hasRadioAtIndex: () => {},\n      hasCheckboxAtIndex: () => {},\n      isCheckboxCheckedAtIndex: () => {},\n      setCheckedCheckboxOrRadioAtIndex: () => {},\n      notifyAction: () => {},\n      isFocusInsideList: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCListAdapter=} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCListFoundation.defaultAdapter, adapter));\n    /** @private {boolean} */\n    this.wrapFocus_ = false;\n\n    /** @private {boolean} */\n    this.isVertical_ = true;\n\n    /** @private {boolean} */\n    this.isSingleSelectionList_ = false;\n\n    /** @private {!Index} */\n    this.selectedIndex_ = -1;\n\n    /** @private {number} */\n    this.focusedItemIndex_ = -1;\n\n    /** @private {boolean} */\n    this.useActivatedClass_ = false;\n\n    /** @private {boolean} */\n    this.isCheckboxList_ = false;\n\n    /** @private {boolean} */\n    this.isRadioList_ = false;\n  }\n\n  layout() {\n    if (this.adapter_.getListItemCount() === 0) return;\n\n    if (this.adapter_.hasCheckboxAtIndex(0)) {\n      this.isCheckboxList_ = true;\n    } else if (this.adapter_.hasRadioAtIndex(0)) {\n      this.isRadioList_ = true;\n    }\n  }\n\n  /**\n   * Sets the private wrapFocus_ variable.\n   * @param {boolean} value\n   */\n  setWrapFocus(value) {\n    this.wrapFocus_ = value;\n  }\n\n  /**\n   * Sets the isVertical_ private variable.\n   * @param {boolean} value\n   */\n  setVerticalOrientation(value) {\n    this.isVertical_ = value;\n  }\n\n  /**\n   * Sets the isSingleSelectionList_ private variable.\n   * @param {boolean} value\n   */\n  setSingleSelection(value) {\n    this.isSingleSelectionList_ = value;\n  }\n\n  /**\n   * Sets the useActivatedClass_ private variable.\n   * @param {boolean} useActivated\n   */\n  setUseActivatedClass(useActivated) {\n    this.useActivatedClass_ = useActivated;\n  }\n\n  /** @return {!Index} */\n  getSelectedIndex() {\n    return this.selectedIndex_;\n  }\n\n  /** @param {!Index} index */\n  setSelectedIndex(index) {\n    if (!this.isIndexValid_(index)) return;\n\n    if (this.isCheckboxList_) {\n      this.setCheckboxAtIndex_(/** @type {!Array<number>} */ (index));\n    } else if (this.isRadioList_) {\n      this.setRadioAtIndex_(/** @type {number} */ (index));\n    } else {\n      this.setSingleSelectionAtIndex_(/** @type {number} */ (index));\n    }\n  }\n\n  /**\n   * Focus in handler for the list items.\n   * @param evt\n   * @param {number} listItemIndex\n   */\n  handleFocusIn(evt, listItemIndex) {\n    if (listItemIndex >= 0) {\n      this.adapter_.setTabIndexForListItemChildren(listItemIndex, 0);\n    }\n  }\n\n  /**\n   * Focus out handler for the list items.\n   * @param {Event} evt\n   * @param {number} listItemIndex\n   */\n  handleFocusOut(evt, listItemIndex) {\n    if (listItemIndex >= 0) {\n      this.adapter_.setTabIndexForListItemChildren(listItemIndex, -1);\n    }\n\n    /**\n     * Between Focusout & Focusin some browsers do not have focus on any element. Setting a delay to wait till the focus\n     * is moved to next element.\n     */\n    setTimeout(() => {\n      if (!this.adapter_.isFocusInsideList()) {\n        this.setTabindexToFirstSelectedItem_();\n      }\n    }, 0);\n  }\n\n  /**\n   * Key handler for the list.\n   * @param {Event} evt\n   * @param {boolean} isRootListItem\n   * @param {number} listItemIndex\n   */\n  handleKeydown(evt, isRootListItem, listItemIndex) {\n    const arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;\n    const arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;\n    const arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;\n    const arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;\n    const isHome = evt.key === 'Home' || evt.keyCode === 36;\n    const isEnd = evt.key === 'End' || evt.keyCode === 35;\n    const isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n    const isSpace = evt.key === 'Space' || evt.keyCode === 32;\n\n    let currentIndex = this.adapter_.getFocusedElementIndex();\n    let nextIndex = -1;\n    if (currentIndex === -1) {\n      currentIndex = listItemIndex;\n      if (currentIndex < 0) {\n        // If this event doesn't have a mdc-list-item ancestor from the\n        // current list (not from a sublist), return early.\n        return;\n      }\n    }\n\n    if ((this.isVertical_ && arrowDown) || (!this.isVertical_ && arrowRight)) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusNextElement(currentIndex);\n    } else if ((this.isVertical_ && arrowUp) || (!this.isVertical_ && arrowLeft)) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusPrevElement(currentIndex);\n    } else if (isHome) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusFirstElement();\n    } else if (isEnd) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusLastElement();\n    } else if (isEnter || isSpace) {\n      if (isRootListItem) {\n        // Return early if enter key is pressed on anchor element which triggers synthetic MouseEvent event.\n        if (evt.target.tagName === 'A' && isEnter) return;\n        this.preventDefaultEvent_(evt);\n\n        if (this.isSelectableList_()) {\n          this.setSelectedIndexOnAction_(currentIndex);\n        }\n\n        this.adapter_.notifyAction(currentIndex);\n      }\n    }\n\n    this.focusedItemIndex_ = currentIndex;\n\n    if (nextIndex >= 0) {\n      this.setTabindexAtIndex_(nextIndex);\n      this.focusedItemIndex_ = nextIndex;\n    }\n  }\n\n  /**\n   * Click handler for the list.\n   * @param {number} index\n   * @param {boolean} toggleCheckbox\n   */\n  handleClick(index, toggleCheckbox) {\n    if (index === -1) return;\n\n    if (this.isSelectableList_()) {\n      this.setSelectedIndexOnAction_(index, toggleCheckbox);\n    }\n\n    this.adapter_.notifyAction(index);\n\n    this.setTabindexAtIndex_(index);\n    this.focusedItemIndex_ = index;\n  }\n\n  /**\n   * Ensures that preventDefault is only called if the containing element doesn't\n   * consume the event, and it will cause an unintended scroll.\n   * @param {Event} evt\n   * @private\n   */\n  preventDefaultEvent_(evt) {\n    const tagName = `${evt.target.tagName}`.toLowerCase();\n    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n      evt.preventDefault();\n    }\n  }\n\n  /**\n   * Focuses the next element on the list.\n   * @param {number} index\n   * @return {number}\n   */\n  focusNextElement(index) {\n    const count = this.adapter_.getListItemCount();\n    let nextIndex = index + 1;\n    if (nextIndex >= count) {\n      if (this.wrapFocus_) {\n        nextIndex = 0;\n      } else {\n        // Return early because last item is already focused.\n        return index;\n      }\n    }\n    this.adapter_.focusItemAtIndex(nextIndex);\n\n    return nextIndex;\n  }\n\n  /**\n   * Focuses the previous element on the list.\n   * @param {number} index\n   * @return {number}\n   */\n  focusPrevElement(index) {\n    let prevIndex = index - 1;\n    if (prevIndex < 0) {\n      if (this.wrapFocus_) {\n        prevIndex = this.adapter_.getListItemCount() - 1;\n      } else {\n        // Return early because first item is already focused.\n        return index;\n      }\n    }\n    this.adapter_.focusItemAtIndex(prevIndex);\n\n    return prevIndex;\n  }\n\n  /**\n   * @return {number}\n   */\n  focusFirstElement() {\n    this.adapter_.focusItemAtIndex(0);\n    return 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  focusLastElement() {\n    const lastIndex = this.adapter_.getListItemCount() - 1;\n    this.adapter_.focusItemAtIndex(lastIndex);\n    return lastIndex;\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  setSingleSelectionAtIndex_(index) {\n    let selectedClassName = cssClasses.LIST_ITEM_SELECTED_CLASS;\n    if (this.useActivatedClass_) {\n      selectedClassName = cssClasses.LIST_ITEM_ACTIVATED_CLASS;\n    }\n\n    if (this.selectedIndex_ >= 0 && this.selectedIndex_ !== index) {\n      this.adapter_.removeClassForElementIndex(this.selectedIndex_, selectedClassName);\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, strings.ARIA_SELECTED, 'false');\n    }\n\n    this.adapter_.addClassForElementIndex(index, selectedClassName);\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_SELECTED, 'true');\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * Toggles radio at give index. Radio doesn't change the checked state if it is already checked.\n   * @param {number} index\n   * @private\n   */\n  setRadioAtIndex_(index) {\n    this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, true);\n\n    if (this.selectedIndex_ >= 0) {\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, strings.ARIA_CHECKED, 'false');\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_CHECKED, 'true');\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * @param {!Array<number>} index\n   * @private\n   */\n  setCheckboxAtIndex_(index) {\n    for (let i = 0; i < this.adapter_.getListItemCount(); i++) {\n      let isChecked = false;\n      if (index.indexOf(i) >= 0) {\n        isChecked = true;\n      }\n\n      this.adapter_.setCheckedCheckboxOrRadioAtIndex(i, isChecked);\n      this.adapter_.setAttributeForElementIndex(i, strings.ARIA_CHECKED, isChecked ? 'true' : 'false');\n    }\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  setTabindexAtIndex_(index) {\n    if (this.focusedItemIndex_ === -1 && index !== 0) {\n      // If no list item was selected set first list item's tabindex to -1.\n      // Generally, tabindex is set to 0 on first list item of list that has no preselected items.\n      this.adapter_.setAttributeForElementIndex(0, 'tabindex', -1);\n    } else if (this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {\n      this.adapter_.setAttributeForElementIndex(this.focusedItemIndex_, 'tabindex', -1);\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, 'tabindex', 0);\n  }\n\n  /**\n   * @return {boolean} Return true if it is single selectin list, checkbox list or radio list.\n   * @private\n   */\n  isSelectableList_() {\n    return this.isSingleSelectionList_ || this.isCheckboxList_ || this.isRadioList_;\n  }\n\n  /** @private */\n  setTabindexToFirstSelectedItem_() {\n    let targetIndex = 0;\n\n    if (this.isSelectableList_()) {\n      if (typeof this.selectedIndex_ === 'number' && this.selectedIndex_ !== -1) {\n        targetIndex = this.selectedIndex_;\n      } else if (this.selectedIndex_ instanceof Array && this.selectedIndex_.length > 0) {\n        targetIndex = this.selectedIndex_.reduce((currentIndex, minIndex) => Math.min(currentIndex, minIndex));\n      }\n    }\n\n    this.setTabindexAtIndex_(targetIndex);\n  }\n\n  /**\n   * @param {!Index} index\n   * @return {boolean}\n   * @private\n   */\n  isIndexValid_(index) {\n    if (index instanceof Array) {\n      if (!this.isCheckboxList_) {\n        throw new Error('MDCListFoundation: Array of index is only supported for checkbox based list');\n      }\n\n      if (index.length === 0) {\n        return true;\n      } else {\n        return index.some((i) => this.isIndexInRange_(i));\n      }\n    } else if (typeof index === 'number') {\n      if (this.isCheckboxList_) {\n        throw new Error('MDCListFoundation: Expected array of index for checkbox based list but got number: ' + index);\n      }\n      return this.isIndexInRange_(index);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @return {boolean}\n   * @private\n   */\n  isIndexInRange_(index) {\n    const listSize = this.adapter_.getListItemCount();\n    return index >= 0 && index < listSize;\n  }\n\n  /**\n   * @param {number} index\n   * @param {boolean=} toggleCheckbox\n   * @private\n   */\n  setSelectedIndexOnAction_(index, toggleCheckbox = true) {\n    if (this.isCheckboxList_) {\n      this.toggleCheckboxAtIndex_(index, toggleCheckbox);\n    } else {\n      this.setSelectedIndex(index);\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @param {boolean} toggleCheckbox\n   * @private\n   */\n  toggleCheckboxAtIndex_(index, toggleCheckbox) {\n    let isChecked = this.adapter_.isCheckboxCheckedAtIndex(index);\n\n    if (toggleCheckbox) {\n      isChecked = !isChecked;\n      this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, isChecked);\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_CHECKED, isChecked ? 'true' : 'false');\n\n    // If none of the checkbox items are selected and selectedIndex is not initialized then provide a default value.\n    if (this.selectedIndex_ === -1) {\n      this.selectedIndex_ = [];\n    }\n\n    if (isChecked) {\n      this.selectedIndex_.push(index);\n    } else {\n      this.selectedIndex_ = this.selectedIndex_.filter((i) => i !== index);\n    }\n  }\n}\n\nexport default MDCListFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-list',\n  LIST_ITEM_CLASS: 'mdc-list-item',\n  LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',\n  LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_ORIENTATION: 'aria-orientation',\n  ARIA_ORIENTATION_HORIZONTAL: 'horizontal',\n  ARIA_SELECTED: 'aria-selected',\n  ARIA_CHECKED: 'aria-checked',\n  ARIA_CHECKED_RADIO_SELECTOR: '[role=\"radio\"][aria-checked=\"true\"]',\n  ARIA_ROLE_CHECKBOX_SELECTOR: '[role=\"checkbox\"]',\n  ARIA_CHECKED_CHECKBOX_SELECTOR: '[role=\"checkbox\"][aria-checked=\"true\"]',\n  RADIO_SELECTOR: 'input[type=\"radio\"]:not(:disabled)',\n  CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled)',\n  CHECKBOX_RADIO_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled), input[type=\"radio\"]:not(:disabled)',\n  CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled),\n  .${cssClasses.LIST_ITEM_CLASS} a`,\n  FOCUSABLE_CHILD_ELEMENTS: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled), .${cssClasses.LIST_ITEM_CLASS} a,\n  .${cssClasses.LIST_ITEM_CLASS} input[type=\"radio\"]:not(:disabled),\n  .${cssClasses.LIST_ITEM_CLASS} input[type=\"checkbox\"]:not(:disabled)`,\n  ENABLED_ITEMS_SELECTOR: '.mdc-list-item:not(.mdc-list-item--disabled)',\n  ACTION_EVENT: 'MDCList:action',\n};\n\n/** @typedef {number|!Array<number>} */\nlet Index;\n\nexport {strings, cssClasses, Index};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC List. Provides an interface for managing focus.\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCListAdapter {\n  /** @return {number} */\n  getListItemCount() {}\n\n  /**\n   * @return {number} */\n  getFocusedElementIndex() {}\n\n  /**\n   * @param {number} index\n   * @param {string} attribute\n   * @param {string} value\n   */\n  setAttributeForElementIndex(index, attribute, value) {}\n\n  /**\n   * @param {number} index\n   * @param {string} attribute\n   */\n  removeAttributeForElementIndex(index, attribute) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  addClassForElementIndex(index, className) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  removeClassForElementIndex(index, className) {}\n\n  /**\n   * Focuses list item at the index specified.\n   * @param {number} index\n   */\n  focusItemAtIndex(index) {}\n\n  /**\n   * Sets the tabindex to the value specified for all button/a element children of\n   * the list item at the index specified.\n   * @param {number} listItemIndex\n   * @param {number} tabIndexValue\n   */\n  setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {}\n\n  /**\n   * @param {number} index\n   * @return {boolean} Returns true if radio button is present at given list item index.\n   */\n  hasRadioAtIndex(index) {}\n\n  /**\n   * @param {number} index\n   * @return {boolean} Returns true if checkbox is present at given list item index.\n   */\n  hasCheckboxAtIndex(index) {}\n\n  /**\n   * @param {number} index\n   * @return {boolean} Returns true if checkbox inside a list item is checked.\n   */\n  isCheckboxCheckedAtIndex(index) {}\n\n  /**\n   * Sets the checked status of checkbox or radio at given list item index.\n   * @param {number} index\n   * @param {boolean} isChecked\n   */\n  setCheckedCheckboxOrRadioAtIndex(index, isChecked) {}\n\n  /**\n   * Notifies user action on list item.\n   */\n  notifyAction(index) {}\n\n  /**\n   * @return {boolean} Returns true when the current focused element is inside list root.\n   */\n  isFocusInsideList() {}\n}\n\nexport default MDCListAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCDismissibleDrawerFoundation from '../dismissible/foundation';\n\n/**\n * @extends {MDCDismissibleDrawerFoundation}\n */\nclass MDCModalDrawerFoundation extends MDCDismissibleDrawerFoundation {\n  /**\n   * Called when drawer finishes open animation.\n   * @override\n   */\n  opened() {\n    this.adapter_.trapFocus();\n  }\n\n  /**\n   * Called when drawer finishes close animation.\n   * @override\n   */\n  closed() {\n    this.adapter_.releaseFocus();\n  }\n\n  /**\n   * Handles click event on scrim.\n   */\n  handleScrimClick() {\n    this.close();\n  }\n}\n\nexport default MDCModalDrawerFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCDrawerAdapter from '../adapter';\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings} from '../constants';\n\n/**\n * @extends {MDCFoundation<!MDCDrawerAdapter>}\n */\nclass MDCDismissibleDrawerFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get defaultAdapter() {\n    return /** @type {!MDCDrawerAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => {},\n      elementHasClass: (/* element: !Element, className: string */) => {},\n      notifyClose: () => {},\n      notifyOpen: () => {},\n      saveFocus: () => {},\n      restoreFocus: () => {},\n      focusActiveNavigationItem: () => {},\n      trapFocus: () => {},\n      releaseFocus: () => {},\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCDismissibleDrawerFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.animationFrame_ = 0;\n\n    /** @private {number} */\n    this.animationTimer_ = 0;\n  }\n\n  destroy() {\n    if (this.animationFrame_) {\n      cancelAnimationFrame(this.animationFrame_);\n    }\n    if (this.animationTimer_) {\n      clearTimeout(this.animationTimer_);\n    }\n  }\n\n  /**\n   * Function to open the drawer.\n   */\n  open() {\n    if (this.isOpen() || this.isOpening() || this.isClosing()) {\n      return;\n    }\n\n    this.adapter_.addClass(cssClasses.OPEN);\n    this.adapter_.addClass(cssClasses.ANIMATE);\n\n    // Wait a frame once display is no longer \"none\", to establish basis for animation\n    this.runNextAnimationFrame_(() => {\n      this.adapter_.addClass(cssClasses.OPENING);\n    });\n\n    this.adapter_.saveFocus();\n  }\n\n  /**\n   * Function to close the drawer.\n   */\n  close() {\n    if (!this.isOpen() || this.isOpening() || this.isClosing()) {\n      return;\n    }\n\n    this.adapter_.addClass(cssClasses.CLOSING);\n  }\n\n  /**\n   * Extension point for when drawer finishes open animation.\n   * @protected\n   */\n  opened() {}\n\n  /**\n   * Extension point for when drawer finishes close animation.\n   * @protected\n   */\n  closed() {}\n\n  /**\n   * Returns true if drawer is in open state.\n   * @return {boolean}\n   */\n  isOpen() {\n    return this.adapter_.hasClass(cssClasses.OPEN);\n  }\n\n  /**\n   * Returns true if drawer is animating open.\n   * @return {boolean}\n   */\n  isOpening() {\n    return this.adapter_.hasClass(cssClasses.OPENING) || this.adapter_.hasClass(cssClasses.ANIMATE);\n  }\n\n  /**\n   * Returns true if drawer is animating closed.\n   * @return {boolean}\n   */\n  isClosing() {\n    return this.adapter_.hasClass(cssClasses.CLOSING);\n  }\n\n  /**\n   * Keydown handler to close drawer when key is escape.\n   * @param evt\n   */\n  handleKeydown(evt) {\n    const {keyCode, key} = evt;\n\n    const isEscape = key === 'Escape' || keyCode === 27;\n    if (isEscape) {\n      this.close();\n    }\n  }\n\n  /**\n   * Handles a transition end event on the root element.\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    const {OPENING, CLOSING, OPEN, ANIMATE, ROOT} = cssClasses;\n\n    // In Edge, transitionend on ripple pseudo-elements yields a target without classList, so check for Element first.\n    const isElement = evt.target instanceof Element;\n    if (!isElement || !this.adapter_.elementHasClass(/** @type {!Element} */ (evt.target), ROOT)) {\n      return;\n    }\n\n    if (this.isClosing()) {\n      this.adapter_.removeClass(OPEN);\n      this.closed();\n      this.adapter_.restoreFocus();\n      this.adapter_.notifyClose();\n    } else {\n      this.adapter_.focusActiveNavigationItem();\n      this.opened();\n      this.adapter_.notifyOpen();\n    }\n\n    this.adapter_.removeClass(ANIMATE);\n    this.adapter_.removeClass(OPENING);\n    this.adapter_.removeClass(CLOSING);\n  }\n\n  /**\n   * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.\n   * @param {Function} callback\n   * @private\n   */\n  runNextAnimationFrame_(callback) {\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = requestAnimationFrame(() => {\n      this.animationFrame_ = 0;\n      clearTimeout(this.animationTimer_);\n      this.animationTimer_ = setTimeout(callback, 0);\n    });\n  }\n}\n\nexport default MDCDismissibleDrawerFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-drawer',\n  DISMISSIBLE: 'mdc-drawer--dismissible',\n  MODAL: 'mdc-drawer--modal',\n  OPEN: 'mdc-drawer--open',\n  ANIMATE: 'mdc-drawer--animate',\n  OPENING: 'mdc-drawer--opening',\n  CLOSING: 'mdc-drawer--closing',\n};\n\n/** @enum {string} */\nconst strings = {\n  APP_CONTENT_SELECTOR: '.mdc-drawer-app-content',\n  SCRIM_SELECTOR: '.mdc-drawer-scrim',\n  CLOSE_EVENT: 'MDCDrawer:closed',\n  OPEN_EVENT: 'MDCDrawer:opened',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Drawer\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Drawer into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCDrawerAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root Element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * @param {!Element} element target element to verify class name\n   * @param {string} className class name\n   */\n  elementHasClass(element, className) {}\n\n  /**\n   * Saves the focus of currently active element.\n   */\n  saveFocus() {}\n\n  /**\n   * Restores focus to element previously saved with 'saveFocus'.\n   */\n  restoreFocus() {}\n\n  /**\n   * Focuses the active / selected navigation item.\n   */\n  focusActiveNavigationItem() {}\n\n  /**\n   * Emits a custom event \"MDCDrawer:closed\" denoting the drawer has closed.\n   */\n  notifyClose() {}\n\n  /**\n   * Emits a custom event \"MDCDrawer:opened\" denoting the drawer has opened.\n   */\n  notifyOpen() {}\n\n  /**\n   * Traps focus on root element and focuses the active navigation element.\n   */\n  trapFocus() {}\n\n  /**\n   * Releases focus trap from root element which was set by `trapFocus`\n   * and restores focus to where it was prior to calling `trapFocus`.\n   */\n  releaseFocus() {}\n}\n\nexport default MDCDrawerAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","var tabbable = require('tabbable');\nvar xtend = require('xtend');\n\nvar activeFocusTraps = (function() {\n  var trapQueue = [];\n  return {\n    activateTrap: function(trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n\n    deactivateTrap: function(trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n})();\n\nfunction focusTrap(element, userOptions) {\n  var doc = document;\n  var container =\n    typeof element === 'string' ? doc.querySelector(element) : element;\n\n  var config = xtend(\n    {\n      returnFocusOnDeactivate: true,\n      escapeDeactivates: true\n    },\n    userOptions\n  );\n\n  var state = {\n    firstTabbableNode: null,\n    lastTabbableNode: null,\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (state.active) return;\n\n    updateTabbableNodes();\n\n    state.active = true;\n    state.paused = false;\n    state.nodeFocusedBeforeActivation = doc.activeElement;\n\n    var onActivate =\n      activateOptions && activateOptions.onActivate\n        ? activateOptions.onActivate\n        : config.onActivate;\n    if (onActivate) {\n      onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!state.active) return;\n\n    removeListeners();\n    state.active = false;\n    state.paused = false;\n\n    activeFocusTraps.deactivateTrap(trap);\n\n    var onDeactivate =\n      deactivateOptions && deactivateOptions.onDeactivate !== undefined\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate;\n    if (onDeactivate) {\n      onDeactivate();\n    }\n\n    var returnFocus =\n      deactivateOptions && deactivateOptions.returnFocus !== undefined\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate;\n    if (returnFocus) {\n      delay(function() {\n        tryFocus(state.nodeFocusedBeforeActivation);\n      });\n    }\n\n    return trap;\n  }\n\n  function pause() {\n    if (state.paused || !state.active) return;\n    state.paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!state.paused || !state.active) return;\n    state.paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!state.active) return;\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trap);\n\n    updateTabbableNodes();\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    delay(function() {\n      tryFocus(getInitialFocusNode());\n    });\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, true);\n    doc.addEventListener('touchstart', checkPointerDown, true);\n    doc.addEventListener('click', checkClick, true);\n    doc.addEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!state.active) return;\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function getInitialFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        \"You can't have a focus-trap without at least one focusable element\"\n      );\n    }\n\n    return node;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  function checkPointerDown(e) {\n    if (container.contains(e.target)) return;\n    if (config.clickOutsideDeactivates) {\n      deactivate({\n        returnFocus: !tabbable.isFocusable(e.target)\n      });\n    } else {\n      e.preventDefault();\n    }\n  }\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  function checkFocusIn(e) {\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (container.contains(e.target) || e.target instanceof Document) {\n      return;\n    }\n    e.stopImmediatePropagation();\n    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n  }\n\n  function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      deactivate();\n      return;\n    }\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  }\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  function checkTab(e) {\n    updateTabbableNodes();\n    if (e.shiftKey && e.target === state.firstTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.lastTabbableNode);\n      return;\n    }\n    if (!e.shiftKey && e.target === state.lastTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.firstTabbableNode);\n      return;\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function updateTabbableNodes() {\n    var tabbableNodes = tabbable(container);\n    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();\n    state.lastTabbableNode =\n      tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();\n  }\n\n  function tryFocus(node) {\n    if (node === doc.activeElement) return;\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus();\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  }\n}\n\nfunction isSelectableInput(node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}\n\nfunction delay(fn) {\n  return setTimeout(fn, 0);\n}\n\nmodule.exports = focusTrap;\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","var candidateSelectors = [\n  'input',\n  'select',\n  'textarea',\n  'a[href]',\n  'button',\n  '[tabindex]',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n];\nvar candidateSelector = candidateSelectors.join(',');\n\nvar matches = typeof Element === 'undefined'\n  ? function () {}\n  : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\nfunction tabbable(el, options) {\n  options = options || {};\n\n  var elementDocument = el.ownerDocument || el;\n  var regularTabbables = [];\n  var orderedTabbables = [];\n\n  var untouchabilityChecker = new UntouchabilityChecker(elementDocument);\n  var candidates = el.querySelectorAll(candidateSelector);\n\n  if (options.includeContainer) {\n    if (matches.call(el, candidateSelector)) {\n      candidates = Array.prototype.slice.apply(candidates);\n      candidates.unshift(el);\n    }\n  }\n\n  var i, candidate, candidateTabindex;\n  for (i = 0; i < candidates.length; i++) {\n    candidate = candidates[i];\n\n    if (!isNodeMatchingSelectorTabbable(candidate, untouchabilityChecker)) continue;\n\n    candidateTabindex = getTabindex(candidate);\n    if (candidateTabindex === 0) {\n      regularTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        node: candidate,\n      });\n    }\n  }\n\n  var tabbableNodes = orderedTabbables\n    .sort(sortOrderedTabbables)\n    .map(function(a) { return a.node })\n    .concat(regularTabbables);\n\n  return tabbableNodes;\n}\n\ntabbable.isTabbable = isTabbable;\ntabbable.isFocusable = isFocusable;\n\nfunction isNodeMatchingSelectorTabbable(node, untouchabilityChecker) {\n  if (\n    !isNodeMatchingSelectorFocusable(node, untouchabilityChecker)\n    || isNonTabbableRadio(node)\n    || getTabindex(node) < 0\n  ) {\n    return false;\n  }\n  return true;\n}\n\nfunction isTabbable(node, untouchabilityChecker) {\n  if (!node) throw new Error('No node provided');\n  if (matches.call(node, candidateSelector) === false) return false;\n  return isNodeMatchingSelectorTabbable(node, untouchabilityChecker);\n}\n\nfunction isNodeMatchingSelectorFocusable(node, untouchabilityChecker) {\n  untouchabilityChecker = untouchabilityChecker || new UntouchabilityChecker(node.ownerDocument || node);\n  if (\n    node.disabled\n    || isHiddenInput(node)\n    || untouchabilityChecker.isUntouchable(node)\n  ) {\n    return false;\n  }\n  return true;\n}\n\nvar focusableCandidateSelector = candidateSelectors.concat('iframe').join(',');\nfunction isFocusable(node, untouchabilityChecker) {\n  if (!node) throw new Error('No node provided');\n  if (matches.call(node, focusableCandidateSelector) === false) return false;\n  return isNodeMatchingSelectorFocusable(node, untouchabilityChecker);\n}\n\nfunction getTabindex(node) {\n  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n  if (!isNaN(tabindexAttr)) return tabindexAttr;\n  // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n  if (isContentEditable(node)) return 0;\n  return node.tabIndex;\n}\n\nfunction sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n}\n\n// Array.prototype.find not available in IE.\nfunction find(list, predicate) {\n  for (var i = 0, length = list.length; i < length; i++) {\n    if (predicate(list[i])) return list[i];\n  }\n}\n\nfunction isContentEditable(node) {\n  return node.contentEditable === 'true';\n}\n\nfunction isInput(node) {\n  return node.tagName === 'INPUT';\n}\n\nfunction isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n}\n\nfunction isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n}\n\nfunction isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n}\n\nfunction getCheckedRadio(nodes) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked) {\n      return nodes[i];\n    }\n  }\n}\n\nfunction isTabbableRadio(node) {\n  if (!node.name) return true;\n  // This won't account for the edge case where you have radio groups with the same\n  // in separate forms on the same page.\n  var radioSet = node.ownerDocument.querySelectorAll('input[type=\"radio\"][name=\"' + node.name + '\"]');\n  var checked = getCheckedRadio(radioSet);\n  return !checked || checked === node;\n}\n\n// An element is \"untouchable\" if *it or one of its ancestors* has\n// `visibility: hidden` or `display: none`.\nfunction UntouchabilityChecker(elementDocument) {\n  this.doc = elementDocument;\n  // Node cache must be refreshed on every check, in case\n  // the content of the element has changed. The cache contains tuples\n  // mapping nodes to their boolean result.\n  this.cache = [];\n}\n\n// getComputedStyle accurately reflects `visibility: hidden` of ancestors\n// but not `display: none`, so we need to recursively check parents.\nUntouchabilityChecker.prototype.hasDisplayNone = function hasDisplayNone(node, nodeComputedStyle) {\n  if (node.nodeType !== Node.ELEMENT_NODE) return false;\n\n    // Search for a cached result.\n    var cached = find(this.cache, function(item) {\n      return item === node;\n    });\n    if (cached) return cached[1];\n\n    nodeComputedStyle = nodeComputedStyle || this.doc.defaultView.getComputedStyle(node);\n\n    var result = false;\n\n    if (nodeComputedStyle.display === 'none') {\n      result = true;\n    } else if (node.parentNode) {\n      result = this.hasDisplayNone(node.parentNode);\n    }\n\n    this.cache.push([node, result]);\n\n    return result;\n}\n\nUntouchabilityChecker.prototype.isUntouchable = function isUntouchable(node) {\n  if (node === this.doc.documentElement) return false;\n  var computedStyle = this.doc.defaultView.getComputedStyle(node);\n  if (this.hasDisplayNone(node, computedStyle)) return true;\n  return computedStyle.visibility === 'hidden';\n}\n\nmodule.exports = tabbable;\n"],"names":["tabbable","xtend"],"mappings":"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"}