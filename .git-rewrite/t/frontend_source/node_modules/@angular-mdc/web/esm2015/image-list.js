/**
 * @license
 * Copyright (c) 2018 Dominic Carretto
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE
 */
import { Directive, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';
import { toBoolean } from '@angular-mdc/web/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class MdcImageListItem {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
    }
}
MdcImageListItem.decorators = [
    { type: Directive, args: [{
                selector: '[mdcImageListItem], mdc-image-list-item',
                exportAs: 'mdcImageListItem',
                host: { 'class': 'mdc-image-list__item' }
            },] },
];
/** @nocollapse */
MdcImageListItem.ctorParameters = () => [
    { type: ElementRef }
];
class MdcImageListImageAspect {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
    }
}
MdcImageListImageAspect.decorators = [
    { type: Component, args: [{selector: '[mdcImageListImageAspect], mdc-image-list-image-aspect',
                exportAs: 'mdcImageListImageAspect',
                template: `
  <div class="mdc-image-list__image-aspect-container">
    <ng-content></ng-content>
  </div>
  `,
                encapsulation: ViewEncapsulation.None
            },] },
];
/** @nocollapse */
MdcImageListImageAspect.ctorParameters = () => [
    { type: ElementRef }
];
class MdcImageListImage {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
    }
}
MdcImageListImage.decorators = [
    { type: Directive, args: [{
                selector: '[mdcImageListImage], mdc-image-list-image',
                exportAs: 'mdcImageListImage',
                host: { 'class': 'mdc-image-list__image' }
            },] },
];
/** @nocollapse */
MdcImageListImage.ctorParameters = () => [
    { type: ElementRef }
];
class MdcImageListSupporting {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
    }
}
MdcImageListSupporting.decorators = [
    { type: Directive, args: [{
                selector: '[mdcImageListSupporting], mdc-image-list-supporting',
                exportAs: 'mdcImageListSupporting',
                host: { 'class': 'mdc-image-list__supporting' }
            },] },
];
/** @nocollapse */
MdcImageListSupporting.ctorParameters = () => [
    { type: ElementRef }
];
class MdcImageListLabel {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
    }
}
MdcImageListLabel.decorators = [
    { type: Directive, args: [{
                selector: '[mdcImageListLabel], mdc-image-list-label',
                exportAs: 'mdcImageListLabel',
                host: { 'class': 'mdc-image-list__label' }
            },] },
];
/** @nocollapse */
MdcImageListLabel.ctorParameters = () => [
    { type: ElementRef }
];
class MdcImageList {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
        this._masonry = false;
        this._textProtection = false;
    }
    /**
     * @return {?}
     */
    get masonry() { return this._masonry; }
    /**
     * @param {?} value
     * @return {?}
     */
    set masonry(value) {
        this._masonry = toBoolean(value);
    }
    /**
     * @return {?}
     */
    get textProtection() { return this._textProtection; }
    /**
     * @param {?} value
     * @return {?}
     */
    set textProtection(value) {
        this._textProtection = toBoolean(value);
    }
}
MdcImageList.decorators = [
    { type: Component, args: [{selector: '[mdc-image-list], mdc-image-list',
                exportAs: 'mdcImageList',
                host: {
                    'class': 'mdc-image-list',
                    '[class.mdc-image-list--masonry]': 'masonry',
                    '[class.mdc-image-list--with-text-protection]': 'textProtection'
                },
                template: '<ng-content></ng-content>',
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None
            },] },
];
/** @nocollapse */
MdcImageList.ctorParameters = () => [
    { type: ElementRef }
];
MdcImageList.propDecorators = {
    masonry: [{ type: Input }],
    textProtection: [{ type: Input }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const IMAGE_LIST_DECLARATIONS = [
    MdcImageList,
    MdcImageListImage,
    MdcImageListImageAspect,
    MdcImageListItem,
    MdcImageListLabel,
    MdcImageListSupporting
];
class MdcImageListModule {
}
MdcImageListModule.decorators = [
    { type: NgModule, args: [{
                exports: IMAGE_LIST_DECLARATIONS,
                declarations: IMAGE_LIST_DECLARATIONS,
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { MdcImageListModule, MdcImageListItem, MdcImageListImageAspect, MdcImageListImage, MdcImageListSupporting, MdcImageListLabel, MdcImageList };
//# sourceMappingURL=image-list.js.map
