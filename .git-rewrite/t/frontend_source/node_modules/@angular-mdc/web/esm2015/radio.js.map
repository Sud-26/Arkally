{"version":3,"file":"radio.js","sources":["../../../packages/radio/radio-module.ts","../../../packages/radio/radio-group.ts","../../../packages/radio/radio.ts","../../../node_modules/@material/radio/index.js","../../../node_modules/@material/radio/foundation.js","../../../node_modules/@material/radio/constants.js","../../../node_modules/@material/radio/adapter.js","../../../node_modules/@material/selection-control/index.js","../../../node_modules/@material/ripple/index.js","../../../node_modules/@material/ripple/foundation.js","../../../node_modules/@material/ripple/util.js","../../../node_modules/@material/ripple/constants.js","../../../node_modules/@material/ripple/adapter.js","../../../node_modules/@material/base/component.js","../../../node_modules/@material/base/foundation.js"],"sourcesContent":["import { NgModule } from '@angular/core';\r\n\r\nimport { MdcFormFieldModule } from '@angular-mdc/web/form-field';\r\nimport { MdcRadioGroup } from './radio-group';\r\nimport { MdcRadio } from './radio';\r\n\r\n@NgModule({\r\n  imports: [MdcFormFieldModule],\r\n  exports: [\r\n    MdcRadio,\r\n    MdcRadioGroup\r\n  ],\r\n  declarations: [\r\n    MdcRadio,\r\n    MdcRadioGroup\r\n  ]\r\n})\r\nexport class MdcRadioModule { }\r\n","import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nimport { toBoolean } from '@angular-mdc/web/common';\r\nimport {\r\n  MdcRadio,\r\n  MdcRadioChange,\r\n  MDC_RADIO_GROUP_PARENT_COMPONENT\r\n} from './radio';\r\n\r\n/**\r\n * Provider Expression that allows mdc-radio-group to register as a ControlValueAccessor. This\r\n * allows it to support [(ngModel)] and ngControl.\r\n */\r\nexport const MDC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MdcRadioGroup),\r\n  multi: true\r\n};\r\n\r\nlet nextUniqueId = 0;\r\n\r\n@Component({\r\n  selector: 'mdc-radio-group, [mdcRadioGroup]',\r\n  exportAs: 'mdcRadioGroup',\r\n  host: {\r\n    'role': 'radiogroup'\r\n  },\r\n  template: '<ng-content></ng-content>',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [\r\n    MDC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\r\n    { provide: MDC_RADIO_GROUP_PARENT_COMPONENT, useExisting: MdcRadioGroup }\r\n  ]\r\n})\r\nexport class MdcRadioGroup implements AfterContentInit, ControlValueAccessor {\r\n  private _name: string = `mdc-radio-group-${nextUniqueId++}`;\r\n\r\n  /** Selected value for the radio group. */\r\n  private _value: any = null;\r\n\r\n  /** Whether the `value` has been set to its initial value. */\r\n  private _isInitialized: boolean = false;\r\n\r\n  @ContentChildren(forwardRef(() => MdcRadio), { descendants: true }) _radios!: QueryList<MdcRadio>;\r\n\r\n  /** Name of the radio button group. All radio buttons inside this group will use this name. */\r\n  @Input()\r\n  get name(): string { return this._name; }\r\n  set name(value: string) {\r\n    this._name = value;\r\n    this._updateRadioButtonNames();\r\n  }\r\n\r\n  /**\r\n   * Value for the radio-group. Should equal the value of the selected radio button if there is\r\n   * a corresponding radio button with a matching value. If there is not such a corresponding\r\n   * radio button, this value persists to be applied in case a new radio button is added with a\r\n   * matching value.\r\n   */\r\n  @Input()\r\n  get value(): any { return this._value; }\r\n  set value(newValue: any) {\r\n    if (this._value !== newValue) {\r\n      // Set this before proceeding to ensure no circular loop occurs with selection.\r\n      this._value = newValue;\r\n\r\n      this._updateSelectedRadioFromValue();\r\n      this._checkSelectedRadioButton();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The currently selected radio button. If set to a new radio button, the radio group value\r\n   * will be updated to match the new selected button.\r\n   */\r\n  @Input()\r\n  get selected() { return this._selected; }\r\n  set selected(selected: MdcRadio | null) {\r\n    this._selected = selected;\r\n    this.value = selected ? selected.value : null;\r\n    this._checkSelectedRadioButton();\r\n  }\r\n  private _selected: MdcRadio | null = null;\r\n\r\n  @Input()\r\n  get required(): boolean { return this._required; }\r\n  set required(value: boolean) {\r\n    this._required = toBoolean(value);\r\n    this._markRadiosForCheck();\r\n  }\r\n  private _required: boolean = false;\r\n\r\n  @Input()\r\n  get disabled(): boolean { return this._disabled; }\r\n  set disabled(value: boolean) {\r\n    this._disabled = toBoolean(value);\r\n    this._updateDisableRadioState(this._disabled);\r\n    this._markRadiosForCheck();\r\n  }\r\n  private _disabled: boolean = false;\r\n\r\n  _checkSelectedRadioButton() {\r\n    if (this._selected && !this._selected.checked) {\r\n      this._selected.checked = true;\r\n    }\r\n  }\r\n\r\n  /** The method to be called in order to update ngModel */\r\n  _controlValueAccessorChangeFn: (value: any) => void = () => { };\r\n\r\n  /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\r\n  onTouched: () => any = () => { };\r\n\r\n  @Output() readonly change: EventEmitter<MdcRadioChange> =\r\n    new EventEmitter<MdcRadioChange>();\r\n\r\n  constructor(\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    public elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngAfterContentInit(): void {\r\n    this._isInitialized = true;\r\n  }\r\n\r\n  _touch() {\r\n    if (this.onTouched) {\r\n      this.onTouched();\r\n    }\r\n  }\r\n\r\n  private _updateRadioButtonNames(): void {\r\n    if (this._radios) {\r\n      this._radios.forEach(radio => {\r\n        radio.name = this.name;\r\n      });\r\n      this._markRadiosForCheck();\r\n    }\r\n  }\r\n\r\n  /** Updates the `selected` radio button from the internal _value state. */\r\n  private _updateSelectedRadioFromValue(): void {\r\n    // If the value already matches the selected radio, do nothing.\r\n    const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\r\n\r\n    if (this._radios && !isAlreadySelected) {\r\n      this._selected = null;\r\n      this._radios.forEach(radio => {\r\n        radio.checked = this.value === radio.value;\r\n        if (radio.checked) {\r\n          this._selected = radio;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private _markRadiosForCheck() {\r\n    if (this._radios) {\r\n      this._radios.forEach(radio => radio.markForCheck());\r\n    }\r\n  }\r\n\r\n  private _updateDisableRadioState(disabled: boolean) {\r\n    if (this._radios) {\r\n      this._radios.forEach(radio => radio.disabled = disabled);\r\n    }\r\n  }\r\n\r\n  /** Sets the model value. Implemented as part of ControlValueAccessor. */\r\n  writeValue(value: any) {\r\n    this.value = value;\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Registers a callback to be triggered when the model value changes.\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @param fn Callback to be registered.\r\n   */\r\n  registerOnChange(fn: (value: any) => void) {\r\n    this._controlValueAccessorChangeFn = fn;\r\n  }\r\n\r\n  /**\r\n   * Registers a callback to be triggered when the control is touched.\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @param fn Callback to be registered.\r\n   */\r\n  registerOnTouched(fn: any) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  /**\r\n   * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\r\n   * @param isDisabled Whether the control should be disabled.\r\n   */\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = toBoolean(isDisabled);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /** Dispatch change event with current selection and group value. */\r\n  emitChangeEvent(): void {\r\n    if (this._isInitialized) {\r\n      this.change.emit(new MdcRadioChange(this._selected!, this._value));\r\n    }\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { toBoolean, UniqueSelectionDispatcher } from '@angular-mdc/web/common';\r\nimport { MdcRipple } from '@angular-mdc/web/ripple';\r\nimport { MdcFormField, MdcFormFieldControl } from '@angular-mdc/web/form-field';\r\n\r\nimport { MDCRadioFoundation } from '@material/radio/index';\r\n\r\n/**\r\n * Describes a parent MdcRadioGroup component.\r\n * Contains properties that MdcRadio can inherit.\r\n */\r\nexport interface MdcRadioGroupParentComponent {\r\n  name: string;\r\n  selected: MdcRadio | null;\r\n  value: any;\r\n  disabled: boolean;\r\n  required: boolean;\r\n  emitChangeEvent(): void;\r\n  _controlValueAccessorChangeFn(value: any): void;\r\n  _touch(): void;\r\n}\r\n\r\n/**\r\n * Injection token used to provide the parent MdcRadioGroup component to MdcRadio.\r\n */\r\nexport const MDC_RADIO_GROUP_PARENT_COMPONENT =\r\n  new InjectionToken<MdcRadioGroupParentComponent>('MDC_RADIO_GROUP_PARENT_COMPONENT');\r\n\r\nlet nextUniqueId = 0;\r\n\r\n/** Change event object emitted by MdcRadio. */\r\nexport class MdcRadioChange {\r\n  constructor(\r\n    /** The source MdcRadio of the event. */\r\n    public source: MdcRadio,\r\n    /** The value of the radio button. */\r\n    public value: any) { }\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mdc-radio',\r\n  exportAs: 'mdcRadio',\r\n  host: {\r\n    '[id]': 'id',\r\n    'class': 'mdc-radio',\r\n    '(focus)': 'input.nativeElement.focus()',\r\n    '[attr.tabindex]': 'null'\r\n  },\r\n  template: `\r\n  <input type=\"radio\"\r\n    #input\r\n    class=\"mdc-radio__native-control\"\r\n    [id]=\"inputId\"\r\n    [attr.name]=\"name\"\r\n    [tabIndex]=\"tabIndex\"\r\n    [attr.aria-label]=\"ariaLabel\"\r\n    [attr.aria-labelledby]=\"ariaLabelledby\"\r\n    [attr.aria-describedby]=\"ariaDescribedby\"\r\n    [disabled]=\"disabled\"\r\n    [required]=\"required\"\r\n    [checked]=\"checked\"\r\n    (click)=\"onInputClick($event)\"\r\n    (change)=\"onInputChange($event)\" />\r\n    <div class=\"mdc-radio__background\">\r\n      <div class=\"mdc-radio__outer-circle\"></div>\r\n      <div class=\"mdc-radio__inner-circle\"></div>\r\n    </div>\r\n  `,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    MdcRipple,\r\n    { provide: MdcFormFieldControl, useExisting: MdcRadio }\r\n  ]\r\n})\r\nexport class MdcRadio implements AfterViewInit, OnDestroy, MdcFormFieldControl<any> {\r\n  private _uniqueId: string = `mdc-radio-${++nextUniqueId}`;\r\n\r\n  /** The unique ID for the radio button. */\r\n  @Input() id: string = this._uniqueId;\r\n\r\n  /** Analog to HTML 'name' attribute used to group radios for unique selection. */\r\n  @Input() name!: string;\r\n\r\n  @Input() tabIndex: number = 0;\r\n\r\n  @Input('aria-label') ariaLabel?: string;\r\n  @Input('aria-labelledby') ariaLabelledby?: string;\r\n\r\n  /** The 'aria-describedby' attribute is read after the element's label and field type. */\r\n  @Input('aria-describedby') ariaDescribedby?: string;\r\n\r\n  get inputId(): string { return `${this.id || this._uniqueId}-input`; }\r\n\r\n  @Input()\r\n  get value(): any { return this._value; }\r\n  set value(newValue: any) {\r\n    this.setValue(newValue);\r\n  }\r\n  private _value: any;\r\n\r\n  @Input()\r\n  get checked(): boolean { return this._checked; }\r\n  set checked(value: boolean) {\r\n    this.setChecked(value);\r\n  }\r\n  private _checked: boolean = false;\r\n\r\n  @Input()\r\n  get disabled(): boolean { return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled); }\r\n  set disabled(value: boolean) {\r\n    const newDisabledState = toBoolean(value);\r\n    if (this._disabled !== newDisabledState) {\r\n      this._disabled = newDisabledState;\r\n      this._foundation.setDisabled(this._disabled);\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n  private _disabled: boolean = false;\r\n\r\n  @Input()\r\n  get required(): boolean { return this._required || (this.radioGroup && this.radioGroup.required); }\r\n  set required(value: boolean) {\r\n    this._required = toBoolean(value);\r\n  }\r\n  private _required: boolean = false;\r\n\r\n  @Output() readonly change: EventEmitter<MdcRadioChange> = new EventEmitter<MdcRadioChange>();\r\n  @ViewChild('input') input!: ElementRef<HTMLInputElement>;\r\n\r\n  /** Unregister function for _radioDispatcher */\r\n  private _removeUniqueSelectionListener: () => void = () => { };\r\n\r\n  private _createAdapter() {\r\n    return {\r\n      addClass: (className: string) => this._getHostElement().classList.add(className),\r\n      removeClass: (className: string) => this._getHostElement().classList.remove(className),\r\n      setNativeControlDisabled: (disabled: boolean) => this.disabled = disabled\r\n    };\r\n  }\r\n\r\n  private _foundation: {\r\n    init(): void,\r\n    destroy(): void,\r\n    setDisabled(disabled: boolean): void\r\n  } = new MDCRadioFoundation(this._createAdapter());\r\n\r\n  constructor(\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    public elementRef: ElementRef<HTMLElement>,\r\n    public ripple: MdcRipple,\r\n    private _radioDispatcher: UniqueSelectionDispatcher,\r\n    @Optional() @Inject(MDC_RADIO_GROUP_PARENT_COMPONENT) public radioGroup: MdcRadioGroupParentComponent,\r\n    @Optional() private _parentFormField: MdcFormField) {\r\n\r\n    if (this._parentFormField) {\r\n      _parentFormField.elementRef.nativeElement.classList.add('mdc-form-field');\r\n    }\r\n\r\n    this._removeUniqueSelectionListener =\r\n      _radioDispatcher.listen((id: string, name: string) => {\r\n        if (id !== this.id && name === this.name) {\r\n          this.checked = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this._foundation.init();\r\n    this._initRipple();\r\n\r\n    if (this.radioGroup) {\r\n      Promise.resolve().then(() => {\r\n        // If the radio is inside a radio group, determine if it should be checked\r\n        this.checked = this.radioGroup.value === this._value;\r\n        // Copy name from parent radio group\r\n        this.name = this.radioGroup.name;\r\n        this._changeDetectorRef.markForCheck();\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._removeUniqueSelectionListener();\r\n\r\n    this.ripple.destroy();\r\n    this._foundation.destroy();\r\n  }\r\n\r\n  onInputClick(event: Event) {\r\n    // Preventing bubbling for the second event will solve that issue.\r\n    event.stopPropagation();\r\n  }\r\n\r\n  onInputChange(event: Event): void {\r\n    event.stopPropagation();\r\n\r\n    const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\r\n    this.checked = true;\r\n    this._emitChangeEvent();\r\n\r\n    if (this.radioGroup) {\r\n      this.radioGroup._controlValueAccessorChangeFn(this.value);\r\n      this.radioGroup._touch();\r\n      if (groupValueChanged) {\r\n        this.radioGroup.emitChangeEvent();\r\n      }\r\n    }\r\n  }\r\n\r\n  setChecked(checked: boolean): void {\r\n    const newCheckedState = toBoolean(checked);\r\n\r\n    if (this._checked !== newCheckedState) {\r\n      this._checked = newCheckedState;\r\n      this._getInputElement().checked = newCheckedState;\r\n\r\n      if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\r\n        this.radioGroup.selected = this;\r\n      } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\r\n\r\n        // When unchecking the selected radio button, update the selected radio\r\n        // property on the group.\r\n        this.radioGroup.selected = null;\r\n      }\r\n\r\n      if (newCheckedState) {\r\n        // Notify all radio buttons with the same name to un-check.\r\n        this._radioDispatcher.notify(this.id, this.name);\r\n      }\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  setValue(value: any): void {\r\n    if (this._value !== value) {\r\n      this._value = value;\r\n      this._getInputElement().value = this._value;\r\n\r\n      if (this.radioGroup !== null) {\r\n        if (!this.checked) {\r\n          // Update checked when the value changed to match the radio group's value\r\n          this.checked = this.radioGroup.value === value;\r\n        }\r\n        if (this.checked) {\r\n          this.radioGroup.selected = this;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  focus(): void {\r\n    this._getInputElement().focus();\r\n  }\r\n\r\n  markForCheck(): void {\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private _initRipple(): void {\r\n    this.ripple.init({\r\n      surface: this._getHostElement(),\r\n      activator: this._getInputElement()\r\n    }, Object.assign(this.ripple.createAdapter(), {\r\n      isUnbounded: () => true,\r\n      isSurfaceActive: () => false,\r\n      isSurfaceDisabled: () => this._disabled\r\n    }));\r\n  }\r\n\r\n  /** Dispatch change event with current value. */\r\n  private _emitChangeEvent(): void {\r\n    this.change.emit(new MdcRadioChange(this, this._value));\r\n  }\r\n\r\n  /** Retrieves the DOM element of the component input. */\r\n  private _getInputElement(): HTMLInputElement {\r\n    return this.input.nativeElement;\r\n  }\r\n\r\n  /** Retrieves the DOM element of the component host. */\r\n  private _getHostElement(): HTMLElement {\r\n    return this.elementRef.nativeElement;\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState, MDCSelectionControl} from '@material/selection-control/index';\n/* eslint-enable no-unused-vars */\nimport MDCRadioFoundation from './foundation';\nimport {MDCRipple, MDCRippleFoundation} from '@material/ripple/index';\n\n/**\n * @extends MDCComponent<!MDCRadioFoundation>\n * @implements {MDCSelectionControl}\n */\nclass MDCRadio extends MDCComponent {\n  static attachTo(root) {\n    return new MDCRadio(root);\n  }\n\n  /** @return {boolean} */\n  get checked() {\n    return this.nativeControl_.checked;\n  }\n\n  /** @param {boolean} checked */\n  set checked(checked) {\n    this.nativeControl_.checked = checked;\n  }\n\n  /** @return {boolean} */\n  get disabled() {\n    return this.nativeControl_.disabled;\n  }\n\n  /** @param {boolean} disabled */\n  set disabled(disabled) {\n    this.foundation_.setDisabled(disabled);\n  }\n\n  /** @return {?string} */\n  get value() {\n    return this.nativeControl_.value;\n  }\n\n  /** @param {?string} value */\n  set value(value) {\n    this.nativeControl_.value = value;\n  }\n\n  /** @return {!MDCRipple} */\n  get ripple() {\n    return this.ripple_;\n  }\n\n  constructor(...args) {\n    super(...args);\n\n    /** @private {!MDCRipple} */\n    this.ripple_ = this.initRipple_();\n  }\n\n  /**\n   * @return {!MDCRipple}\n   * @private\n   */\n  initRipple_() {\n    const adapter = Object.assign(MDCRipple.createAdapter(this), {\n      isUnbounded: () => true,\n      // Radio buttons technically go \"active\" whenever there is *any* keyboard interaction. This is not the\n      // UI we desire.\n      isSurfaceActive: () => false,\n      registerInteractionHandler: (type, handler) => this.nativeControl_.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) => this.nativeControl_.removeEventListener(type, handler),\n    });\n    const foundation = new MDCRippleFoundation(adapter);\n    return new MDCRipple(this.root_, foundation);\n  }\n\n  /**\n   * Returns the state of the native control element, or null if the native control element is not present.\n   * @return {?MDCSelectionControlState}\n   * @private\n   */\n  get nativeControl_() {\n    const {NATIVE_CONTROL_SELECTOR} = MDCRadioFoundation.strings;\n    const el = /** @type {?MDCSelectionControlState} */ (\n      this.root_.querySelector(NATIVE_CONTROL_SELECTOR));\n    return el;\n  }\n\n  destroy() {\n    this.ripple_.destroy();\n    super.destroy();\n  }\n\n  /** @return {!MDCRadioFoundation} */\n  getDefaultFoundation() {\n    return new MDCRadioFoundation({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      setNativeControlDisabled: (disabled) => this.nativeControl_.disabled = disabled,\n    });\n  }\n}\n\n\nexport {MDCRadio, MDCRadioFoundation};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\nimport MDCRadioAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCRadioAdapter>}\n */\nclass MDCRadioFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return {!MDCRadioAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCRadioAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setNativeControlDisabled: (/* disabled: boolean */) => {},\n    });\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    const {DISABLED} = MDCRadioFoundation.cssClasses;\n    this.adapter_.setNativeControlDisabled(disabled);\n    if (disabled) {\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n}\n\nexport default MDCRadioFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: '.mdc-radio__native-control',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-radio',\n  DISABLED: 'mdc-radio--disabled',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Radio. Provides an interface for managing\n * - classes\n * - dom\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRadioAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {boolean} disabled */\n  setNativeControlDisabled(disabled) {}\n}\n\nexport default MDCRadioAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint-disable no-unused-vars */\nimport {MDCRipple} from '@material/ripple/index';\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {{\n *   checked: boolean,\n *   indeterminate: boolean,\n *   disabled: boolean,\n *   value: ?string\n * }}\n */\nlet MDCSelectionControlState;\n\n/**\n * @record\n */\nclass MDCSelectionControl {\n  /** @return {?MDCRipple} */\n  get ripple() {}\n}\n\nexport {MDCSelectionControlState, MDCSelectionControl};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCRippleAdapter from './adapter';\nimport MDCRippleFoundation from './foundation';\nimport * as util from './util';\n\n/**\n * @extends MDCComponent<!MDCRippleFoundation>\n */\nclass MDCRipple extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n\n    /** @type {boolean} */\n    this.disabled = false;\n\n    /** @private {boolean} */\n    this.unbounded_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {{isUnbounded: (boolean|undefined)}=} options\n   * @return {!MDCRipple}\n   */\n  static attachTo(root, {isUnbounded = undefined} = {}) {\n    const ripple = new MDCRipple(root);\n    // Only override unbounded behavior if option is explicitly specified\n    if (isUnbounded !== undefined) {\n      ripple.unbounded = /** @type {boolean} */ (isUnbounded);\n    }\n    return ripple;\n  }\n\n  /**\n   * @param {!RippleCapableSurface} instance\n   * @return {!MDCRippleAdapter}\n   */\n  static createAdapter(instance) {\n    const MATCHES = util.getMatchesProperty(HTMLElement.prototype);\n\n    return {\n      browserSupportsCssVars: () => util.supportsCssVariables(window),\n      isUnbounded: () => instance.unbounded,\n      isSurfaceActive: () => instance.root_[MATCHES](':active'),\n      isSurfaceDisabled: () => instance.disabled,\n      addClass: (className) => instance.root_.classList.add(className),\n      removeClass: (className) => instance.root_.classList.remove(className),\n      containsEventTarget: (target) => instance.root_.contains(target),\n      registerInteractionHandler: (evtType, handler) =>\n        instance.root_.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterInteractionHandler: (evtType, handler) =>\n        instance.root_.removeEventListener(evtType, handler, util.applyPassive()),\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, util.applyPassive()),\n      registerResizeHandler: (handler) => window.addEventListener('resize', handler),\n      deregisterResizeHandler: (handler) => window.removeEventListener('resize', handler),\n      updateCssVariable: (varName, value) => instance.root_.style.setProperty(varName, value),\n      computeBoundingRect: () => instance.root_.getBoundingClientRect(),\n      getWindowPageOffset: () => ({x: window.pageXOffset, y: window.pageYOffset}),\n    };\n  }\n\n  /** @return {boolean} */\n  get unbounded() {\n    return this.unbounded_;\n  }\n\n  /** @param {boolean} unbounded */\n  set unbounded(unbounded) {\n    this.unbounded_ = Boolean(unbounded);\n    this.setUnbounded_();\n  }\n\n  /**\n   * Closure Compiler throws an access control error when directly accessing a\n   * protected or private property inside a getter/setter, like unbounded above.\n   * By accessing the protected property inside a method, we solve that problem.\n   * That's why this function exists.\n   * @private\n   */\n  setUnbounded_() {\n    this.foundation_.setUnbounded(this.unbounded_);\n  }\n\n  activate() {\n    this.foundation_.activate();\n  }\n\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n\n  layout() {\n    this.foundation_.layout();\n  }\n\n  /**\n   * @return {!MDCRippleFoundation}\n   * @override\n   */\n  getDefaultFoundation() {\n    return new MDCRippleFoundation(MDCRipple.createAdapter(this));\n  }\n\n  /** @override */\n  initialSyncWithDOM() {\n    this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;\n  }\n}\n\n/**\n * See Material Design spec for more details on when to use ripples.\n * https://material.io/guidelines/motion/choreography.html#choreography-creation\n * @record\n */\nclass RippleCapableSurface {}\n\n/** @protected {!Element} */\nRippleCapableSurface.prototype.root_;\n\n/**\n * Whether or not the ripple bleeds out of the bounds of the element.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.unbounded;\n\n/**\n * Whether or not the ripple is attached to a disabled component.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.disabled;\n\nexport {MDCRipple, MDCRippleFoundation, RippleCapableSurface, util};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: (!Event|undefined),\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event=),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event=)} */\n    this.deactivateHandler_ = () => this.deactivate_();\n\n    /** @private {function(!Event=)} */\n    this.focusHandler_ = () => this.handleFocus();\n\n    /** @private {function(!Event=)} */\n    this.blurHandler_ = () => this.handleBlur();\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {!Event|undefined} */\n    this.previousActivationEvent_;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  supportsPressRipple_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: undefined,\n      isProgrammatic: false,\n    };\n  }\n\n  /** @override */\n  init() {\n    const supportsPressRipple = this.supportsPressRipple_();\n\n    this.registerRootHandlers_(supportsPressRipple);\n\n    if (supportsPressRipple) {\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter_.addClass(ROOT);\n        if (this.adapter_.isUnbounded()) {\n          this.adapter_.addClass(UNBOUNDED);\n          // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n          this.layoutInternal_();\n        }\n      });\n    }\n  }\n\n  /** @override */\n  destroy() {\n    if (this.supportsPressRipple_()) {\n      if (this.activationTimer_) {\n        clearTimeout(this.activationTimer_);\n        this.activationTimer_ = 0;\n        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n      }\n\n      if (this.fgDeactivationRemovalTimer_) {\n        clearTimeout(this.fgDeactivationRemovalTimer_);\n        this.fgDeactivationRemovalTimer_ = 0;\n        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n      }\n\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter_.removeClass(ROOT);\n        this.adapter_.removeClass(UNBOUNDED);\n        this.removeCssVars_();\n      });\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n  }\n\n  /**\n   * @param {boolean} supportsPressRipple Passed from init to save a redundant function call\n   * @private\n   */\n  registerRootHandlers_(supportsPressRipple) {\n    if (supportsPressRipple) {\n      ACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n      });\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.registerResizeHandler(this.resizeHandler_);\n      }\n    }\n\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {!Event=} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === undefined;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(\n      (target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e !== undefined) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation_();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation_();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n    });\n  }\n\n  /**\n   * @param {!Event=} e\n   * @private\n   */\n  checkElementMadeActive_(e) {\n    return (e !== undefined && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n  }\n\n  /**\n   * @param {!Event=} event Optional event containing position information.\n   */\n  activate(event) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal_();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = undefined, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @private\n   */\n  deactivate_() {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      requestAnimationFrame(() => this.animateDeactivation_(state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  deactivate() {\n    this.deactivate_();\n  }\n\n  /**\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_({wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n\n  handleFocus() {\n    requestAnimationFrame(() =>\n      this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  handleBlur() {\n    requestAnimationFrame(() =>\n      this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n}\n\nexport default MDCRippleFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|!EventListenerOptions}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n        return isSupported;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_\n    ? /** @type {!EventListenerOptions} */ ({passive: true})\n    : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {string}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  /**\n   * Order is important because we return the first existing method we find.\n   * Do not change the order of the items in the below array.\n   */\n  const matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];\n  let method = 'matches';\n  for (let i = 0; i < matchesMethods.length; i++) {\n    const matchesMethod = matchesMethods[i];\n    if (matchesMethod in HTMLElementPrototype) {\n      method = matchesMethod;\n      break;\n    }\n  }\n\n  return method;\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    ev = /** @type {!TouchEvent} */ (ev);\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    ev = /** @type {!MouseEvent} */ (ev);\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n"],"names":["nextUniqueId"],"mappings":";;;;;;;;;;;;;AcAA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,MAAM,aAAa,CAAC;;EAElB,WAAW,UAAU,GAAG;;;IAGtB,OAAO,EAAE,CAAC;GACX;;;EAGD,WAAW,OAAO,GAAG;;;IAGnB,OAAO,EAAE,CAAC;GACX;;;EAGD,WAAW,OAAO,GAAG;;;IAGnB,OAAO,EAAE,CAAC;GACX;;;EAGD,WAAW,cAAc,GAAG;;;;IAI1B,OAAO,EAAE,CAAC;GACX;;;;;EAKD,WAAW,CAAC,OAAO,GAAG,EAAE,EAAE;;IAExB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;GACzB;;EAED,IAAI,GAAG;;GAEN;;EAED,OAAO,GAAG;;GAET;CACF;;ADvED;;;;;;;;;;;;;;;;;;;;;GAqBG;;ADrBH;;;;;;;;;;;;;;;;;;;;;GAqBG;;ADrBH;;;;;;;;;;;;;;;;;;;;;GAqBG;;ADrBH;;;;;;;;;;;;;;;;;;;;;GAqBG;;ADrBH;;;;;;;;;;;;;;;;;;;;;GAqBG;;ADrBH;;;;;;;;;;;;;;;;;;;;;;AAsBA,AAiHA;;;;;;AAMA,MAAM,oBAAoB,CAAC,EAAE;;;AAG7B,oBAAoB,CAAC,SAAS,CAAC,KAAK,CAAC;;;;;;AAMrC,oBAAoB,CAAC,SAAS,CAAC,SAAS,CAAC;;;;;;AAMzC,oBAAoB,CAAC,SAAS,CAAC,QAAQ,CAAC;;AD5JxC;;;;;;;;;;;;;;;;;;;;;GAqBG;;ADrBH;;;;;;;;;;;;;;;;;;;;;GAqBG;;ADrBH;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,MAAM,OAAO,GAAG;EACd,uBAAuB,EAAE,4BAA4B;CACtD,CAAC;;;AAGF,MAAM,UAAU,GAAG;EACjB,IAAI,EAAE,WAAW;EACjB,QAAQ,EAAE,qBAAqB;CAChC,CAAC;;ADhCF;;;;;;;;;;;;;;;;;;;;;;AAsBA,AAOA;;;;AAIA,MAAM,kBAAkB,SAAS,aAAa,CAAC;;EAE7C,WAAW,UAAU,GAAG;IACtB,OAAO,UAAU,CAAC;GACnB;;;EAGD,WAAW,OAAO,GAAG;IACnB,OAAO,OAAO,CAAC;GAChB;;;EAGD,WAAW,cAAc,GAAG;IAC1B,wCAAwC;MACtC,QAAQ,EAAE,6BAA6B,EAAE;MACzC,WAAW,EAAE,6BAA6B,EAAE;MAC5C,wBAAwB,EAAE,6BAA6B,EAAE;KAC1D,EAAE;GACJ;;;EAGD,WAAW,CAAC,QAAQ,EAAE;IACpB,MAAM,CAAC,QAAQ,CAAC,GAAG,kBAAkB,CAAC,UAAU,CAAC;IACjD,IAAI,CAAC,QAAQ,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;IACjD,IAAI,QAAQ,EAAE;MACZ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KAClC,MAAM;MACL,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KACrC;GACF;CACF;;AD/DD;;;;;;;;;;;;;;;;;;;;;GAqBG;;;;;;ADrBH;;;;AAwCA,AAAA,MAAa,gCAAgC,GAC3C,IAAI,cAAc,CAA+B,kCAAkC,CAAC,CADtF;;AAGA,IAAI,YAAY,GAAG,CAAC,CAApB;;;;AAGA,AAAA,MAAa,cAAc,CAA3B;;;;;IACE,WAAF,CAEW,MAAgB,EAEhB,KAAU,EAJrB;QAEW,IAAX,CAAA,MAAiB,GAAN,MAAM,CAAU;QAEhB,IAAX,CAAA,KAAgB,GAAL,KAAK,CAAK;KAAK;CACzB;AAuCD,MAAa,QAAQ,CAArB;;;;;;;;;IAwEE,WAAF,CACY,kBAAqC,EACtC,UAAmC,EACnC,MAAiB,EAChB,gBAA2C,EACU,UAAwC,EACjF,gBAA8B,EANtD;QACY,IAAZ,CAAA,kBAA8B,GAAlB,kBAAkB,CAAmB;QACtC,IAAX,CAAA,UAAqB,GAAV,UAAU,CAAyB;QACnC,IAAX,CAAA,MAAiB,GAAN,MAAM,CAAW;QAChB,IAAZ,CAAA,gBAA4B,GAAhB,gBAAgB,CAA2B;QACU,IAAjE,CAAA,UAA2E,GAAV,UAAU,CAA8B;QACjF,IAAxB,CAAA,gBAAwC,GAAhB,gBAAgB,CAAc;QA7E5C,IAAV,CAAA,SAAmB,GAAW,CAA9B,UAAA,EAA2C,EAAE,YAAY,CAAzD,CAA2D,CAAC;;;;QAGjD,IAAX,CAAA,EAAa,GAAW,IAAI,CAAC,SAAS,CAAC;QAK5B,IAAX,CAAA,QAAmB,GAAW,CAAC,CAAC;QAsBtB,IAAV,CAAA,QAAkB,GAAY,KAAK,CAAC;QAY1B,IAAV,CAAA,SAAmB,GAAY,KAAK,CAAC;QAO3B,IAAV,CAAA,SAAmB,GAAY,KAAK,CAAC;QAEhB,IAArB,CAAA,MAA2B,GAAiC,IAAI,YAAY,EAAkB,CAAC;;;;QAIrF,IAAV,CAAA,8BAAwC;;;QAAe,MAAvD,GAAgE,CAAhE,CAAiE;QAUvD,IAAV,CAAA,WAAqB,GAIf,IAAI,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QAUhD,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,gBAAgB,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;SAC3E;QAED,IAAI,CAAC,8BAA8B;YACjC,gBAAgB,CAAC,MAAM;;;;;YAAC,CAAC,EAAU,EAAE,IAAY,KAAvD;gBACQ,IAAI,EAAE,KAAK,IAAI,CAAC,EAAE,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;oBACxC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACtB;aACF,EAAC,CAAC;KACN;;;;IAzED,IAAI,OAAO,GAAb,EAA0B,OAAO,CAAjC,EAAoC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,CAA7D,MAAA,CAAqE,CAAC,EAAE;;;;IAEtE,IACI,KAAK,GADX,EACqB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE;;;;;IACxC,IAAI,KAAK,CAAC,QAAa,EAAzB;QACI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KACzB;;;;IAGD,IACI,OAAO,GADb,EAC2B,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE;;;;;IAChD,IAAI,OAAO,CAAC,KAAc,EAA5B;QACI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KACxB;;;;IAGD,IACI,QAAQ,GADd,EAC4B,OAAO,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,UAAU,KAAK,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE;;;;;IAC5G,IAAI,QAAQ,CAAC,KAAc,EAA7B;;QACA,MAAU,gBAAgB,GAAG,SAAS,CAAC,KAAK,CAAC,CAA7C;QACI,IAAI,IAAI,CAAC,SAAS,KAAK,gBAAgB,EAAE;YACvC,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC;YAClC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC7C,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;SACxC;KACF;;;;IAGD,IACI,QAAQ,GADd,EAC4B,OAAO,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE;;;;;IACnG,IAAI,QAAQ,CAAC,KAAc,EAA7B;QACI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;KACnC;;;;;IASO,cAAc,GAAxB;QACI,OAAO;YACL,QAAQ;;;;YAAE,CAAC,SAAiB,KAAK,IAAI,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;YAChF,WAAW;;;;YAAE,CAAC,SAAiB,KAAK,IAAI,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;YACtF,wBAAwB;;;;YAAE,CAAC,QAAiB,KAAK,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;SAC1E,CAAC;KACH;;;;IA4BD,eAAe,GAAjB;QACI,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI;;;YAAC,MAA7B;;gBAEQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC;;gBAErD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;gBACjC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;aACxC,EAAC,CAAC;SACJ;KACF;;;;IAED,WAAW,GAAb;QACI,IAAI,CAAC,8BAA8B,EAAE,CAAC;QAEtC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;KAC5B;;;;;IAED,YAAY,CAAC,KAAY,EAA3B;;QAEI,KAAK,CAAC,eAAe,EAAE,CAAC;KACzB;;;;;IAED,aAAa,CAAC,KAAY,EAA5B;QACI,KAAK,CAAC,eAAe,EAAE,CAAC;;QAE5B,MAAU,iBAAiB,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,UAAU,CAAC,KAAK,CAArF;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1D,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YACzB,IAAI,iBAAiB,EAAE;gBACrB,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC;aACnC;SACF;KACF;;;;;IAED,UAAU,CAAC,OAAgB,EAA7B;;QACA,MAAU,eAAe,GAAG,SAAS,CAAC,OAAO,CAAC,CAA9C;QAEI,IAAI,IAAI,CAAC,QAAQ,KAAK,eAAe,EAAE;YACrC,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC;YAChC,IAAI,CAAC,gBAAgB,EAAE,CAAC,OAAO,GAAG,eAAe,CAAC;YAElD,IAAI,eAAe,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;gBAC9E,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;aACjC;iBAAM,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;;;gBAItF,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;aACjC;YAED,IAAI,eAAe,EAAE;;gBAEnB,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;aAClD;YACD,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;SACxC;KACF;;;;;IAED,QAAQ,CAAC,KAAU,EAArB;QACI,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE;YACzB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,gBAAgB,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;YAE5C,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,EAAE;gBAC5B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;;oBAEjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,KAAK,KAAK,CAAC;iBAChD;gBACD,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;iBACjC;aACF;SACF;KACF;;;;IAED,KAAK,GAAP;QACI,IAAI,CAAC,gBAAgB,EAAE,CAAC,KAAK,EAAE,CAAC;KACjC;;;;IAED,YAAY,GAAd;QACI,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KACxC;;;;;IAEO,WAAW,GAArB;QACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACf,OAAO,EAAE,IAAI,CAAC,eAAe,EAAE;YAC/B,SAAS,EAAE,IAAI,CAAC,gBAAgB,EAAE;SACnC,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE;YAC5C,WAAW;;;YAAE,MAAM,IAAI,CAAA;YACvB,eAAe;;;YAAE,MAAM,KAAK,CAAA;YAC5B,iBAAiB;;;YAAE,MAAM,IAAI,CAAC,SAAS,CAAA;SACxC,CAAC,CAAC,CAAC;KACL;;;;;;IAGO,gBAAgB,GAA1B;QACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;KACzD;;;;;;IAGO,gBAAgB,GAA1B;QACI,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;KACjC;;;;;;IAGO,eAAe,GAAzB;QACI,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;KACtC;;;IArPH,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,CAAX,QAAA,EAAA,WAAA;gBACE,QAAQ,EAAE,UAAZ;gBACE,IAAF,EAAA;oBACA,MAAY,EAAZ,IAAA;oBACM,OAAN,EAAA,WAAA;oBACI,SAAJ,EAAA,6BAAA;oBACI,iBAAJ,EAAA,MAAA;iBACA;gBACA,QAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;gBAqBA,eAAA,EAAA,uBAAA,CAAA,MAAA;gBACE,SAAF,EAAA;oBACA,SAAA;oBACA,EAAA,OAAA,EAAA,mBAAA,EAAA,WAAA,EAAA,QAAA,EAAA;iBACA;aACA,EAAA,EAAA;CACA,CAAA;;;;;IAtFA,EAAA,IAAA,EAAE,SAAF,EAAA;IAEA,EAAA,IAAA,EAAE,yBAAF,EAAA;IAYA,EAAA,IAAA,EAAS,SAAS,EAAlB,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,gCAAA,EAAA,EAAA,CAAA,EAAA;IADA,EAAA,IAAA,EAAoB,YAApB,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,QAAA,EAAA,CAAA,EAAA;CAwJA,CAAA;AAtJA,QAAA,CAAA,cAAA,GAAA;;;IA6EA,QAAA,EAAA,CAAA,EAAG,IAAH,EAAA,KAAA,EAAA,CAAA;IAGA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAQ,KAAR,EAAA,IAAA,EAAA,CAAA,YAAA,EAAA,EAAA,CAAA;IAEA,cAAA,EAAA,CAAA,EAAG,IAAH,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,CAAA;IAEA,eAAA,EAAA,CAAA,EAAG,IAAH,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,CAAA;IACA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,KAAA,EAAA,CAAA;IAGA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAA,KAAA,EAAA,CAAG;IAIH,QAAA,EAAA,CAAA,EAAA,IAAA,EAAA,KAAA,EAAA,CAAA;IAOA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAA,KAAA,EAAA,CAAA;IAOA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA;IAYA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAA,CAAA,OAAA,EAAA,EAAA,CAAA;CAOA,CAAA;;;;;;AD/IA;;;;;AA2BA,AAAA,MAAa,sCAAsC,GAAQ;IACzD,OAAO,EAAE,iBAAiB;IAC1B,WAAW,EAAE,UAAU;;;IAAC,MAAM,aAAa,EAAC;IAC5C,KAAK,EAAE,IAAI;CACZ,CAAD;;AAEA,IAAIA,cAAY,GAAG,CAAC,CAApB;AAgBA,AAAA,MAAa,aAAa,CAA1B;;;;;IAkFE,WAAF,CACY,kBAAqC,EACtC,UAAmC,EAF9C;QACY,IAAZ,CAAA,kBAA8B,GAAlB,kBAAkB,CAAmB;QACtC,IAAX,CAAA,UAAqB,GAAV,UAAU,CAAyB;QAnFpC,IAAV,CAAA,KAAe,GAAW,CAA1B,gBAAA,EAA6CA,cAAY,EAAE,CAA3D,CAA6D,CAAC;;;;QAGpD,IAAV,CAAA,MAAgB,GAAQ,IAAI,CAAC;;;;QAGnB,IAAV,CAAA,cAAwB,GAAY,KAAK,CAAC;QAyChC,IAAV,CAAA,SAAmB,GAAoB,IAAI,CAAC;QAQlC,IAAV,CAAA,SAAmB,GAAY,KAAK,CAAC;QAS3B,IAAV,CAAA,SAAmB,GAAY,KAAK,CAAC;;;;QASnC,IAAF,CAAA,6BAA+B;;;QAAyB,MAAxD,GAAiE,CAAjE,CAAkE;;;;QAGhE,IAAF,CAAA,SAAW;;;QAAc,MAAzB,GAAkC,CAAlC,CAAmC;QAEd,IAArB,CAAA,MAA2B,GACvB,IAAI,YAAY,EAAkB,CAAC;KAIY;;;;;IAxEjD,IACI,IAAI,GADV,EACuB,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;;;;;IACzC,IAAI,IAAI,CAAC,KAAa,EAAxB;QACI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,uBAAuB,EAAE,CAAC;KAChC;;;;;;;;IAQD,IACI,KAAK,GADX,EACqB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE;;;;;IACxC,IAAI,KAAK,CAAC,QAAa,EAAzB;QACI,IAAI,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAE;;YAE5B,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;YAEvB,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACrC,IAAI,CAAC,yBAAyB,EAAE,CAAC;SAClC;KACF;;;;;;IAMD,IACI,QAAQ,GADd,EACmB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;;;;;IACzC,IAAI,QAAQ,CAAC,QAAyB,EAAxC;QACI,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,QAAQ,GAAG,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC;QAC9C,IAAI,CAAC,yBAAyB,EAAE,CAAC;KAClC;;;;IAGD,IACI,QAAQ,GADd,EAC4B,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;;;;;IAClD,IAAI,QAAQ,CAAC,KAAc,EAA7B;QACI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;;;;IAGD,IACI,QAAQ,GADd,EAC4B,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;;;;;IAClD,IAAI,QAAQ,CAAC,KAAc,EAA7B;QACI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;;;;IAGD,yBAAyB,GAA3B;QACI,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YAC7C,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;SAC/B;KACF;;;;IAeD,kBAAkB,GAApB;QACI,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;KAC5B;;;;IAED,MAAM,GAAR;QACI,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;KACF;;;;;IAEO,uBAAuB,GAAjC;QACI,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,OAAO;;;;YAAC,KAAK,IAAhC;gBACQ,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;aACxB,EAAC,CAAC;YACH,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;KACF;;;;;;IAGO,6BAA6B,GAAvC;;;QAEA,MAAU,iBAAiB,GAAG,IAAI,CAAC,SAAS,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,CAA7F;QAEI,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,iBAAiB,EAAE;YACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,OAAO;;;;YAAC,KAAK,IAAhC;gBACQ,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC;gBAC3C,IAAI,KAAK,CAAC,OAAO,EAAE;oBACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;aACF,EAAC,CAAC;SACJ;KACF;;;;;IAEO,mBAAmB,GAA7B;QACI,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,OAAO;;;;YAAC,KAAK,IAAI,KAAK,CAAC,YAAY,EAAE,EAAC,CAAC;SACrD;KACF;;;;;;IAEO,wBAAwB,CAAC,QAAiB,EAApD;QACI,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,OAAO;;;;YAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,GAAG,QAAQ,EAAC,CAAC;SAC1D;KACF;;;;;;IAGD,UAAU,CAAC,KAAU,EAAvB;QACI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KACxC;;;;;;;IAOD,gBAAgB,CAAC,EAAwB,EAA3C;QACI,IAAI,CAAC,6BAA6B,GAAG,EAAE,CAAC;KACzC;;;;;;;IAOD,iBAAiB,CAAC,EAAO,EAA3B;QACI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;;;;;;IAMD,gBAAgB,CAAC,UAAmB,EAAtC;QACI,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC;QACtC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KACxC;;;;;IAGD,eAAe,GAAjB;QACI,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,cAAc,oBAAC,IAAI,CAAC,SAAS,IAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SACpE;KACF;;;IAzLH,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACT,QAAQ,EAAE,kCAAkC;gBAC5C,QAAQ,EAAE,eAAe;gBACzB,IAAI,EAAE;oBACJ,MAAM,EAAE,YAAY;iBACrB;gBACD,QAAQ,EAAE,2BAA2B;gBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,SAAS,EAAE;oBACT,sCAAsC;oBACtC,EAAE,OAAO,EAAE,gCAAgC,EAAE,WAAW,EAAE,aAAa,EAAE;iBAC1E;aACF,EAAD,EAAA;;;;IA7CA,EAAA,IAAA,EAAE,iBAAiB,EAAnB;IAGA,EAAA,IAAA,EAAE,UAAU,EAAZ;;;IAoDA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAG,eAAe,EAAlB,IAAA,EAAA,CAAmB,UAAU;;;gBAAC,MAAM,QAAQ,EAAC,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,EAApE,EAAA,CAAA;IAGA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;IAaA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;IAgBA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;IASA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;IAQA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;IAqBA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,MAAM,EAAT,CAAA;;;;;;;ADhIA,AAiBA,MAAa,cAAc,CAA3B;;;IAXA,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;gBACR,OAAO,EAAE,CAAC,kBAAkB,CAAC;gBAC7B,OAAO,EAAE;oBACP,QAAQ;oBACR,aAAa;iBACd;gBACD,YAAY,EAAE;oBACZ,QAAQ;oBACR,aAAa;iBACd;aACF,EAAD,EAAA;;;;;;;;;;;;;;;"}