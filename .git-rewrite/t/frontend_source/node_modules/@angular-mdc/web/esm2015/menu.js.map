{"version":3,"file":"menu.js","sources":["../../../packages/menu/menu-module.ts","../../../packages/menu/menu.ts","../../../node_modules/@material/menu/index.js","../../../node_modules/@material/list/index.js","../../../node_modules/@material/dom/ponyfill.js","../../../node_modules/@material/menu-surface/index.js","../../../node_modules/@material/menu-surface/util.js","../../../node_modules/@material/menu/foundation.js","../../../node_modules/@material/list/foundation.js","../../../node_modules/@material/list/constants.js","../../../node_modules/@material/list/adapter.js","../../../node_modules/@material/menu-surface/foundation.js","../../../node_modules/@material/menu-surface/constants.js","../../../node_modules/@material/menu-surface/adapter.js","../../../node_modules/@material/menu/constants.js","../../../node_modules/@material/menu/adapter.js","../../../node_modules/@material/base/component.js","../../../node_modules/@material/base/foundation.js"],"sourcesContent":["import { NgModule } from '@angular/core';\r\n\r\nimport { MdcMenuSurfaceModule } from '@angular-mdc/web/menu-surface';\r\n\r\nimport {\r\n  MdcMenu,\r\n  MdcMenuSelectionGroup,\r\n  MdcMenuSelectionGroupIcon\r\n} from './menu';\r\n\r\nconst MENU_DECLARATIONS = [\r\n  MdcMenu,\r\n  MdcMenuSelectionGroup,\r\n  MdcMenuSelectionGroupIcon\r\n];\r\n\r\n@NgModule({\r\n  imports: [MdcMenuSurfaceModule],\r\n  exports: [\r\n    ...MENU_DECLARATIONS,\r\n    MdcMenuSurfaceModule\r\n  ],\r\n  declarations: [MENU_DECLARATIONS]\r\n})\r\nexport class MdcMenuModule { }\r\n","import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { toBoolean } from '@angular-mdc/web/common';\r\nimport { MdcList, MdcListItem, MdcListItemAction } from '@angular-mdc/web/list';\r\nimport { MdcMenuSurfaceBase } from '@angular-mdc/web/menu-surface';\r\n\r\nimport { MDCMenuFoundation } from '@material/menu/index';\r\n\r\nexport class MdcMenuSelectedEvent {\r\n  constructor(\r\n    public index: number,\r\n    public source: MdcListItem) { }\r\n}\r\n\r\nlet nextUniqueId = 0;\r\n\r\n@Directive({\r\n  selector: '[mdcMenuSelectionGroup], mdc-menu-selection-group',\r\n  host: { 'class': 'mdc-menu__selection-group' },\r\n  exportAs: 'mdcMenuSelectionGroup'\r\n})\r\nexport class MdcMenuSelectionGroup {\r\n  constructor(public elementRef: ElementRef<HTMLElement>) { }\r\n}\r\n\r\n@Directive({\r\n  selector: '[mdcMenuSelectionGroupIcon], mdc-menu-selection-group-icon',\r\n  host: { 'class': 'mdc-menu__selection-group-icon' },\r\n  exportAs: 'mdcMenuSelectionGroupIcon'\r\n})\r\nexport class MdcMenuSelectionGroupIcon {\r\n  constructor(public elementRef: ElementRef<HTMLElement>) { }\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mdc-menu',\r\n  exportAs: 'mdcMenu',\r\n  host: {\r\n    '[id]': 'id',\r\n    'tabindex': '-1',\r\n    'class': 'mdc-menu mdc-menu-surface',\r\n    '(keydown)': '_handleKeydown($event)',\r\n  },\r\n  template: '<ng-content></ng-content>',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MdcMenu extends MdcMenuSurfaceBase implements AfterContentInit, OnDestroy {\r\n  /** Emits whenever the component is destroyed. */\r\n  private _destroyed = new Subject<void>();\r\n\r\n  private _uniqueId: string = `mdc-menu-${++nextUniqueId}`;\r\n\r\n  @Input() id: string = this._uniqueId;\r\n\r\n  @Input()\r\n  get wrapFocus(): boolean { return this._wrapFocus; }\r\n  set wrapFocus(value: boolean) {\r\n    const newValue = toBoolean(value);\r\n    if (newValue !== this._wrapFocus) {\r\n      this._wrapFocus = newValue;\r\n      this._list.wrapFocus = newValue;\r\n    }\r\n  }\r\n  private _wrapFocus: boolean = false;\r\n\r\n  @Output() readonly selected: EventEmitter<MdcMenuSelectedEvent> =\r\n    new EventEmitter<MdcMenuSelectedEvent>();\r\n\r\n  @ContentChild(MdcList) _list!: MdcList;\r\n\r\n  private _createAdapter() {\r\n    return Object.assign({\r\n      addClassToElementAtIndex: (index: number, className: string) =>\r\n        this._list.items.toArray()[index].getListItemElement().classList.add(className),\r\n      removeClassFromElementAtIndex: (index: number, className: string) =>\r\n        this._list.items.toArray()[index].getListItemElement().classList.remove(className),\r\n      addAttributeToElementAtIndex: (index: number, attr: string, value: string) =>\r\n        this._list.items.toArray()[index].getListItemElement().setAttribute(attr, value),\r\n      removeAttributeFromElementAtIndex: (index: number, attr: string) =>\r\n        this._list.items.toArray()[index].getListItemElement().removeAttribute(attr),\r\n      elementContainsClass: (element: HTMLElement, className: string) => element.classList.contains(className),\r\n      closeSurface: () => {\r\n        this.open = false;\r\n        this.setOpen();\r\n      },\r\n      getElementIndex: (element: HTMLElement) =>\r\n        this._list.items.toArray().findIndex(_ => _.getListItemElement() === element),\r\n      getParentElement: (element: HTMLElement) => element.parentElement,\r\n      getSelectedElementIndex: (selectionGroup: HTMLElement) => {\r\n        const selectedItem = selectionGroup.querySelector(`.mdc-menu-item--selected`);\r\n        return selectedItem ? this._list.items.toArray().findIndex(_ => _.id === selectedItem.id) : -1;\r\n      },\r\n      notifySelected: (evtData: { index: number }) =>\r\n        this.selected.emit(new MdcMenuSelectedEvent(evtData.index, this._list.items.toArray()[evtData.index]))\r\n    });\r\n  }\r\n\r\n  private _menuFoundation: {\r\n    destroy(): void,\r\n    handleKeydown(evt: KeyboardEvent): void,\r\n    handleItemAction(listItem: HTMLElement): void\r\n  } = new MDCMenuFoundation(this._createAdapter());\r\n\r\n  ngAfterContentInit(): void {\r\n    this.initMenuSurface();\r\n    this._initList();\r\n    this._listenForListItemActions();\r\n\r\n    this.opened.pipe(takeUntil(this._destroyed))\r\n      .subscribe(() => {\r\n        if (this._list) {\r\n          this._list.focusFirstElement();\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._destroyed.next();\r\n    this._destroyed.complete();\r\n\r\n    this.destroyMenuSurface();\r\n    this._menuFoundation.destroy();\r\n  }\r\n\r\n  focus(): void {\r\n    this._getHostElement().focus();\r\n  }\r\n\r\n  _handleKeydown(evt: KeyboardEvent): void {\r\n    this._menuFoundation.handleKeydown(evt);\r\n  }\r\n\r\n  private _initList(): void {\r\n    if (!this._list) { return; }\r\n\r\n    this._list.setRole('menu');\r\n    this._list.wrapFocus = this._wrapFocus;\r\n\r\n    // When the list items change, re-subscribe\r\n    this._list.items.changes.pipe(takeUntil(this._destroyed))\r\n      .subscribe(() => this._list.items.forEach(item => item.setRole('menuitem')));\r\n  }\r\n\r\n  /** Listens to action events on each list item. */\r\n  private _listenForListItemActions(): void {\r\n    this._list.actionEvent.pipe(takeUntil(this._destroyed))\r\n      .subscribe((event: MdcListItemAction) =>\r\n        this._menuFoundation.handleItemAction(this._list.items.toArray()[event.index].getListItemElement()));\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport {MDCMenuFoundation} from './foundation';\nimport {strings, cssClasses} from './constants';\nimport {MDCMenuSurface, Corner} from '@material/menu-surface/index';\nimport {MDCMenuSurfaceFoundation, AnchorMargin} from '@material/menu-surface/foundation';\nimport {MDCList, MDCListFoundation} from '@material/list/index';\n\n/**\n * @extends MDCComponent<!MDCMenuFoundation>\n */\nclass MDCMenu extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n    /** @private {!MDCMenuSurface} */\n    this.menuSurface_;\n    /** @private {!MDCList} */\n    this.list_;\n    /** @private {!Function} */\n    this.handleKeydown_;\n\n    /** @private {!Function} */\n    this.handleItemAction_;\n\n    /** @private {!Function} */\n    this.afterOpenedCallback_;\n  }\n\n  /**\n   * @param {!HTMLElement} root\n   * @return {!MDCMenu}\n   */\n  static attachTo(root) {\n    return new MDCMenu(root);\n  }\n\n  initialize(\n    menuSurfaceFactory = (el) => new MDCMenuSurface(el),\n    listFactory = (el) => new MDCList(el)) {\n    this.menuSurface_ = menuSurfaceFactory(this.root_);\n\n    const list = this.root_.querySelector(strings.LIST_SELECTOR);\n    if (list) {\n      this.list_ = listFactory(list);\n      this.list_.wrapFocus = true;\n    }\n  }\n\n  initialSyncWithDOM() {\n    this.afterOpenedCallback_ = () => this.handleAfterOpened_();\n    this.handleKeydown_ = (evt) => this.foundation_.handleKeydown(evt);\n    this.handleItemAction_ = (evt) => this.foundation_.handleItemAction(this.items[evt.detail]);\n\n    this.menuSurface_.listen(MDCMenuSurfaceFoundation.strings.OPENED_EVENT, this.afterOpenedCallback_);\n    this.listen('keydown', this.handleKeydown_);\n    this.listen(MDCListFoundation.strings.ACTION_EVENT, this.handleItemAction_);\n  }\n\n  destroy() {\n    if (this.list_) {\n      this.list_.destroy();\n    }\n\n    this.menuSurface_.destroy();\n    this.menuSurface_.unlisten(MDCMenuSurfaceFoundation.strings.OPENED_EVENT, this.afterOpenedCallback_);\n    this.unlisten('keydown', this.handleKeydown_);\n    this.unlisten(MDCListFoundation.strings.ACTION_EVENT, this.handleItemAction_);\n    super.destroy();\n  }\n\n  /** @return {boolean} */\n  get open() {\n    return this.menuSurface_.open;\n  }\n\n  /** @param {boolean} value */\n  set open(value) {\n    this.menuSurface_.open = value;\n  }\n\n  /** @return {boolean} */\n  get wrapFocus() {\n    return this.list_.wrapFocus;\n  }\n\n  /** @param {boolean} value */\n  set wrapFocus(value) {\n    this.list_.wrapFocus = value;\n  }\n\n  /**\n   * @param {!Corner} corner Default anchor corner alignment of top-left\n   *     menu corner.\n   */\n  setAnchorCorner(corner) {\n    this.menuSurface_.setAnchorCorner(corner);\n  }\n\n  /**\n   * @param {!AnchorMargin} margin\n   */\n  setAnchorMargin(margin) {\n    this.menuSurface_.setAnchorMargin(margin);\n  }\n\n  /**\n   * Return the items within the menu. Note that this only contains the set of elements within\n   * the items container that are proper list items, and not supplemental / presentational DOM\n   * elements.\n   * @return {!Array<!HTMLElement>}\n   */\n  get items() {\n    return this.list_.listElements;\n  }\n\n  /**\n   * Return the item within the menu at the index specified.\n   * @param {number} index\n   * @return {?HTMLElement}\n   */\n  getOptionByIndex(index) {\n    const items = this.items;\n\n    if (index < items.length) {\n      return this.items[index];\n    } else {\n      return null;\n    }\n  }\n\n  /** @param {boolean} quickOpen */\n  set quickOpen(quickOpen) {\n    this.menuSurface_.quickOpen = quickOpen;\n  }\n\n  /** @param {boolean} isFixed */\n  setFixedPosition(isFixed) {\n    this.menuSurface_.setFixedPosition(isFixed);\n  }\n\n  hoistMenuToBody() {\n    this.menuSurface_.hoistMenuToBody();\n  }\n\n  /** @param {boolean} isHoisted */\n  setIsHoisted(isHoisted) {\n    this.menuSurface_.setIsHoisted(isHoisted);\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  setAbsolutePosition(x, y) {\n    this.menuSurface_.setAbsolutePosition(x, y);\n  }\n\n  /**\n   * Sets the element that the menu-surface is anchored to.\n   * @param {!HTMLElement} element\n   */\n  setAnchorElement(element) {\n    this.menuSurface_.anchorElement = element;\n  }\n\n  handleAfterOpened_() {\n    const list = this.items;\n    if (list.length > 0) {\n      list[0].focus();\n    }\n  }\n\n  /** @return {!MDCMenuFoundation} */\n  getDefaultFoundation() {\n    return new MDCMenuFoundation({\n      addClassToElementAtIndex: (index, className) => {\n        const list = this.items;\n        list[index].classList.add(className);\n      },\n      removeClassFromElementAtIndex: (index, className) => {\n        const list = this.items;\n        list[index].classList.remove(className);\n      },\n      addAttributeToElementAtIndex: (index, attr, value) => {\n        const list = this.items;\n        list[index].setAttribute(attr, value);\n      },\n      removeAttributeFromElementAtIndex: (index, attr) => {\n        const list = this.items;\n        list[index].removeAttribute(attr);\n      },\n      elementContainsClass: (element, className) => element.classList.contains(className),\n      closeSurface: () => this.open = false,\n      getElementIndex: (element) => this.items.indexOf(element),\n      getParentElement: (element) => element.parentElement,\n      getSelectedElementIndex: (selectionGroup) => {\n        return this.items.indexOf(selectionGroup.querySelector(`.${cssClasses.MENU_SELECTED_LIST_ITEM}`));\n      },\n      notifySelected: (evtData) => this.emit(strings.SELECTED_EVENT, {\n        index: evtData.index,\n        item: this.items[evtData.index],\n      }),\n    });\n  }\n}\n\nexport {MDCMenuFoundation, MDCMenu, AnchorMargin, Corner};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCListFoundation from './foundation';\nimport MDCListAdapter from './adapter';\nimport {matches} from '@material/dom/ponyfill';\nimport {cssClasses, strings, Index} from './constants'; // eslint-disable-line no-unused-vars\n\n/**\n * @extends MDCComponent<!MDCListFoundation>\n */\nclass MDCList extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n    /** @private {!Function} */\n    this.handleKeydown_;\n    /** @private {!Function} */\n    this.handleClick_;\n    /** @private {!Function} */\n    this.focusInEventListener_;\n    /** @private {!Function} */\n    this.focusOutEventListener_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCList}\n   */\n  static attachTo(root) {\n    return new MDCList(root);\n  }\n\n  destroy() {\n    this.root_.removeEventListener('keydown', this.handleKeydown_);\n    this.root_.removeEventListener('click', this.handleClick_);\n    this.root_.removeEventListener('focusin', this.focusInEventListener_);\n    this.root_.removeEventListener('focusout', this.focusOutEventListener_);\n  }\n\n  initialSyncWithDOM() {\n    this.handleClick_ = this.handleClickEvent_.bind(this);\n    this.handleKeydown_ = this.handleKeydownEvent_.bind(this);\n    this.focusInEventListener_ = this.handleFocusInEvent_.bind(this);\n    this.focusOutEventListener_ = this.handleFocusOutEvent_.bind(this);\n    this.root_.addEventListener('keydown', this.handleKeydown_);\n    this.root_.addEventListener('focusin', this.focusInEventListener_);\n    this.root_.addEventListener('focusout', this.focusOutEventListener_);\n    this.root_.addEventListener('click', this.handleClick_);\n    this.layout();\n    this.initializeListType();\n  }\n\n  layout() {\n    const direction = this.root_.getAttribute(strings.ARIA_ORIENTATION);\n    this.vertical = direction !== strings.ARIA_ORIENTATION_HORIZONTAL;\n\n    // List items need to have at least tabindex=-1 to be focusable.\n    [].slice.call(this.root_.querySelectorAll('.mdc-list-item:not([tabindex])'))\n      .forEach((ele) => {\n        ele.setAttribute('tabindex', -1);\n      });\n\n    // Child button/a elements are not tabbable until the list item is focused.\n    [].slice.call(this.root_.querySelectorAll(strings.FOCUSABLE_CHILD_ELEMENTS))\n      .forEach((ele) => ele.setAttribute('tabindex', -1));\n\n    this.foundation_.layout();\n  }\n\n  /**\n   * Used to figure out which list item this event is targetting. Or returns -1 if\n   * there is no list item\n   * @param {Event} evt\n   * @private\n   */\n  getListItemIndex_(evt) {\n    let eventTarget = /** @type {HTMLElement} */ (evt.target);\n    let index = -1;\n\n    // Find the first ancestor that is a list item or the list.\n    while (!eventTarget.classList.contains(cssClasses.LIST_ITEM_CLASS)\n    && !eventTarget.classList.contains(cssClasses.ROOT)) {\n      eventTarget = eventTarget.parentElement;\n    }\n\n    // Get the index of the element if it is a list item.\n    if (eventTarget.classList.contains(cssClasses.LIST_ITEM_CLASS)) {\n      index = this.listElements.indexOf(eventTarget);\n    }\n\n    return index;\n  }\n\n  /**\n   * Used to figure out which element was clicked before sending the event to the foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleFocusInEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n    this.foundation_.handleFocusIn(evt, index);\n  }\n\n  /**\n   * Used to figure out which element was clicked before sending the event to the foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleFocusOutEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n    this.foundation_.handleFocusOut(evt, index);\n  }\n\n  /**\n   * Used to figure out which element was focused when keydown event occurred before sending the event to the\n   * foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleKeydownEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n\n    if (index >= 0) {\n      this.foundation_.handleKeydown(evt, evt.target.classList.contains(cssClasses.LIST_ITEM_CLASS), index);\n    }\n  }\n\n  /**\n   * Used to figure out which element was clicked before sending the event to the foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleClickEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n\n    // Toggle the checkbox only if it's not the target of the event, or the checkbox will have 2 change events.\n    const toggleCheckbox = !matches(/** @type {!Element} */ (evt.target), strings.CHECKBOX_RADIO_SELECTOR);\n    this.foundation_.handleClick(index, toggleCheckbox);\n  }\n\n  /**\n   * Initialize selectedIndex value based on pre-selected checkbox list items, single selection or radio.\n   */\n  initializeListType() {\n    const checkboxListItems = this.root_.querySelectorAll(strings.ARIA_ROLE_CHECKBOX_SELECTOR);\n    const singleSelectedListItem = this.root_.querySelector(`.${cssClasses.LIST_ITEM_ACTIVATED_CLASS},\n        .${cssClasses.LIST_ITEM_SELECTED_CLASS}`);\n    const radioSelectedListItem = this.root_.querySelector(strings.ARIA_CHECKED_RADIO_SELECTOR);\n\n    if (checkboxListItems.length) {\n      const preselectedItems = this.root_.querySelectorAll(strings.ARIA_CHECKED_CHECKBOX_SELECTOR);\n      this.selectedIndex = [].map.call(preselectedItems, (listItem) => this.listElements.indexOf(listItem));\n    } else if (singleSelectedListItem) {\n      if (singleSelectedListItem.classList.contains(cssClasses.LIST_ITEM_ACTIVATED_CLASS)) {\n        this.foundation_.setUseActivatedClass(true);\n      }\n\n      this.singleSelection = true;\n      this.selectedIndex = this.listElements.indexOf(singleSelectedListItem);\n    } else if (radioSelectedListItem) {\n      this.selectedIndex = this.listElements.indexOf(radioSelectedListItem);\n    }\n  }\n\n  /** @param {boolean} value */\n  set vertical(value) {\n    this.foundation_.setVerticalOrientation(value);\n  }\n\n  /** @return Array<!Element>*/\n  get listElements() {\n    return [].slice.call(this.root_.querySelectorAll(strings.ENABLED_ITEMS_SELECTOR));\n  }\n\n  /** @param {boolean} value */\n  set wrapFocus(value) {\n    this.foundation_.setWrapFocus(value);\n  }\n\n  /** @param {boolean} isSingleSelectionList */\n  set singleSelection(isSingleSelectionList) {\n    this.foundation_.setSingleSelection(isSingleSelectionList);\n  }\n\n  /** @return {!Index} */\n  get selectedIndex() {\n    return this.foundation_.getSelectedIndex();\n  }\n\n  /** @param {!Index} index */\n  set selectedIndex(index) {\n    this.foundation_.setSelectedIndex(index);\n  }\n\n  /** @return {!MDCListFoundation} */\n  getDefaultFoundation() {\n    return new MDCListFoundation(/** @type {!MDCListAdapter} */ (Object.assign({\n      getListItemCount: () => this.listElements.length,\n      getFocusedElementIndex: () => this.listElements.indexOf(document.activeElement),\n      setAttributeForElementIndex: (index, attr, value) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.setAttribute(attr, value);\n        }\n      },\n      removeAttributeForElementIndex: (index, attr) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.removeAttribute(attr);\n        }\n      },\n      addClassForElementIndex: (index, className) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.classList.add(className);\n        }\n      },\n      removeClassForElementIndex: (index, className) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.classList.remove(className);\n        }\n      },\n      focusItemAtIndex: (index) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.focus();\n        }\n      },\n      setTabIndexForListItemChildren: (listItemIndex, tabIndexValue) => {\n        const element = this.listElements[listItemIndex];\n        const listItemChildren = [].slice.call(element.querySelectorAll(strings.CHILD_ELEMENTS_TO_TOGGLE_TABINDEX));\n        listItemChildren.forEach((ele) => ele.setAttribute('tabindex', tabIndexValue));\n      },\n      hasCheckboxAtIndex: (index) => {\n        const listItem = this.listElements[index];\n        return !!listItem.querySelector(strings.CHECKBOX_SELECTOR);\n      },\n      hasRadioAtIndex: (index) => {\n        const listItem = this.listElements[index];\n        return !!listItem.querySelector(strings.RADIO_SELECTOR);\n      },\n      isCheckboxCheckedAtIndex: (index) => {\n        const listItem = this.listElements[index];\n        const toggleEl = listItem.querySelector(strings.CHECKBOX_SELECTOR);\n        return toggleEl.checked;\n      },\n      setCheckedCheckboxOrRadioAtIndex: (index, isChecked) => {\n        const listItem = this.listElements[index];\n        const toggleEl = listItem.querySelector(strings.CHECKBOX_RADIO_SELECTOR);\n        toggleEl.checked = isChecked;\n\n        const event = document.createEvent('Event');\n        event.initEvent('change', true, true);\n        toggleEl.dispatchEvent(event);\n      },\n      notifyAction: (index) => {\n        this.emit(strings.ACTION_EVENT, index, /** shouldBubble */ true);\n      },\n      isFocusInsideList: () => {\n        return this.root_.contains(document.activeElement);\n      },\n    })));\n  }\n}\n\nexport {MDCList, MDCListFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element}\n */\nfunction closest(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  let el = element;\n  while (el) {\n    if (matches(el, selector)) {\n      return el;\n    }\n    el = el.parentElement;\n  }\n  return null;\n}\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {boolean}\n */\nfunction matches(element, selector) {\n  const nativeMatches = element.matches\n    || element.webkitMatchesSelector\n    || element.msMatchesSelector;\n  return nativeMatches.call(element, selector);\n}\n\nexport {closest, matches};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport * as util from './util';\nimport {MDCMenuSurfaceFoundation, AnchorMargin} from './foundation';\nimport {MDCMenuSurfaceAdapter} from './adapter';\nimport {Corner, CornerBit, strings, cssClasses} from './constants';\n\n/**\n * @extends MDCComponent<!MDCMenuSurfaceFoundation>\n */\nclass MDCMenuSurface extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n\n    /** @private {!Element} */\n    this.previousFocus_;\n    /** @private {!Element} */\n    this.anchorElement;\n    /** @private {Element} */\n    this.firstFocusableElement_;\n    /** @private {Element} */\n    this.lastFocusableElement_;\n    /** @private {!Function} */\n    this.handleKeydown_;\n    /** @private {!Function} */\n    this.handleBodyClick_;\n    /** @private {!Function} */\n    this.registerBodyClickListener_;\n    /** @private {!Function} */\n    this.deregisterBodyClickListener_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCMenuSurface}\n   */\n  static attachTo(root) {\n    return new MDCMenuSurface(root);\n  }\n\n  initialSyncWithDOM() {\n    if (this.root_.parentElement && this.root_.parentElement.classList.contains(cssClasses.ANCHOR)) {\n      this.anchorElement = this.root_.parentElement;\n    }\n\n    if (this.root_.classList.contains(cssClasses.FIXED)) {\n      this.setFixedPosition(true);\n    }\n\n    this.handleKeydown_ = (evt) => this.foundation_.handleKeydown(evt);\n    this.handleBodyClick_ = (evt) => this.foundation_.handleBodyClick(evt);\n\n    this.registerBodyClickListener_ = () => document.body.addEventListener('click', this.handleBodyClick_);\n    this.deregisterBodyClickListener_ = () => document.body.removeEventListener('click', this.handleBodyClick_);\n\n    this.root_.addEventListener('keydown', this.handleKeydown_);\n    this.root_.addEventListener(strings.OPENED_EVENT, this.registerBodyClickListener_);\n    this.root_.addEventListener(strings.CLOSED_EVENT, this.deregisterBodyClickListener_);\n  }\n\n  destroy() {\n    this.root_.removeEventListener('keydown', this.handleKeydown_);\n    this.root_.removeEventListener(strings.OPENED_EVENT, this.registerBodyClickListener_);\n    this.root_.removeEventListener(strings.CLOSED_EVENT, this.deregisterBodyClickListener_);\n    super.destroy();\n  }\n\n  /** @return {boolean} */\n  get open() {\n    return this.foundation_.isOpen();\n  }\n\n  /** @param {boolean} value */\n  set open(value) {\n    if (value) {\n      const focusableElements = this.root_.querySelectorAll(strings.FOCUSABLE_ELEMENTS);\n      this.firstFocusableElement_ = focusableElements.length > 0 ? focusableElements[0] : null;\n      this.lastFocusableElement_ = focusableElements.length > 0 ?\n        focusableElements[focusableElements.length - 1] : null;\n      this.foundation_.open();\n    } else {\n      this.foundation_.close();\n    }\n  }\n\n  /**\n   * Removes the menu-surface from it's current location and appends it to the\n   * body to overcome any overflow:hidden issues.\n   */\n  hoistMenuToBody() {\n    document.body.appendChild(this.root_.parentElement.removeChild(this.root_));\n    this.setIsHoisted(true);\n  }\n\n  /**\n   * Sets the foundation to use page offsets for an positioning when the menu\n   * is hoisted to the body.\n   * @param {boolean} isHoisted\n   */\n  setIsHoisted(isHoisted) {\n    this.foundation_.setIsHoisted(isHoisted);\n  }\n\n  /**\n   * Sets the element that the menu-surface is anchored to.\n   * @param {!Element} element\n   */\n  setMenuSurfaceAnchorElement(element) {\n    this.anchorElement = element;\n  }\n\n  /**\n   * Sets the menu-surface to position: fixed.\n   * @param {boolean} isFixed\n   */\n  setFixedPosition(isFixed) {\n    if (isFixed) {\n      this.root_.classList.add(cssClasses.FIXED);\n    } else {\n      this.root_.classList.remove(cssClasses.FIXED);\n    }\n\n    this.foundation_.setFixedPosition(isFixed);\n  }\n\n  /**\n   * Sets the absolute x/y position to position based on. Requires the menu to be hoisted.\n   * @param {number} x\n   * @param {number} y\n   */\n  setAbsolutePosition(x, y) {\n    this.foundation_.setAbsolutePosition(x, y);\n    this.setIsHoisted(true);\n  }\n\n  /**\n   * @param {!Corner} corner Default anchor corner alignment of top-left\n   *     surface corner.\n   */\n  setAnchorCorner(corner) {\n    this.foundation_.setAnchorCorner(corner);\n  }\n\n  /**\n   * @param {!AnchorMargin} margin\n   */\n  setAnchorMargin(margin) {\n    this.foundation_.setAnchorMargin(margin);\n  }\n\n  /** @param {boolean} quickOpen */\n  set quickOpen(quickOpen) {\n    this.foundation_.setQuickOpen(quickOpen);\n  }\n\n  /** @return {!MDCMenuSurfaceFoundation} */\n  getDefaultFoundation() {\n    return new MDCMenuSurfaceFoundation(\n      /** @type {!MDCMenuSurfaceAdapter} */ (Object.assign({\n        addClass: (className) => this.root_.classList.add(className),\n        removeClass: (className) => this.root_.classList.remove(className),\n        hasClass: (className) => this.root_.classList.contains(className),\n        hasAnchor: () => !!this.anchorElement,\n        notifyClose: () => this.emit(MDCMenuSurfaceFoundation.strings.CLOSED_EVENT, {}),\n        notifyOpen: () => this.emit(MDCMenuSurfaceFoundation.strings.OPENED_EVENT, {}),\n        isElementInContainer: (el) => this.root_ === el || this.root_.contains(el),\n        isRtl: () => getComputedStyle(this.root_).getPropertyValue('direction') === 'rtl',\n        setTransformOrigin: (origin) => {\n          this.root_.style[`${util.getTransformPropertyName(window)}-origin`] = origin;\n        },\n      },\n      this.getFocusAdapterMethods_(),\n      this.getDimensionAdapterMethods_())\n      ));\n  }\n\n  /**\n   * @return {!{\n   * isFocused: function(): boolean,\n   * saveFocus: function(),\n   * restoreFocus: function(),\n   * isFirstElementFocused: function(): boolean,\n   * isLastElementFocused: function(): boolean,\n   * focusFirstElement: function(),\n   * focusLastElement: function(),\n   * }}\n   * @private\n   */\n  getFocusAdapterMethods_() {\n    return {\n      isFocused: () => document.activeElement === this.root_,\n      saveFocus: () => {\n        this.previousFocus_ = document.activeElement;\n      },\n      restoreFocus: () => {\n        if (this.root_.contains(document.activeElement)) {\n          if (this.previousFocus_ && this.previousFocus_.focus) {\n            this.previousFocus_.focus();\n          }\n        }\n      },\n      isFirstElementFocused: () =>\n        this.firstFocusableElement_ && this.firstFocusableElement_ === document.activeElement,\n      isLastElementFocused: () =>\n        this.lastFocusableElement_ && this.lastFocusableElement_ === document.activeElement,\n      focusFirstElement: () =>\n        this.firstFocusableElement_ && this.firstFocusableElement_.focus && this.firstFocusableElement_.focus(),\n      focusLastElement: () =>\n        this.lastFocusableElement_ && this.lastFocusableElement_.focus && this.lastFocusableElement_.focus(),\n    };\n  }\n\n  /**\n   * @return {!{\n   * getInnerDimensions: function(),\n   * getAnchorDimensions: function(): (HTMLElement | null | * | ClientRect),\n   * getWindowDimensions: function(),\n   * setPosition: function(*),\n   * setMaxHeight: function(string)}}\n   * @private\n   */\n  getDimensionAdapterMethods_() {\n    return {\n      getInnerDimensions: () => {\n        return {width: this.root_.offsetWidth, height: this.root_.offsetHeight};\n      },\n      getAnchorDimensions: () => this.anchorElement && this.anchorElement.getBoundingClientRect(),\n      getWindowDimensions: () => {\n        return {width: window.innerWidth, height: window.innerHeight};\n      },\n      getBodyDimensions: () => {\n        return {width: document.body.clientWidth, height: document.body.clientHeight};\n      },\n      getWindowScroll: () => {\n        return {x: window.pageXOffset, y: window.pageYOffset};\n      },\n      setPosition: (position) => {\n        this.root_.style.left = 'left' in position ? position.left : null;\n        this.root_.style.right = 'right' in position ? position.right : null;\n        this.root_.style.top = 'top' in position ? position.top : null;\n        this.root_.style.bottom = 'bottom' in position ? position.bottom : null;\n      },\n      setMaxHeight: (height) => {\n        this.root_.style.maxHeight = height;\n      },\n    };\n  }\n}\n\nexport {MDCMenuSurfaceFoundation, MDCMenuSurface, AnchorMargin, Corner, CornerBit, util};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @type {string|undefined} */\nlet storedTransformPropertyName_;\n\n/**\n * Returns the name of the correct transform property to use on the current browser.\n * @param {!Window} globalObj\n * @param {boolean=} forceRefresh\n * @return {string}\n */\nfunction getTransformPropertyName(globalObj, forceRefresh = false) {\n  if (storedTransformPropertyName_ === undefined || forceRefresh) {\n    const el = globalObj.document.createElement('div');\n    const transformPropertyName = ('transform' in el.style ? 'transform' : 'webkitTransform');\n    storedTransformPropertyName_ = transformPropertyName;\n  }\n\n  return storedTransformPropertyName_;\n}\n\nexport {getTransformPropertyName};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCMenuAdapter} from './adapter';\nimport {cssClasses, strings} from './constants';\nimport {MDCMenuSurfaceFoundation} from '@material/menu-surface/foundation';\nimport MDCListFoundation from '@material/list/foundation';\n\n/**\n * @extends {MDCFoundation<!MDCMenuAdapter>}\n */\nclass MDCMenuFoundation extends MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCMenuAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCMenuAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCMenuAdapter} */ ({\n      addClassToElementAtIndex: () => {},\n      removeClassFromElementAtIndex: () => {},\n      addAttributeToElementAtIndex: () => {},\n      removeAttributeFromElementAtIndex: () => {},\n      elementContainsClass: () => {},\n      closeSurface: () => {},\n      getElementIndex: () => {},\n      getParentElement: () => {},\n      getSelectedElementIndex: () => {},\n      notifySelected: () => {},\n    });\n  }\n\n  /** @param {!MDCMenuAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCMenuFoundation.defaultAdapter, adapter));\n\n    /** @type {number} */\n    this.closeAnimationEndTimerId_ = 0;\n  }\n\n  destroy() {\n    if (this.closeAnimationEndTimerId_) {\n      clearTimeout(this.closeAnimationEndTimerId_);\n    }\n\n    this.adapter_.closeSurface();\n  }\n\n  /**\n   * Handler function for the keydown events.\n   * @param {!Event} evt\n   */\n  handleKeydown(evt) {\n    const {key, keyCode} = evt;\n    const isTab = key === 'Tab' || keyCode === 9;\n\n    if (isTab) {\n      this.adapter_.closeSurface();\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} listItem\n   */\n  handleItemAction(listItem) {\n    const index = this.adapter_.getElementIndex(listItem);\n    if (index < 0) {\n      return;\n    }\n\n    this.adapter_.notifySelected({index});\n    this.adapter_.closeSurface();\n\n    // Wait for the menu to close before adding/removing classes that affect styles.\n    this.closeAnimationEndTimerId_ = setTimeout(() => {\n      const selectionGroup = this.getSelectionGroup_(listItem);\n\n      if (selectionGroup !== null) {\n        this.handleSelectionGroup_(/** @type {!HTMLElement} */ (selectionGroup), index);\n      }\n    }, MDCMenuSurfaceFoundation.numbers.TRANSITION_CLOSE_DURATION);\n  }\n\n  /**\n   * Handles toggling the selected classes in a selection group when a\n   * selection is made.\n   * @param {!HTMLElement} selectionGroup\n   * @param {number} index The selected index value\n   * @private\n   */\n  handleSelectionGroup_(selectionGroup, index) {\n    // De-select the previous selection in this group.\n    const selectedIndex = this.adapter_.getSelectedElementIndex(selectionGroup);\n    if (selectedIndex >= 0) {\n      this.adapter_.removeAttributeFromElementAtIndex(selectedIndex, strings.ARIA_SELECTED_ATTR);\n      this.adapter_.removeClassFromElementAtIndex(selectedIndex, cssClasses.MENU_SELECTED_LIST_ITEM);\n    }\n    // Select the new list item in this group.\n    this.adapter_.addClassToElementAtIndex(index, cssClasses.MENU_SELECTED_LIST_ITEM);\n    this.adapter_.addAttributeToElementAtIndex(index, strings.ARIA_SELECTED_ATTR, 'true');\n  }\n\n  /**\n   * Returns the parent selection group of an element if one exists.\n   * @param listItem\n   * @return {?HTMLElement} parent selection group element or null.\n   * @private\n   */\n  getSelectionGroup_(listItem) {\n    let parent = this.adapter_.getParentElement(listItem);\n    let isGroup = this.adapter_.elementContainsClass(parent, cssClasses.MENU_SELECTION_GROUP);\n\n    // Iterate through ancestors until we find the group or get to the list.\n    while (!isGroup && !this.adapter_.elementContainsClass(parent, MDCListFoundation.cssClasses.ROOT)) {\n      parent = this.adapter_.getParentElement(parent);\n      isGroup = this.adapter_.elementContainsClass(parent, cssClasses.MENU_SELECTION_GROUP);\n    }\n\n    if (isGroup) {\n      return parent;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Find the first ancestor with the mdc-list-item class.\n   * @param {?HTMLElement} target\n   * @return {?HTMLElement}\n   * @private\n   */\n  getListItem_(target) {\n    let isListItem = this.adapter_.elementContainsClass(target, MDCListFoundation.cssClasses.LIST_ITEM_CLASS);\n\n    while (!isListItem) {\n      target = this.adapter_.getParentElement(target);\n      if (target) {\n        isListItem = this.adapter_.elementContainsClass(target, MDCListFoundation.cssClasses.LIST_ITEM_CLASS);\n      } else { // target has no parent element.\n        return null;\n      }\n    }\n\n    return target;\n  }\n}\n\nexport {MDCMenuFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCListAdapter from './adapter';\nimport {strings, cssClasses, Index} from './constants'; // eslint-disable-line no-unused-vars\n\nconst ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\n\nclass MDCListFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCListAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCListAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCListAdapter} */ ({\n      getListItemCount: () => {},\n      getFocusedElementIndex: () => {},\n      setAttributeForElementIndex: () => {},\n      removeAttributeForElementIndex: () => {},\n      addClassForElementIndex: () => {},\n      removeClassForElementIndex: () => {},\n      focusItemAtIndex: () => {},\n      setTabIndexForListItemChildren: () => {},\n      hasRadioAtIndex: () => {},\n      hasCheckboxAtIndex: () => {},\n      isCheckboxCheckedAtIndex: () => {},\n      setCheckedCheckboxOrRadioAtIndex: () => {},\n      notifyAction: () => {},\n      isFocusInsideList: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCListAdapter=} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCListFoundation.defaultAdapter, adapter));\n    /** @private {boolean} */\n    this.wrapFocus_ = false;\n\n    /** @private {boolean} */\n    this.isVertical_ = true;\n\n    /** @private {boolean} */\n    this.isSingleSelectionList_ = false;\n\n    /** @private {!Index} */\n    this.selectedIndex_ = -1;\n\n    /** @private {number} */\n    this.focusedItemIndex_ = -1;\n\n    /** @private {boolean} */\n    this.useActivatedClass_ = false;\n\n    /** @private {boolean} */\n    this.isCheckboxList_ = false;\n\n    /** @private {boolean} */\n    this.isRadioList_ = false;\n  }\n\n  layout() {\n    if (this.adapter_.getListItemCount() === 0) return;\n\n    if (this.adapter_.hasCheckboxAtIndex(0)) {\n      this.isCheckboxList_ = true;\n    } else if (this.adapter_.hasRadioAtIndex(0)) {\n      this.isRadioList_ = true;\n    }\n  }\n\n  /**\n   * Sets the private wrapFocus_ variable.\n   * @param {boolean} value\n   */\n  setWrapFocus(value) {\n    this.wrapFocus_ = value;\n  }\n\n  /**\n   * Sets the isVertical_ private variable.\n   * @param {boolean} value\n   */\n  setVerticalOrientation(value) {\n    this.isVertical_ = value;\n  }\n\n  /**\n   * Sets the isSingleSelectionList_ private variable.\n   * @param {boolean} value\n   */\n  setSingleSelection(value) {\n    this.isSingleSelectionList_ = value;\n  }\n\n  /**\n   * Sets the useActivatedClass_ private variable.\n   * @param {boolean} useActivated\n   */\n  setUseActivatedClass(useActivated) {\n    this.useActivatedClass_ = useActivated;\n  }\n\n  /** @return {!Index} */\n  getSelectedIndex() {\n    return this.selectedIndex_;\n  }\n\n  /** @param {!Index} index */\n  setSelectedIndex(index) {\n    if (!this.isIndexValid_(index)) return;\n\n    if (this.isCheckboxList_) {\n      this.setCheckboxAtIndex_(/** @type {!Array<number>} */ (index));\n    } else if (this.isRadioList_) {\n      this.setRadioAtIndex_(/** @type {number} */ (index));\n    } else {\n      this.setSingleSelectionAtIndex_(/** @type {number} */ (index));\n    }\n  }\n\n  /**\n   * Focus in handler for the list items.\n   * @param evt\n   * @param {number} listItemIndex\n   */\n  handleFocusIn(evt, listItemIndex) {\n    if (listItemIndex >= 0) {\n      this.adapter_.setTabIndexForListItemChildren(listItemIndex, 0);\n    }\n  }\n\n  /**\n   * Focus out handler for the list items.\n   * @param {Event} evt\n   * @param {number} listItemIndex\n   */\n  handleFocusOut(evt, listItemIndex) {\n    if (listItemIndex >= 0) {\n      this.adapter_.setTabIndexForListItemChildren(listItemIndex, -1);\n    }\n\n    /**\n     * Between Focusout & Focusin some browsers do not have focus on any element. Setting a delay to wait till the focus\n     * is moved to next element.\n     */\n    setTimeout(() => {\n      if (!this.adapter_.isFocusInsideList()) {\n        this.setTabindexToFirstSelectedItem_();\n      }\n    }, 0);\n  }\n\n  /**\n   * Key handler for the list.\n   * @param {Event} evt\n   * @param {boolean} isRootListItem\n   * @param {number} listItemIndex\n   */\n  handleKeydown(evt, isRootListItem, listItemIndex) {\n    const arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;\n    const arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;\n    const arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;\n    const arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;\n    const isHome = evt.key === 'Home' || evt.keyCode === 36;\n    const isEnd = evt.key === 'End' || evt.keyCode === 35;\n    const isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n    const isSpace = evt.key === 'Space' || evt.keyCode === 32;\n\n    let currentIndex = this.adapter_.getFocusedElementIndex();\n    let nextIndex = -1;\n    if (currentIndex === -1) {\n      currentIndex = listItemIndex;\n      if (currentIndex < 0) {\n        // If this event doesn't have a mdc-list-item ancestor from the\n        // current list (not from a sublist), return early.\n        return;\n      }\n    }\n\n    if ((this.isVertical_ && arrowDown) || (!this.isVertical_ && arrowRight)) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusNextElement(currentIndex);\n    } else if ((this.isVertical_ && arrowUp) || (!this.isVertical_ && arrowLeft)) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusPrevElement(currentIndex);\n    } else if (isHome) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusFirstElement();\n    } else if (isEnd) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusLastElement();\n    } else if (isEnter || isSpace) {\n      if (isRootListItem) {\n        // Return early if enter key is pressed on anchor element which triggers synthetic MouseEvent event.\n        if (evt.target.tagName === 'A' && isEnter) return;\n        this.preventDefaultEvent_(evt);\n\n        if (this.isSelectableList_()) {\n          this.setSelectedIndexOnAction_(currentIndex);\n        }\n\n        this.adapter_.notifyAction(currentIndex);\n      }\n    }\n\n    this.focusedItemIndex_ = currentIndex;\n\n    if (nextIndex >= 0) {\n      this.setTabindexAtIndex_(nextIndex);\n      this.focusedItemIndex_ = nextIndex;\n    }\n  }\n\n  /**\n   * Click handler for the list.\n   * @param {number} index\n   * @param {boolean} toggleCheckbox\n   */\n  handleClick(index, toggleCheckbox) {\n    if (index === -1) return;\n\n    if (this.isSelectableList_()) {\n      this.setSelectedIndexOnAction_(index, toggleCheckbox);\n    }\n\n    this.adapter_.notifyAction(index);\n\n    this.setTabindexAtIndex_(index);\n    this.focusedItemIndex_ = index;\n  }\n\n  /**\n   * Ensures that preventDefault is only called if the containing element doesn't\n   * consume the event, and it will cause an unintended scroll.\n   * @param {Event} evt\n   * @private\n   */\n  preventDefaultEvent_(evt) {\n    const tagName = `${evt.target.tagName}`.toLowerCase();\n    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n      evt.preventDefault();\n    }\n  }\n\n  /**\n   * Focuses the next element on the list.\n   * @param {number} index\n   * @return {number}\n   */\n  focusNextElement(index) {\n    const count = this.adapter_.getListItemCount();\n    let nextIndex = index + 1;\n    if (nextIndex >= count) {\n      if (this.wrapFocus_) {\n        nextIndex = 0;\n      } else {\n        // Return early because last item is already focused.\n        return index;\n      }\n    }\n    this.adapter_.focusItemAtIndex(nextIndex);\n\n    return nextIndex;\n  }\n\n  /**\n   * Focuses the previous element on the list.\n   * @param {number} index\n   * @return {number}\n   */\n  focusPrevElement(index) {\n    let prevIndex = index - 1;\n    if (prevIndex < 0) {\n      if (this.wrapFocus_) {\n        prevIndex = this.adapter_.getListItemCount() - 1;\n      } else {\n        // Return early because first item is already focused.\n        return index;\n      }\n    }\n    this.adapter_.focusItemAtIndex(prevIndex);\n\n    return prevIndex;\n  }\n\n  /**\n   * @return {number}\n   */\n  focusFirstElement() {\n    this.adapter_.focusItemAtIndex(0);\n    return 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  focusLastElement() {\n    const lastIndex = this.adapter_.getListItemCount() - 1;\n    this.adapter_.focusItemAtIndex(lastIndex);\n    return lastIndex;\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  setSingleSelectionAtIndex_(index) {\n    let selectedClassName = cssClasses.LIST_ITEM_SELECTED_CLASS;\n    if (this.useActivatedClass_) {\n      selectedClassName = cssClasses.LIST_ITEM_ACTIVATED_CLASS;\n    }\n\n    if (this.selectedIndex_ >= 0 && this.selectedIndex_ !== index) {\n      this.adapter_.removeClassForElementIndex(this.selectedIndex_, selectedClassName);\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, strings.ARIA_SELECTED, 'false');\n    }\n\n    this.adapter_.addClassForElementIndex(index, selectedClassName);\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_SELECTED, 'true');\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * Toggles radio at give index. Radio doesn't change the checked state if it is already checked.\n   * @param {number} index\n   * @private\n   */\n  setRadioAtIndex_(index) {\n    this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, true);\n\n    if (this.selectedIndex_ >= 0) {\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, strings.ARIA_CHECKED, 'false');\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_CHECKED, 'true');\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * @param {!Array<number>} index\n   * @private\n   */\n  setCheckboxAtIndex_(index) {\n    for (let i = 0; i < this.adapter_.getListItemCount(); i++) {\n      let isChecked = false;\n      if (index.indexOf(i) >= 0) {\n        isChecked = true;\n      }\n\n      this.adapter_.setCheckedCheckboxOrRadioAtIndex(i, isChecked);\n      this.adapter_.setAttributeForElementIndex(i, strings.ARIA_CHECKED, isChecked ? 'true' : 'false');\n    }\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  setTabindexAtIndex_(index) {\n    if (this.focusedItemIndex_ === -1 && index !== 0) {\n      // If no list item was selected set first list item's tabindex to -1.\n      // Generally, tabindex is set to 0 on first list item of list that has no preselected items.\n      this.adapter_.setAttributeForElementIndex(0, 'tabindex', -1);\n    } else if (this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {\n      this.adapter_.setAttributeForElementIndex(this.focusedItemIndex_, 'tabindex', -1);\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, 'tabindex', 0);\n  }\n\n  /**\n   * @return {boolean} Return true if it is single selectin list, checkbox list or radio list.\n   * @private\n   */\n  isSelectableList_() {\n    return this.isSingleSelectionList_ || this.isCheckboxList_ || this.isRadioList_;\n  }\n\n  /** @private */\n  setTabindexToFirstSelectedItem_() {\n    let targetIndex = 0;\n\n    if (this.isSelectableList_()) {\n      if (typeof this.selectedIndex_ === 'number' && this.selectedIndex_ !== -1) {\n        targetIndex = this.selectedIndex_;\n      } else if (this.selectedIndex_ instanceof Array && this.selectedIndex_.length > 0) {\n        targetIndex = this.selectedIndex_.reduce((currentIndex, minIndex) => Math.min(currentIndex, minIndex));\n      }\n    }\n\n    this.setTabindexAtIndex_(targetIndex);\n  }\n\n  /**\n   * @param {!Index} index\n   * @return {boolean}\n   * @private\n   */\n  isIndexValid_(index) {\n    if (index instanceof Array) {\n      if (!this.isCheckboxList_) {\n        throw new Error('MDCListFoundation: Array of index is only supported for checkbox based list');\n      }\n\n      if (index.length === 0) {\n        return true;\n      } else {\n        return index.some((i) => this.isIndexInRange_(i));\n      }\n    } else if (typeof index === 'number') {\n      if (this.isCheckboxList_) {\n        throw new Error('MDCListFoundation: Expected array of index for checkbox based list but got number: ' + index);\n      }\n      return this.isIndexInRange_(index);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @return {boolean}\n   * @private\n   */\n  isIndexInRange_(index) {\n    const listSize = this.adapter_.getListItemCount();\n    return index >= 0 && index < listSize;\n  }\n\n  /**\n   * @param {number} index\n   * @param {boolean=} toggleCheckbox\n   * @private\n   */\n  setSelectedIndexOnAction_(index, toggleCheckbox = true) {\n    if (this.isCheckboxList_) {\n      this.toggleCheckboxAtIndex_(index, toggleCheckbox);\n    } else {\n      this.setSelectedIndex(index);\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @param {boolean} toggleCheckbox\n   * @private\n   */\n  toggleCheckboxAtIndex_(index, toggleCheckbox) {\n    let isChecked = this.adapter_.isCheckboxCheckedAtIndex(index);\n\n    if (toggleCheckbox) {\n      isChecked = !isChecked;\n      this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, isChecked);\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_CHECKED, isChecked ? 'true' : 'false');\n\n    // If none of the checkbox items are selected and selectedIndex is not initialized then provide a default value.\n    if (this.selectedIndex_ === -1) {\n      this.selectedIndex_ = [];\n    }\n\n    if (isChecked) {\n      this.selectedIndex_.push(index);\n    } else {\n      this.selectedIndex_ = this.selectedIndex_.filter((i) => i !== index);\n    }\n  }\n}\n\nexport default MDCListFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-list',\n  LIST_ITEM_CLASS: 'mdc-list-item',\n  LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',\n  LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_ORIENTATION: 'aria-orientation',\n  ARIA_ORIENTATION_HORIZONTAL: 'horizontal',\n  ARIA_SELECTED: 'aria-selected',\n  ARIA_CHECKED: 'aria-checked',\n  ARIA_CHECKED_RADIO_SELECTOR: '[role=\"radio\"][aria-checked=\"true\"]',\n  ARIA_ROLE_CHECKBOX_SELECTOR: '[role=\"checkbox\"]',\n  ARIA_CHECKED_CHECKBOX_SELECTOR: '[role=\"checkbox\"][aria-checked=\"true\"]',\n  RADIO_SELECTOR: 'input[type=\"radio\"]:not(:disabled)',\n  CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled)',\n  CHECKBOX_RADIO_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled), input[type=\"radio\"]:not(:disabled)',\n  CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled),\n  .${cssClasses.LIST_ITEM_CLASS} a`,\n  FOCUSABLE_CHILD_ELEMENTS: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled), .${cssClasses.LIST_ITEM_CLASS} a,\n  .${cssClasses.LIST_ITEM_CLASS} input[type=\"radio\"]:not(:disabled),\n  .${cssClasses.LIST_ITEM_CLASS} input[type=\"checkbox\"]:not(:disabled)`,\n  ENABLED_ITEMS_SELECTOR: '.mdc-list-item:not(.mdc-list-item--disabled)',\n  ACTION_EVENT: 'MDCList:action',\n};\n\n/** @typedef {number|!Array<number>} */\nlet Index;\n\nexport {strings, cssClasses, Index};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC List. Provides an interface for managing focus.\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCListAdapter {\n  /** @return {number} */\n  getListItemCount() {}\n\n  /**\n   * @return {number} */\n  getFocusedElementIndex() {}\n\n  /**\n   * @param {number} index\n   * @param {string} attribute\n   * @param {string} value\n   */\n  setAttributeForElementIndex(index, attribute, value) {}\n\n  /**\n   * @param {number} index\n   * @param {string} attribute\n   */\n  removeAttributeForElementIndex(index, attribute) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  addClassForElementIndex(index, className) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  removeClassForElementIndex(index, className) {}\n\n  /**\n   * Focuses list item at the index specified.\n   * @param {number} index\n   */\n  focusItemAtIndex(index) {}\n\n  /**\n   * Sets the tabindex to the value specified for all button/a element children of\n   * the list item at the index specified.\n   * @param {number} listItemIndex\n   * @param {number} tabIndexValue\n   */\n  setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {}\n\n  /**\n   * @param {number} index\n   * @return {boolean} Returns true if radio button is present at given list item index.\n   */\n  hasRadioAtIndex(index) {}\n\n  /**\n   * @param {number} index\n   * @return {boolean} Returns true if checkbox is present at given list item index.\n   */\n  hasCheckboxAtIndex(index) {}\n\n  /**\n   * @param {number} index\n   * @return {boolean} Returns true if checkbox inside a list item is checked.\n   */\n  isCheckboxCheckedAtIndex(index) {}\n\n  /**\n   * Sets the checked status of checkbox or radio at given list item index.\n   * @param {number} index\n   * @param {boolean} isChecked\n   */\n  setCheckedCheckboxOrRadioAtIndex(index, isChecked) {}\n\n  /**\n   * Notifies user action on list item.\n   */\n  notifyAction(index) {}\n\n  /**\n   * @return {boolean} Returns true when the current focused element is inside list root.\n   */\n  isFocusInsideList() {}\n}\n\nexport default MDCListAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nlet AnchorMargin;\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {{\n *   viewport: { width: number, height: number },\n *   viewportDistance: {top: number, right: number, bottom: number, left: number},\n *   anchorHeight: number,\n *   anchorWidth: number,\n *   surfaceHeight: number,\n *   surfaceWidth: number,\n *   bodyDimensions,\n *   windowScroll,\n * }}\n */\nlet AutoLayoutMeasurements;\n/* eslint-enable no-unused-vars */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCMenuSurfaceAdapter} from './adapter';\nimport {cssClasses, strings, numbers, Corner, CornerBit} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCMenuSurfaceAdapter>}\n */\nclass MDCMenuSurfaceFoundation extends MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum{string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return enum{number} */\n  static get Corner() {\n    return Corner;\n  }\n\n  /**\n   * {@see MDCMenuSurfaceAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCMenuSurfaceAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCMenuSurfaceAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => false,\n      hasAnchor: () => false,\n      notifyClose: () => {},\n      notifyOpen: () => {},\n      isElementInContainer: () => false,\n      isRtl: () => false,\n      setTransformOrigin: () => {},\n      isFocused: () => false,\n      saveFocus: () => {},\n      restoreFocus: () => {},\n      isFirstElementFocused: () => {},\n      isLastElementFocused: () => {},\n      focusFirstElement: () => {},\n      focusLastElement: () => {},\n      getInnerDimensions: () => ({}),\n      getAnchorDimensions: () => ({}),\n      getWindowDimensions: () => ({}),\n      getBodyDimensions: () => ({}),\n      getWindowScroll: () => ({}),\n      setPosition: () => {},\n      setMaxHeight: () => {},\n    });\n  }\n\n  /** @param {!MDCMenuSurfaceAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCMenuSurfaceFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.isOpen_ = false;\n    /** @private {number} */\n    this.openAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.closeAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.animationRequestId_ = 0;\n    /** @private {!{ width: number, height: number }} */\n    this.dimensions_;\n    /** @private {!Corner} */\n    this.anchorCorner_ = Corner.TOP_START;\n    /** @private {!AnchorMargin} */\n    this.anchorMargin_ = {top: 0, right: 0, bottom: 0, left: 0};\n    /** @private {?AutoLayoutMeasurements} */\n    this.measures_ = null;\n    /** @private {boolean} */\n    this.quickOpen_ = false;\n    /** @private {boolean} */\n    this.hoistedElement_ = false;\n    /** @private {boolean} */\n    this.isFixedPosition_ = false;\n    /** @private {!{x: number, y: number}} */\n    this.position_ = {x: 0, y: 0};\n  }\n\n  init() {\n    const {ROOT, OPEN} = MDCMenuSurfaceFoundation.cssClasses;\n\n    if (!this.adapter_.hasClass(ROOT)) {\n      throw new Error(`${ROOT} class required in root element.`);\n    }\n\n    if (this.adapter_.hasClass(OPEN)) {\n      this.isOpen_ = true;\n    }\n  }\n\n  destroy() {\n    clearTimeout(this.openAnimationEndTimerId_);\n    clearTimeout(this.closeAnimationEndTimerId_);\n    // Cancel any currently running animations.\n    cancelAnimationFrame(this.animationRequestId_);\n  }\n\n  /**\n   * @param {!Corner} corner Default anchor corner alignment of top-left menu surface corner.\n   */\n  setAnchorCorner(corner) {\n    this.anchorCorner_ = corner;\n  }\n\n  /**\n   * @param {!AnchorMargin} margin set of margin values from anchor.\n   */\n  setAnchorMargin(margin) {\n    this.anchorMargin_.top = typeof margin.top === 'number' ? margin.top : 0;\n    this.anchorMargin_.right = typeof margin.right === 'number' ? margin.right : 0;\n    this.anchorMargin_.bottom = typeof margin.bottom === 'number' ? margin.bottom : 0;\n    this.anchorMargin_.left = typeof margin.left === 'number' ? margin.left : 0;\n  }\n\n  /**\n   * Used to indicate if the menu-surface is hoisted to the body.\n   * @param {boolean} isHoisted\n   */\n  setIsHoisted(isHoisted) {\n    this.hoistedElement_ = isHoisted;\n  }\n\n  /**\n   * Used to set the menu-surface calculations based on a fixed position menu.\n   * @param {boolean} isFixedPosition\n   */\n  setFixedPosition(isFixedPosition) {\n    this.isFixedPosition_ = isFixedPosition;\n  }\n\n  /**\n   * Sets the menu-surface position on the page.\n   * @param {number} x\n   * @param {number} y\n   */\n  setAbsolutePosition(x, y) {\n    this.position_.x = this.typeCheckisFinite_(x) ? x : 0;\n    this.position_.y = this.typeCheckisFinite_(y) ? y : 0;\n  }\n\n  /** @param {boolean} quickOpen */\n  setQuickOpen(quickOpen) {\n    this.quickOpen_ = quickOpen;\n  }\n\n  /**\n   * Handle clicks and close if not within menu-surface element.\n   * @param {!Event} evt\n   */\n  handleBodyClick(evt) {\n    const el = evt.target;\n\n    if (this.adapter_.isElementInContainer(el)) {\n      return;\n    }\n\n    this.close();\n  };\n\n  /**\n   * Handle keys that close the surface.\n   * @param {!Event} evt\n   */\n  handleKeydown(evt) {\n    const {keyCode, key, shiftKey} = evt;\n\n    const isEscape = key === 'Escape' || keyCode === 27;\n    const isTab = key === 'Tab' || keyCode === 9;\n\n    if (isEscape) {\n      this.close();\n    } else if (isTab) {\n      if (this.adapter_.isLastElementFocused() && !shiftKey) {\n        this.adapter_.focusFirstElement();\n        evt.preventDefault();\n      } else if (this.adapter_.isFirstElementFocused() && shiftKey) {\n        this.adapter_.focusLastElement();\n        evt.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * @return {!AutoLayoutMeasurements} Measurements used to position menu surface popup.\n   */\n  getAutoLayoutMeasurements_() {\n    let anchorRect = this.adapter_.getAnchorDimensions();\n    const viewport = this.adapter_.getWindowDimensions();\n    const bodyDimensions = this.adapter_.getBodyDimensions();\n    const windowScroll = this.adapter_.getWindowScroll();\n\n    if (!anchorRect) {\n      anchorRect = /** @type {ClientRect} */ ({\n        x: this.position_.x,\n        y: this.position_.y,\n        top: this.position_.y,\n        bottom: this.position_.y,\n        left: this.position_.x,\n        right: this.position_.x,\n        height: 0,\n        width: 0,\n      });\n    }\n\n    return {\n      viewport,\n      bodyDimensions,\n      windowScroll,\n      viewportDistance: {\n        top: anchorRect.top,\n        right: viewport.width - anchorRect.right,\n        left: anchorRect.left,\n        bottom: viewport.height - anchorRect.bottom,\n      },\n      anchorHeight: anchorRect.height,\n      anchorWidth: anchorRect.width,\n      surfaceHeight: this.dimensions_.height,\n      surfaceWidth: this.dimensions_.width,\n    };\n  }\n\n  /**\n   * Computes the corner of the anchor from which to animate and position the menu surface.\n   * @return {!Corner}\n   * @private\n   */\n  getOriginCorner_() {\n    // Defaults: open from the top left.\n    let corner = Corner.TOP_LEFT;\n\n    const {viewportDistance, anchorHeight, anchorWidth, surfaceHeight, surfaceWidth} = this.measures_;\n    const isBottomAligned = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    const availableTop = isBottomAligned ? viewportDistance.top + anchorHeight + this.anchorMargin_.bottom\n      : viewportDistance.top + this.anchorMargin_.top;\n    const availableBottom = isBottomAligned ? viewportDistance.bottom - this.anchorMargin_.bottom\n      : viewportDistance.bottom + anchorHeight - this.anchorMargin_.top;\n\n    const topOverflow = surfaceHeight - availableTop;\n    const bottomOverflow = surfaceHeight - availableBottom;\n    if (bottomOverflow > 0 && topOverflow < bottomOverflow) {\n      corner |= CornerBit.BOTTOM;\n    }\n\n    const isRtl = this.adapter_.isRtl();\n    const isFlipRtl = Boolean(this.anchorCorner_ & CornerBit.FLIP_RTL);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n    const isAlignedRight = (avoidHorizontalOverlap && !isRtl) ||\n      (!avoidHorizontalOverlap && isFlipRtl && isRtl);\n    const availableLeft = isAlignedRight ? viewportDistance.left + anchorWidth + this.anchorMargin_.right :\n      viewportDistance.left + this.anchorMargin_.left;\n    const availableRight = isAlignedRight ? viewportDistance.right - this.anchorMargin_.right :\n      viewportDistance.right + anchorWidth - this.anchorMargin_.left;\n\n    const leftOverflow = surfaceWidth - availableLeft;\n    const rightOverflow = surfaceWidth - availableRight;\n\n    if ((leftOverflow < 0 && isAlignedRight && isRtl) ||\n        (avoidHorizontalOverlap && !isAlignedRight && leftOverflow < 0) ||\n        (rightOverflow > 0 && leftOverflow < rightOverflow)) {\n      corner |= CornerBit.RIGHT;\n    }\n\n    return /** @type {Corner} */ (corner);\n  }\n\n  /**\n   * @param {!Corner} corner Origin corner of the menu surface.\n   * @return {number} Horizontal offset of menu surface origin corner from corresponding anchor corner.\n   * @private\n   */\n  getHorizontalOriginOffset_(corner) {\n    const {anchorWidth} = this.measures_;\n    // isRightAligned corresponds to using the 'right' property on the surface.\n    const isRightAligned = Boolean(corner & CornerBit.RIGHT);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n\n    if (isRightAligned) {\n      const rightOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.left : this.anchorMargin_.right;\n\n      // For hoisted or fixed elements, adjust the offset by the difference between viewport width and body width so\n      // when we calculate the right value (`adjustPositionForHoistedElement_`) based on the element position,\n      // the right property is correct.\n      if (this.hoistedElement_ || this.isFixedPosition_) {\n        return rightOffset - (this.measures_.viewport.width - this.measures_.bodyDimensions.width);\n      }\n\n      return rightOffset;\n    }\n\n    return avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.right : this.anchorMargin_.left;\n  }\n\n  /**\n   * @param {!Corner} corner Origin corner of the menu surface.\n   * @return {number} Vertical offset of menu surface origin corner from corresponding anchor corner.\n   * @private\n   */\n  getVerticalOriginOffset_(corner) {\n    const {anchorHeight} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n    const avoidVerticalOverlap = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    let y = 0;\n\n    if (isBottomAligned) {\n      y = avoidVerticalOverlap ? anchorHeight - this.anchorMargin_.top : -this.anchorMargin_.bottom;\n    } else {\n      y = avoidVerticalOverlap ? (anchorHeight + this.anchorMargin_.bottom) : this.anchorMargin_.top;\n    }\n    return y;\n  }\n\n  /**\n   * @param {!Corner} corner Origin corner of the menu surface.\n   * @return {number} Maximum height of the menu surface, based on available space. 0 indicates should not be set.\n   * @private\n   */\n  getMenuSurfaceMaxHeight_(corner) {\n    let maxHeight = 0;\n    const {viewportDistance} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n    const {MARGIN_TO_EDGE} = MDCMenuSurfaceFoundation.numbers;\n\n    // When maximum height is not specified, it is handled from css.\n    if (isBottomAligned) {\n      maxHeight = viewportDistance.top + this.anchorMargin_.top - MARGIN_TO_EDGE;\n      if (!(this.anchorCorner_ & CornerBit.BOTTOM)) {\n        maxHeight += this.measures_.anchorHeight;\n      }\n    } else {\n      maxHeight = viewportDistance.bottom - this.anchorMargin_.bottom + this.measures_.anchorHeight - MARGIN_TO_EDGE;\n      if (this.anchorCorner_ & CornerBit.BOTTOM) {\n        maxHeight -= this.measures_.anchorHeight;\n      }\n    }\n\n    return maxHeight;\n  }\n\n  /** @private */\n  autoPosition_() {\n    // Compute measurements for autoposition methods reuse.\n    this.measures_ = this.getAutoLayoutMeasurements_();\n\n    const corner = this.getOriginCorner_();\n    const maxMenuSurfaceHeight = this.getMenuSurfaceMaxHeight_(corner);\n    const verticalAlignment = (corner & CornerBit.BOTTOM) ? 'bottom' : 'top';\n    let horizontalAlignment = (corner & CornerBit.RIGHT) ? 'right' : 'left';\n    const horizontalOffset = this.getHorizontalOriginOffset_(corner);\n    const verticalOffset = this.getVerticalOriginOffset_(corner);\n    let position = {\n      [horizontalAlignment]: horizontalOffset ? horizontalOffset : '0',\n      [verticalAlignment]: verticalOffset ? verticalOffset : '0',\n    };\n    const {anchorWidth, surfaceWidth} = this.measures_;\n    // Center align when anchor width is comparable or greater than menu surface, otherwise keep corner.\n    if (anchorWidth / surfaceWidth > numbers.ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO) {\n      horizontalAlignment = 'center';\n    }\n\n    // If the menu-surface has been hoisted to the body, it's no longer relative to the anchor element\n    if (this.hoistedElement_ || this.isFixedPosition_) {\n      position = this.adjustPositionForHoistedElement_(position);\n    }\n\n    for (const prop in position) {\n      if (position.hasOwnProperty(prop) && position[prop] !== '0') {\n        position[prop] = `${parseInt(position[prop], 10)}px`;\n      }\n    }\n\n    this.adapter_.setTransformOrigin(`${horizontalAlignment} ${verticalAlignment}`);\n    this.adapter_.setPosition(position);\n    this.adapter_.setMaxHeight(maxMenuSurfaceHeight ? maxMenuSurfaceHeight + 'px' : '');\n\n    // Clear measures after positioning is complete.\n    this.measures_ = null;\n  }\n\n  /**\n   * Calculates the offsets for positioning the menu-surface when the menu-surface has been\n   * hoisted to the body.\n   * @param {!{\n   *   top: (string|undefined),\n   *   right: (string|undefined),\n   *   bottom: (string|undefined),\n   *   left: (string|undefined)\n   * }} position\n   * @return {!{\n   *   top: (string|undefined),\n   *   right: (string|undefined),\n   *   bottom: (string|undefined),\n   *   left: (string|undefined)\n   * }} position\n   * @private\n   */\n  adjustPositionForHoistedElement_(position) {\n    const {windowScroll, viewportDistance} = this.measures_;\n\n    for (const prop in position) {\n      if (position.hasOwnProperty(prop)) {\n        // Hoisted surfaces need to have the anchor elements location on the page added to the\n        // position properties for proper alignment on the body.\n        if (viewportDistance.hasOwnProperty(prop)) {\n          position[prop] = parseInt(position[prop], 10) + viewportDistance[prop];\n        }\n\n        // Surfaces that are absolutely positioned need to have additional calculations for scroll\n        // and bottom positioning.\n        if (!this.isFixedPosition_) {\n          if (prop === 'top') {\n            position[prop] = parseInt(position[prop], 10) + windowScroll.y;\n          } else if (prop === 'bottom') {\n            position[prop] = parseInt(position[prop], 10) - windowScroll.y;\n          } else if (prop === 'left') {\n            position[prop] = parseInt(position[prop], 10) + windowScroll.x;\n          } else if (prop === 'right') {\n            position[prop] = parseInt(position[prop], 10) - windowScroll.x;\n          }\n        }\n      }\n    }\n\n    return position;\n  }\n\n  /**\n   * Open the menu surface.\n   */\n  open() {\n    this.adapter_.saveFocus();\n\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);\n    }\n\n    this.animationRequestId_ = requestAnimationFrame(() => {\n      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);\n      this.dimensions_ = this.adapter_.getInnerDimensions();\n      this.autoPosition_();\n      if (this.quickOpen_) {\n        this.adapter_.notifyOpen();\n      } else {\n        this.openAnimationEndTimerId_ = setTimeout(() => {\n          this.openAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);\n          this.adapter_.notifyOpen();\n        }, numbers.TRANSITION_OPEN_DURATION);\n      }\n    });\n    this.isOpen_ = true;\n  }\n\n  /**\n   * Closes the menu surface.\n   */\n  close() {\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);\n    }\n\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);\n      if (this.quickOpen_) {\n        this.adapter_.notifyClose();\n      } else {\n        this.closeAnimationEndTimerId_ = setTimeout(() => {\n          this.closeAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);\n          this.adapter_.notifyClose();\n        }, numbers.TRANSITION_CLOSE_DURATION);\n      }\n    });\n\n    this.isOpen_ = false;\n    this.maybeRestoreFocus_();\n  }\n\n  /**\n   * The last focused element when the menu surface was opened should regain focus, if the user is\n   * focused on or within the menu surface when it is closed.\n   * @private\n   */\n  maybeRestoreFocus_() {\n    if (this.adapter_.isFocused() || this.adapter_.isElementInContainer(document.activeElement)) {\n      this.adapter_.restoreFocus();\n    }\n  }\n\n  /** @return {boolean} */\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /**\n   * isFinite that doesn't force conversion to number type.\n   * Equivalent to Number.isFinite in ES2015, but is not included in IE11.\n   * @param {number} num\n   * @return {boolean}\n   * @private\n   */\n  typeCheckisFinite_(num) {\n    return typeof num === 'number' && isFinite(num);\n  }\n}\n\nexport {MDCMenuSurfaceFoundation, AnchorMargin};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ANCHOR: 'mdc-menu-surface--anchor',\n  ANIMATING_CLOSED: 'mdc-menu-surface--animating-closed',\n  ANIMATING_OPEN: 'mdc-menu-surface--animating-open',\n  FIXED: 'mdc-menu-surface--fixed',\n  OPEN: 'mdc-menu-surface--open',\n  ROOT: 'mdc-menu-surface',\n};\n\n/** @enum {string} */\nconst strings = {\n  CLOSED_EVENT: 'MDCMenuSurface:closed',\n  OPENED_EVENT: 'MDCMenuSurface:opened',\n  FOCUSABLE_ELEMENTS: 'button:not(:disabled), [href]:not([aria-disabled=\"true\"]), input:not(:disabled), ' +\n  'select:not(:disabled), textarea:not(:disabled), [tabindex]:not([tabindex=\"-1\"]):not([aria-disabled=\"true\"])',\n};\n\n/** @enum {number} */\nconst numbers = {\n  // Total duration of menu-surface open animation.\n  TRANSITION_OPEN_DURATION: 120,\n  // Total duration of menu-surface close animation.\n  TRANSITION_CLOSE_DURATION: 75,\n  // Margin left to the edge of the viewport when menu-surface is at maximum possible height.\n  MARGIN_TO_EDGE: 32,\n  // Ratio of anchor width to menu-surface width for switching from corner positioning to center positioning.\n  ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO: 0.67,\n};\n\n/**\n * Enum for bits in the {@see Corner) bitmap.\n * @enum {number}\n */\nconst CornerBit = {\n  BOTTOM: 1,\n  CENTER: 2,\n  RIGHT: 4,\n  FLIP_RTL: 8,\n};\n\n/**\n * Enum for representing an element corner for positioning the menu-surface.\n *\n * The START constants map to LEFT if element directionality is left\n * to right and RIGHT if the directionality is right to left.\n * Likewise END maps to RIGHT or LEFT depending on the directionality.\n *\n * @enum {number}\n */\nconst Corner = {\n  TOP_LEFT: 0,\n  TOP_RIGHT: CornerBit.RIGHT,\n  BOTTOM_LEFT: CornerBit.BOTTOM,\n  BOTTOM_RIGHT: CornerBit.BOTTOM | CornerBit.RIGHT,\n  TOP_START: CornerBit.FLIP_RTL,\n  TOP_END: CornerBit.FLIP_RTL | CornerBit.RIGHT,\n  BOTTOM_START: CornerBit.BOTTOM | CornerBit.FLIP_RTL,\n  BOTTOM_END: CornerBit.BOTTOM | CornerBit.RIGHT | CornerBit.FLIP_RTL,\n};\n\nexport {cssClasses, strings, numbers, CornerBit, Corner};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDCMenuSurface. Provides an interface for managing\n * - classes\n * - dom\n * - focus\n * - position\n * - dimensions\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCMenuSurfaceAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /** @return {boolean} */\n  hasAnchor() {}\n\n  /** Emits an event when the menu surface is closed. */\n  notifyClose() {}\n\n  /** Emits an event when the menu surface is opened. */\n  notifyOpen() {}\n\n  /**\n   * @return {boolean}\n   * @param {EventTarget} el\n   */\n  isElementInContainer(el) {}\n\n  /** @return {boolean} */\n  isRtl() {}\n\n  /** @param {string} origin */\n  setTransformOrigin(origin) {}\n\n  /** @return {boolean} */\n  isFocused() {}\n\n  /** Saves the element that was focused before the menu surface was opened. */\n  saveFocus() {}\n\n  /** Restores focus to the element that was focused before the menu surface was opened. */\n  restoreFocus() {}\n\n  /** @return {boolean} */\n  isFirstElementFocused() {}\n\n  /** @return {boolean} */\n  isLastElementFocused() {}\n\n  /** Focuses the first focusable element in the menu-surface. */\n  focusFirstElement() {}\n\n  /** Focuses the first focusable element in the menu-surface. */\n  focusLastElement() {}\n\n  /** @return {!{width: number, height: number}} */\n  getInnerDimensions() {}\n\n  /** @return {!{width: number, height: number, top: number, right: number, bottom: number, left: number}} */\n  getAnchorDimensions() {}\n\n  /** @return {!{ width: number, height: number }} */\n  getWindowDimensions() {}\n\n  /** @return {!{ width: number, height: number }} */\n  getBodyDimensions() {}\n\n  /** @return {!{ width: number, height: number }} */\n  getWindowScroll() {}\n\n  /** @param {!{\n  *   top: (string|undefined),\n  *   right: (string|undefined),\n  *   bottom: (string|undefined),\n  *   left: (string|undefined)\n  * }} position */\n  setPosition(position) {}\n\n  /** @param {string} height */\n  setMaxHeight(height) {}\n}\n\nexport {MDCMenuSurfaceAdapter};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-menu',\n  MENU_SELECTED_LIST_ITEM: 'mdc-menu-item--selected',\n  MENU_SELECTION_GROUP: 'mdc-menu__selection-group',\n};\n\n/** @enum {string} */\nconst strings = {\n  SELECTED_EVENT: 'MDCMenu:selected',\n  ARIA_SELECTED_ATTR: 'aria-selected',\n  LIST_SELECTOR: '.mdc-list',\n  CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Menu. Provides an interface for managing\n * - selected element classes\n * - get focused elements\n * - toggling a checkbox inside a list item\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCMenuAdapter {\n  /**\n   * Adds a class to the element at the index provided.\n   * @param {number} index\n   * @param {string} className\n   */\n  addClassToElementAtIndex(index, className) {}\n\n  /**\n   * Removes a class from the element at the index provided\n   * @param {number} index\n   * @param {string} className\n   */\n  removeClassFromElementAtIndex(index, className) {}\n\n  /**\n   * Adds an attribute, with value, to the element at the index provided.\n   * @param {number} index\n   * @param {string} attr\n   * @param {string} value\n   */\n  addAttributeToElementAtIndex(index, attr, value) {}\n\n  /**\n   * Removes an attribute from an element at the index provided.\n   * @param {number} index\n   * @param {string} attr\n   */\n  removeAttributeFromElementAtIndex(index, attr) {}\n\n  /**\n   * Returns true if the element contains the className.\n   * @param {?HTMLElement} element\n   * @param {string} className\n   * @return {boolean} true if the element contains the className\n   */\n  elementContainsClass(element, className) {}\n\n  /**\n   * Closes the menu-surface.\n   */\n  closeSurface() {}\n\n  /**\n   * Returns the index for the element provided.\n   * @param {?HTMLElement} element\n   * @return {number} index of the element in the list or -1 if it is not in the list.\n   */\n  getElementIndex(element) {}\n\n  /**\n   * Returns the parentElement of the provided element.\n   * @param {?HTMLElement} element\n   * @return {?HTMLElement} parentElement of the element provided.\n   */\n  getParentElement(element) {}\n\n  /**\n   * Returns the element within the selectionGroup containing the selected element class.\n   * @param {!HTMLElement} selectionGroup\n   * @return {number} element within the selectionGroup that contains the selected element class.\n   */\n  getSelectedElementIndex(selectionGroup) {}\n\n  /**\n   * Emits an event using the evtData.\n   * @param {{\n *    index: number\n *   }} evtData\n   */\n  notifySelected(evtData) {}\n}\n\nexport {MDCMenuAdapter};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n"],"names":["strings","cssClasses"],"mappings":"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"}