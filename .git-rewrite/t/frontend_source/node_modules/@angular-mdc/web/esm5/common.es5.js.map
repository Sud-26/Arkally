{"version":3,"file":"common.es5.js","sources":["../../../packages/common/unique-selection-dispatcher.ts","../../../packages/common/platform.ts","../../../packages/common/number-property.ts","../../../packages/common/keycodes.ts","../../../packages/common/boolean-property.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\n\r\n// Users of the Dispatcher never need to see this type, but TypeScript requires it to be exported.\r\nexport type UniqueSelectionDispatcherListener = (id: string, name: string) => void;\r\n\r\n/**\r\n * Class to coordinate unique selection based on name.\r\n * Intended to be consumed as an Angular service.\r\n * This service is needed because native radio change events are only fired on the item currently\r\n * being selected, and we still need to uncheck the previous selection.\r\n *\r\n * This service does not *store* any IDs and names because they may change at any time, so it is\r\n * less error-prone if they are simply passed through when the events occur.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class UniqueSelectionDispatcher implements OnDestroy {\r\n  private _listeners: UniqueSelectionDispatcherListener[] = [];\r\n\r\n  /**\r\n   * Notify other items that selection for the given name has been set.\r\n   * @param id ID of the item.\r\n   * @param name Name of the item.\r\n   */\r\n  notify(id: string, name: string) {\r\n    for (const listener of this._listeners) {\r\n      listener(id, name);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Listen for future changes to item selection.\r\n   * @return Function used to deregister listener\r\n   */\r\n  listen(listener: UniqueSelectionDispatcherListener): () => void {\r\n    this._listeners.push(listener);\r\n    return () => {\r\n      this._listeners = this._listeners.filter((registered: UniqueSelectionDispatcherListener) => {\r\n        return listener !== registered;\r\n      });\r\n    };\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._listeners = [];\r\n  }\r\n}\r\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Platform {\r\n  isBrowser: boolean = this._platformId ?\r\n    isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\r\n\r\n  constructor(@Inject(PLATFORM_ID) private _platformId?: Object) { }\r\n}\r\n","/** Coerces a data-bound value (typically a string) to a number. */\r\nexport function toNumber(value: any): number;\r\nexport function toNumber<D>(value: any, fallback: D): number | D;\r\nexport function toNumber(value: any, fallbackValue = 0) {\r\n  return _isNumberValue(value) ? Number(value) : fallbackValue;\r\n}\r\n\r\n/**\r\n * Whether the provided value is considered a number.\r\n*/\r\nexport function _isNumberValue(value: any): boolean {\r\n  // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\r\n  // and other non-number values as NaN, where Number just uses 0) but it considers the string\r\n  // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\r\n  return !isNaN(parseFloat(value as any)) && !isNaN(Number(value));\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nexport const UP_ARROW = 38;\r\nexport const DOWN_ARROW = 40;\r\nexport const RIGHT_ARROW = 39;\r\nexport const LEFT_ARROW = 37;\r\nexport const PAGE_UP = 33;\r\nexport const PAGE_DOWN = 34;\r\nexport const HOME = 36;\r\nexport const END = 35;\r\nexport const ENTER = 13;\r\nexport const SPACE = 32;\r\nexport const TAB = 9;\r\nexport const ESCAPE = 27;\r\nexport const BACKSPACE = 8;\r\nexport const DELETE = 46;\r\nexport const A = 65;\r\nexport const Z = 90;\r\nexport const ZERO = 48;\r\nexport const NINE = 57;\r\nexport const COMMA = 188;\r\n","export function toBoolean(value: any): boolean {\r\n  return value != null && `${value}` !== 'false';\r\n}\r\n"],"names":[],"mappings":"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"}