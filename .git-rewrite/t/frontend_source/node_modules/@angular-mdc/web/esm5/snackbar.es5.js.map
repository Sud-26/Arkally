{"version":3,"file":"snackbar.es5.js","sources":["../../../packages/snackbar/snackbar.ts","../../../packages/snackbar/snackbar-module.ts","../../../packages/snackbar/snackbar-container.ts","../../../packages/snackbar/snackbar.component.ts","../../../node_modules/@material/snackbar/index.js","../../../node_modules/@material/dom/ponyfill.js","../../../node_modules/@material/snackbar/foundation.js","../../../node_modules/@material/snackbar/adapter.js","../../../node_modules/@material/base/component.js","../../../node_modules/@material/base/foundation.js","../../../node_modules/@material/snackbar/util.js","../../../node_modules/@material/snackbar/constants.js","../../../packages/snackbar/snackbar-config.ts","../../../packages/snackbar/snackbar-ref.ts"],"sourcesContent":["import {\r\n  ComponentRef,\r\n  EmbeddedViewRef,\r\n  Inject,\r\n  Injectable,\r\n  InjectionToken,\r\n  Injector,\r\n  OnDestroy,\r\n  Optional,\r\n  SkipSelf\r\n} from '@angular/core';\r\nimport { Overlay, OverlayRef } from '@angular-mdc/web/overlay';\r\nimport { ComponentPortal, ComponentType, PortalInjector } from '@angular-mdc/web/portal';\r\n\r\nimport { MdcSnackbarModule } from './snackbar-module';\r\n\r\nimport { MdcSnackbarRef } from './snackbar-ref';\r\nimport { MdcSnackbarComponent } from './snackbar.component';\r\nimport { MDC_SNACKBAR_DATA, MdcSnackbarConfig } from './snackbar-config';\r\nimport { MdcSnackbarContainer } from './snackbar-container';\r\n\r\n/** Injection token that can be used to specify default snackbar. */\r\nexport const MDC_SNACKBAR_DEFAULT_OPTIONS =\r\n  new InjectionToken<MdcSnackbarConfig>('mdc-snackbar-default-options', {\r\n    providedIn: 'root',\r\n    factory: MDC_SNACKBAR_DEFAULT_OPTIONS_FACTORY,\r\n  });\r\n\r\n/** @docs-private */\r\nexport function MDC_SNACKBAR_DEFAULT_OPTIONS_FACTORY(): MdcSnackbarConfig {\r\n  return new MdcSnackbarConfig();\r\n}\r\n\r\n@Injectable({ providedIn: MdcSnackbarModule })\r\nexport class MdcSnackbar implements OnDestroy {\r\n  /**\r\n   * Reference to the current snackbar in the view *at this level* (in the Angular injector tree).\r\n   * If there is a parent snack-bar service, all operations should delegate to that parent\r\n   * via `_openedSnackBarRef`.\r\n   */\r\n  private _snackBarRefAtThisLevel: MdcSnackbarRef<any> | null = null;\r\n\r\n  /** Reference to the currently opened snackbar at *any* level. */\r\n  get _openedSnackbarRef(): MdcSnackbarRef<any> | null {\r\n    const parent = this._parentSnackBar;\r\n    return parent ? parent._openedSnackbarRef : this._snackBarRefAtThisLevel;\r\n  }\r\n\r\n  set _openedSnackbarRef(value: MdcSnackbarRef<any> | null) {\r\n    if (this._parentSnackBar) {\r\n      this._parentSnackBar._openedSnackbarRef = value;\r\n    } else {\r\n      this._snackBarRefAtThisLevel = value;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private _overlay: Overlay,\r\n    private _injector: Injector,\r\n    @Optional() @SkipSelf() private _parentSnackBar: MdcSnackbar,\r\n    @Inject(MDC_SNACKBAR_DEFAULT_OPTIONS) private _defaultConfig: MdcSnackbarConfig) { }\r\n\r\n  /**\r\n   * Creates and dispatches a snackbar with a custom component for the content, removing any\r\n   * currently opened snackbars.\r\n   *\r\n   * @param component Component to be instantiated.\r\n   * @param config Extra configuration for the snackbar.\r\n   */\r\n  openFromComponent<T>(component: ComponentType<T>, config?: MdcSnackbarConfig):\r\n    MdcSnackbarRef<T> {\r\n    return this._attach(component, config) as MdcSnackbarRef<T>;\r\n  }\r\n\r\n  /**\r\n   * Opens a snackbar with a message and an optional action.\r\n   * @param message Message text.\r\n   * @param action The label for the snackbar action.\r\n   * @param config Additional configuration options for the snackbar.\r\n   */\r\n  open(message: string, action: string = '', config?: MdcSnackbarConfig):\r\n    MdcSnackbarRef<MdcSnackbarComponent> {\r\n    const _config = { ...this._defaultConfig, ...config };\r\n\r\n    // Since the user doesn't have access to the component, we can\r\n    // override the data to pass in our own message and action.\r\n    _config.data = { message, action };\r\n\r\n    return this.openFromComponent(MdcSnackbarComponent, _config);\r\n  }\r\n\r\n  /**\r\n   * Dismisses the currently-visible snackbar.\r\n   */\r\n  dismiss(): void {\r\n    if (this._openedSnackbarRef) {\r\n      if (this._openedSnackbarRef.instance instanceof MdcSnackbarComponent) {\r\n        (<MdcSnackbarComponent>this._openedSnackbarRef.instance).close();\r\n      }\r\n      this._openedSnackbarRef.dismiss();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // Only dismiss the snackbar at the current level on destroy.\r\n    if (this._snackBarRefAtThisLevel) {\r\n      this._snackBarRefAtThisLevel.dismiss();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attaches the snackbar container component to the overlay.\r\n   */\r\n  private _attachSnackbarContainer(overlayRef: OverlayRef,\r\n    config: MdcSnackbarConfig): MdcSnackbarContainer {\r\n\r\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\r\n    const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\r\n      [MdcSnackbarConfig, config]\r\n    ]));\r\n\r\n    const containerPortal =\r\n      new ComponentPortal(MdcSnackbarContainer, config.viewContainerRef, injector);\r\n    const containerRef: ComponentRef<MdcSnackbarContainer> = overlayRef.attach(containerPortal);\r\n    containerRef.instance.snackbarConfig = config;\r\n    return containerRef.instance;\r\n  }\r\n\r\n  /**\r\n   * Places a new component or a template as the content of the snackbar container.\r\n   */\r\n  private _attach<T>(content: ComponentType<T>, userConfig?: MdcSnackbarConfig):\r\n    MdcSnackbarRef<T | EmbeddedViewRef<any>> {\r\n\r\n    const config = { ...new MdcSnackbarConfig(), ...this._defaultConfig, ...userConfig };\r\n    const overlayRef = this._createOverlay();\r\n    const container = this._attachSnackbarContainer(overlayRef, config);\r\n    const snackbarRef = new MdcSnackbarRef<T | EmbeddedViewRef<any>>(container, overlayRef);\r\n\r\n    const injector = this._createInjector(config, snackbarRef);\r\n    const portal = new ComponentPortal(content, undefined, injector);\r\n    const contentRef = container.attachComponentPortal<T>(portal);\r\n\r\n    // We can't pass this via the injector, because the injector is created earlier.\r\n    snackbarRef.instance = contentRef.instance;\r\n\r\n    this._loadListeners(snackbarRef);\r\n    this._openedSnackbarRef = snackbarRef;\r\n\r\n    if (snackbarRef.instance instanceof MdcSnackbarComponent) {\r\n      (<MdcSnackbarComponent>snackbarRef.instance).open();\r\n    }\r\n    return this._openedSnackbarRef;\r\n  }\r\n\r\n  private _loadListeners(snackbarRef: MdcSnackbarRef<any>): void {\r\n    // When the snackbar is dismissed, clear the reference to it.\r\n    snackbarRef.afterDismiss().subscribe(() => {\r\n      // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\r\n      if (this._openedSnackbarRef === snackbarRef) {\r\n        this._openedSnackbarRef = null;\r\n      }\r\n    });\r\n\r\n    if (this._openedSnackbarRef) {\r\n      this._openedSnackbarRef.dismiss();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a new overlay and places it in the correct location.\r\n   * @param config The user-specified snackbar config.\r\n   */\r\n  private _createOverlay(): OverlayRef {\r\n    return this._overlay.create();\r\n  }\r\n\r\n  /**\r\n   * Creates an injector to be used inside of a snackbar component.\r\n   * @param config Config that was used to create the snackbar.\r\n   * @param snackbarRef Reference to the snackbar.\r\n   */\r\n  private _createInjector<T>(\r\n    config: MdcSnackbarConfig,\r\n    snackbarRef: MdcSnackbarRef<T>): PortalInjector {\r\n\r\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\r\n\r\n    return new PortalInjector(userInjector || this._injector, new WeakMap<any, any>([\r\n      [MdcSnackbarRef, snackbarRef],\r\n      [MDC_SNACKBAR_DATA, config.data]\r\n    ]));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OverlayModule } from '@angular-mdc/web/overlay';\r\nimport { PortalModule } from '@angular-mdc/web/portal';\r\nimport { MdcButtonModule } from '@angular-mdc/web/button';\r\n\r\nimport { MdcSnackbarComponent } from './snackbar.component';\r\nimport { MdcSnackbarContainer } from './snackbar-container';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    MdcButtonModule\r\n  ],\r\n  exports: [MdcSnackbarContainer],\r\n  declarations: [MdcSnackbarContainer, MdcSnackbarComponent],\r\n  entryComponents: [MdcSnackbarContainer, MdcSnackbarComponent]\r\n})\r\nexport class MdcSnackbarModule { }\r\n","import {\r\n  BasePortalOutlet,\r\n  CdkPortalOutlet,\r\n  ComponentPortal,\r\n  TemplatePortal,\r\n} from '@angular-mdc/web/portal';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ComponentRef,\r\n  EmbeddedViewRef,\r\n  NgZone,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { MdcSnackbarConfig } from './snackbar-config';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mdc-snackbar-container',\r\n  template: '<ng-template cdkPortalOutlet></ng-template>',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MdcSnackbarContainer extends BasePortalOutlet implements OnDestroy {\r\n  /** The portal outlet inside of this container into which the snackbar content will be loaded. */\r\n  @ViewChild(CdkPortalOutlet) _portalOutlet!: CdkPortalOutlet;\r\n\r\n  /** Subject for notifying that the snackbar has exited from view. */\r\n  readonly _onExit: Subject<any> = new Subject();\r\n\r\n  constructor(\r\n    private _ngZone: NgZone,\r\n    public snackbarConfig: MdcSnackbarConfig) {\r\n\r\n    super();\r\n  }\r\n\r\n  /** Attach a component portal as content to this snackbar container. */\r\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\r\n    return this._portalOutlet.attachComponentPortal(portal);\r\n  }\r\n\r\n  /** Attach a template portal as content to this snackbar container. */\r\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\r\n    return this._portalOutlet.attachTemplatePortal(portal);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._completeExit();\r\n  }\r\n\r\n  /**\r\n   * Waits for the zone to settle before removing the element. Helps prevent\r\n   * errors where we end up removing an element which is in the middle of an animation.\r\n   */\r\n  private _completeExit() {\r\n    this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(() => {\r\n      this._onExit.next();\r\n      this._onExit.complete();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { MdcSnackbarRef, MdcSnackbarDismissReason } from './snackbar-ref';\r\nimport { MDC_SNACKBAR_DATA, MdcSnackbarConfig } from './snackbar-config';\r\n\r\nimport { announce } from '@material/snackbar/util';\r\nimport { MDCSnackbarFoundation } from '@material/snackbar/index';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mdc-snackbar',\r\n  host: {\r\n    'class': 'mdc-snackbar',\r\n    '[dir]': 'this.config.direction',\r\n    '[class.mdc-snackbar--stacked]': 'config.stacked',\r\n    '[class.mdc-snackbar--leading]': 'config.leading',\r\n    '[class.ngx-mdc-snackbar--trailing]': 'config.trailing',\r\n    '(keydown)': '_onKeydown($event)'\r\n  },\r\n  template: `\r\n  <div #surface class=\"mdc-snackbar__surface\">\r\n    <div #label class=\"mdc-snackbar__label\"\r\n      role=\"status\"\r\n      aria-live=\"polite\">{{data.message}}</div>\r\n    <div class=\"mdc-snackbar__actions\" *ngIf=\"data.action\">\r\n      <button #action type=\"button\" class=\"mdc-button mdc-snackbar__action\"\r\n        (click)=\"_onActionClick($event)\">{{data.action}}</button>\r\n      <button #dismiss *ngIf=\"config.dismiss\"\r\n        class=\"mdc-icon-button mdc-snackbar__dismiss material-icons\"\r\n        title=\"Dismiss\" (click)=\"_onActionIconClick($event)\">close</button>\r\n    </div>\r\n  </div>`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MdcSnackbarComponent implements OnInit, OnDestroy {\r\n  @ViewChild('label') label!: ElementRef<HTMLElement>;\r\n  @ViewChild('action') action?: ElementRef<HTMLButtonElement>;\r\n  @ViewChild('dismiss') dismiss?: ElementRef<HTMLButtonElement>;\r\n\r\n  get config(): MdcSnackbarConfig { return this.snackbarRef.componentInstance.snackbarConfig; }\r\n\r\n  private _createAdapter() {\r\n    return {\r\n      addClass: (className: string) => this._getHostElement().classList.add(className),\r\n      removeClass: (className: string) => this._getHostElement().classList.remove(className),\r\n      announce: () => announce(this.label.nativeElement),\r\n      notifyClosed: (reason: MdcSnackbarDismissReason) => this.snackbarRef.dismiss(reason)\r\n    };\r\n  }\r\n\r\n  private _foundation: {\r\n    destroy(): void,\r\n    open(): void,\r\n    close(reason?: any): void,\r\n    setTimeoutMs(timeoutMs: number): void,\r\n    setCloseOnEscape(closeOnEscape: boolean): void,\r\n    handleKeyDown(evt: KeyboardEvent): void,\r\n    handleActionButtonClick(evt: MouseEvent): void,\r\n    handleActionIconClick(evt: MouseEvent): void\r\n  } = new MDCSnackbarFoundation(this._createAdapter());\r\n\r\n  constructor(\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    public elementRef: ElementRef<HTMLElement>,\r\n    public snackbarRef: MdcSnackbarRef<MdcSnackbarComponent>,\r\n    @Inject(MDC_SNACKBAR_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n    this._changeDetectorRef.detectChanges();\r\n\r\n    this._applyClasses();\r\n    this._applyConfig();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this._foundation) {\r\n      this._foundation.destroy();\r\n    }\r\n  }\r\n\r\n  _onKeydown(evt: KeyboardEvent): void {\r\n    this._foundation.handleKeyDown(evt);\r\n  }\r\n\r\n  _onActionClick(evt: MouseEvent): void {\r\n    this._foundation.handleActionButtonClick(evt);\r\n  }\r\n\r\n  _onActionIconClick(evt: MouseEvent): void {\r\n    this._foundation.handleActionIconClick(evt);\r\n  }\r\n\r\n  open(): void {\r\n    this._foundation.open();\r\n  }\r\n\r\n  close(reason?: MdcSnackbarDismissReason): void {\r\n    this._foundation.close(reason);\r\n  }\r\n\r\n  private _applyClasses(): void {\r\n    const classes = this.config.classes;\r\n    if (classes) {\r\n      if (classes instanceof Array) {\r\n        this._getHostElement().classList.add(...this.config.classes as string[]);\r\n      } else {\r\n        this._getHostElement().classList.toggle(classes);\r\n      }\r\n    }\r\n\r\n    const actionClasses = this.config.actionClasses;\r\n    if (actionClasses && this.action) {\r\n      if (actionClasses instanceof Array) {\r\n        this.action.nativeElement.classList.add(...this.config.actionClasses as string[]);\r\n      } else {\r\n        this.action.nativeElement.classList.toggle(actionClasses);\r\n      }\r\n    }\r\n\r\n    if (this.dismiss) {\r\n      const dismissClasses = this.config.dismissClasses;\r\n      if (dismissClasses) {\r\n        if (dismissClasses instanceof Array) {\r\n          this.dismiss.nativeElement.classList.add(...this.config.dismissClasses as string[]);\r\n        } else {\r\n          this.dismiss.nativeElement.classList.toggle(dismissClasses);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _applyConfig(): void {\r\n    if (this.config.timeoutMs) {\r\n      this._foundation.setTimeoutMs(this.config.timeoutMs);\r\n    }\r\n    if (this.config.dismiss) {\r\n      this._foundation.setCloseOnEscape(this.config.closeOnEscape ? true : false);\r\n    }\r\n  }\r\n\r\n  /** Retrieves the DOM element of the component host. */\r\n  private _getHostElement(): HTMLElement {\r\n    return this.elementRef.nativeElement;\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCSnackbarFoundation from './foundation';\nimport {strings} from './constants';\nimport * as util from './util';\nimport * as ponyfill from '@material/dom/ponyfill';\n\nconst {\n  SURFACE_SELECTOR, LABEL_SELECTOR, ACTION_SELECTOR, DISMISS_SELECTOR,\n  OPENING_EVENT, OPENED_EVENT, CLOSING_EVENT, CLOSED_EVENT,\n} = strings;\n\nclass MDCSnackbar extends MDCComponent {\n  static attachTo(root) {\n    return new MDCSnackbar(root);\n  }\n\n  constructor(...args) {\n    super(...args);\n\n    /** @type {!HTMLElement} */\n    this.surfaceEl_;\n\n    /** @type {!HTMLElement} */\n    this.labelEl_;\n\n    /** @type {!HTMLElement} */\n    this.actionEl_;\n\n    /** @type {function(!HTMLElement, !HTMLElement=): void} */\n    this.announce_;\n\n    /** @private {!Function} */\n    this.handleKeyDown_;\n\n    /** @private {!Function} */\n    this.handleSurfaceClick_;\n  }\n\n  /**\n   * @param {function(): function(!HTMLElement, !HTMLElement=):void} announceFactory\n   */\n  initialize(announceFactory = () => util.announce) {\n    this.announce_ = announceFactory();\n  }\n\n  initialSyncWithDOM() {\n    this.surfaceEl_ = /** @type {!HTMLElement} */ (this.root_.querySelector(SURFACE_SELECTOR));\n    this.labelEl_ = /** @type {!HTMLElement} */ (this.root_.querySelector(LABEL_SELECTOR));\n    this.actionEl_ = /** @type {!HTMLElement} */ (this.root_.querySelector(ACTION_SELECTOR));\n\n    this.handleKeyDown_ = (evt) => this.foundation_.handleKeyDown(evt);\n    this.handleSurfaceClick_ = (evt) => {\n      if (this.isActionButton_(evt.target)) {\n        this.foundation_.handleActionButtonClick(evt);\n      } else if (this.isActionIcon_(evt.target)) {\n        this.foundation_.handleActionIconClick(evt);\n      }\n    };\n\n    this.registerKeyDownHandler_(this.handleKeyDown_);\n    this.registerSurfaceClickHandler_(this.handleSurfaceClick_);\n  }\n\n  destroy() {\n    super.destroy();\n    this.deregisterKeyDownHandler_(this.handleKeyDown_);\n    this.deregisterSurfaceClickHandler_(this.handleSurfaceClick_);\n  }\n\n  open() {\n    this.foundation_.open();\n  }\n\n  /**\n   * @param {string=} reason Why the snackbar was closed. Value will be passed to CLOSING_EVENT and CLOSED_EVENT via the\n   *     `event.detail.reason` property. Standard values are REASON_ACTION and REASON_DISMISS, but custom\n   *     client-specific values may also be used if desired.\n   */\n  close(reason = '') {\n    this.foundation_.close(reason);\n  }\n\n  /**\n   * @return {!MDCSnackbarFoundation}\n   */\n  getDefaultFoundation() {\n    /* eslint brace-style: \"off\" */\n    return new MDCSnackbarFoundation({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      announce: () => this.announce_(this.labelEl_),\n      notifyOpening: () => this.emit(OPENING_EVENT, {}),\n      notifyOpened: () => this.emit(OPENED_EVENT, {}),\n      notifyClosing: (reason) => this.emit(CLOSING_EVENT, reason ? {reason} : {}),\n      notifyClosed: (reason) => this.emit(CLOSED_EVENT, reason ? {reason} : {}),\n    });\n  }\n\n  /**\n   * @return {number}\n   */\n  get timeoutMs() {\n    return this.foundation_.getTimeoutMs();\n  }\n\n  /**\n   * @param {number} timeoutMs\n   */\n  set timeoutMs(timeoutMs) {\n    this.foundation_.setTimeoutMs(timeoutMs);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get closeOnEscape() {\n    return this.foundation_.getCloseOnEscape();\n  }\n\n  /**\n   * @param {boolean} closeOnEscape\n   */\n  set closeOnEscape(closeOnEscape) {\n    this.foundation_.setCloseOnEscape(closeOnEscape);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isOpen() {\n    return this.foundation_.isOpen();\n  }\n\n  /**\n   * @return {string}\n   */\n  get labelText() {\n    return this.labelEl_.textContent;\n  }\n\n  /**\n   * @param {string} labelText\n   */\n  set labelText(labelText) {\n    this.labelEl_.textContent = labelText;\n  }\n\n  /**\n   * @return {string}\n   */\n  get actionButtonText() {\n    return this.actionEl_.textContent;\n  }\n\n  /**\n   * @param {string} actionButtonText\n   */\n  set actionButtonText(actionButtonText) {\n    this.actionEl_.textContent = actionButtonText;\n  }\n\n  /**\n   * @param {!Function} handler\n   * @private\n   */\n  registerKeyDownHandler_(handler) {\n    this.listen('keydown', handler);\n  }\n\n  /**\n   * @param {!Function} handler\n   * @private\n   */\n  deregisterKeyDownHandler_(handler) {\n    this.unlisten('keydown', handler);\n  }\n\n  /**\n   * @param {!Function} handler\n   * @private\n   */\n  registerSurfaceClickHandler_(handler) {\n    this.surfaceEl_.addEventListener('click', handler);\n  }\n\n  /**\n   * @param {!Function} handler\n   * @private\n   */\n  deregisterSurfaceClickHandler_(handler) {\n    this.surfaceEl_.removeEventListener('click', handler);\n  }\n\n  /**\n   * @param {!Element} target\n   * @return {boolean}\n   * @private\n   */\n  isActionButton_(target) {\n    return Boolean(ponyfill.closest(target, ACTION_SELECTOR));\n  }\n\n  /**\n   * @param {!Element} target\n   * @return {boolean}\n   * @private\n   */\n  isActionIcon_(target) {\n    return Boolean(ponyfill.closest(target, DISMISS_SELECTOR));\n  }\n}\n\nexport {MDCSnackbar, MDCSnackbarFoundation, util};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element}\n */\nfunction closest(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  let el = element;\n  while (el) {\n    if (matches(el, selector)) {\n      return el;\n    }\n    el = el.parentElement;\n  }\n  return null;\n}\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {boolean}\n */\nfunction matches(element, selector) {\n  const nativeMatches = element.matches\n    || element.webkitMatchesSelector\n    || element.msMatchesSelector;\n  return nativeMatches.call(element, selector);\n}\n\nexport {closest, matches};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [\"error\", {\"argsIgnorePattern\": \"evt\", \"varsIgnorePattern\": \"Adapter$\"}] */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSnackbarAdapter from './adapter';\nimport {cssClasses, numbers, strings} from './constants';\n\nconst {OPENING, OPEN, CLOSING} = cssClasses;\nconst {REASON_ACTION, REASON_DISMISS} = strings;\n\nclass MDCSnackbarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * @return {!MDCSnackbarAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSnackbarAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      announce: () => {},\n      notifyOpening: () => {},\n      notifyOpened: () => {},\n      notifyClosing: (/* reason: string */) => {},\n      notifyClosed: (/* reason: string */) => {},\n    });\n  }\n\n  /**\n   * @param {!MDCSnackbarAdapter=} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSnackbarFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.isOpen_ = false;\n\n    /** @private {number} */\n    this.animationFrame_ = 0;\n\n    /** @private {number} */\n    this.animationTimer_ = 0;\n\n    /** @private {number} */\n    this.autoDismissTimer_ = 0;\n\n    /** @private {number} */\n    this.autoDismissTimeoutMs_ = numbers.DEFAULT_AUTO_DISMISS_TIMEOUT_MS;\n\n    /** @private {boolean} */\n    this.closeOnEscape_ = true;\n  }\n\n  destroy() {\n    this.clearAutoDismissTimer_();\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = 0;\n    clearTimeout(this.animationTimer_);\n    this.animationTimer_ = 0;\n    this.adapter_.removeClass(OPENING);\n    this.adapter_.removeClass(OPEN);\n    this.adapter_.removeClass(CLOSING);\n  }\n\n  open() {\n    this.clearAutoDismissTimer_();\n    this.isOpen_ = true;\n    this.adapter_.notifyOpening();\n    this.adapter_.removeClass(CLOSING);\n    this.adapter_.addClass(OPENING);\n    this.adapter_.announce();\n\n    // Wait a frame once display is no longer \"none\", to establish basis for animation\n    this.runNextAnimationFrame_(() => {\n      this.adapter_.addClass(OPEN);\n\n      this.animationTimer_ = setTimeout(() => {\n        this.handleAnimationTimerEnd_();\n        this.adapter_.notifyOpened();\n        this.autoDismissTimer_ = setTimeout(() => {\n          this.close(REASON_DISMISS);\n        }, this.getTimeoutMs());\n      }, numbers.SNACKBAR_ANIMATION_OPEN_TIME_MS);\n    });\n  }\n\n  /**\n   * @param {string=} reason Why the snackbar was closed. Value will be passed to CLOSING_EVENT and CLOSED_EVENT via the\n   *     `event.detail.reason` property. Standard values are REASON_ACTION and REASON_DISMISS, but custom\n   *     client-specific values may also be used if desired.\n   */\n  close(reason = '') {\n    if (!this.isOpen_) {\n      // Avoid redundant close calls (and events), e.g. repeated interactions as the snackbar is animating closed\n      return;\n    }\n\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = 0;\n    this.clearAutoDismissTimer_();\n\n    this.isOpen_ = false;\n    this.adapter_.notifyClosing(reason);\n    this.adapter_.addClass(cssClasses.CLOSING);\n    this.adapter_.removeClass(cssClasses.OPEN);\n    this.adapter_.removeClass(cssClasses.OPENING);\n\n    clearTimeout(this.animationTimer_);\n    this.animationTimer_ = setTimeout(() => {\n      this.handleAnimationTimerEnd_();\n      this.adapter_.notifyClosed(reason);\n    }, numbers.SNACKBAR_ANIMATION_CLOSE_TIME_MS);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /**\n   * @return {number}\n   */\n  getTimeoutMs() {\n    return this.autoDismissTimeoutMs_;\n  }\n\n  /**\n   * @param {number} timeoutMs\n   */\n  setTimeoutMs(timeoutMs) {\n    // Use shorter variable names to make the code more readable\n    const minValue = numbers.MIN_AUTO_DISMISS_TIMEOUT_MS;\n    const maxValue = numbers.MAX_AUTO_DISMISS_TIMEOUT_MS;\n\n    if (timeoutMs <= maxValue && timeoutMs >= minValue) {\n      this.autoDismissTimeoutMs_ = timeoutMs;\n    } else {\n      throw new Error(`timeoutMs must be an integer in the range ${minValue}–${maxValue}, but got '${timeoutMs}'`);\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  getCloseOnEscape() {\n    return this.closeOnEscape_;\n  }\n\n  /**\n   * @param {boolean} closeOnEscape\n   */\n  setCloseOnEscape(closeOnEscape) {\n    this.closeOnEscape_ = closeOnEscape;\n  }\n\n  /**\n   * @param {!KeyboardEvent} evt\n   */\n  handleKeyDown(evt) {\n    if (this.getCloseOnEscape() && (evt.key === 'Escape' || evt.keyCode === 27)) {\n      this.close(REASON_DISMISS);\n    }\n  }\n\n  /**\n   * @param {!MouseEvent} evt\n   */\n  handleActionButtonClick(evt) {\n    this.close(REASON_ACTION);\n  }\n\n  /**\n   * @param {!MouseEvent} evt\n   */\n  handleActionIconClick(evt) {\n    this.close(REASON_DISMISS);\n  }\n\n  /** @private */\n  clearAutoDismissTimer_() {\n    clearTimeout(this.autoDismissTimer_);\n    this.autoDismissTimer_ = 0;\n  }\n\n  /** @private */\n  handleAnimationTimerEnd_() {\n    this.animationTimer_ = 0;\n    this.adapter_.removeClass(cssClasses.OPENING);\n    this.adapter_.removeClass(cssClasses.CLOSING);\n  }\n\n  /**\n   * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.\n   * @param {Function} callback\n   * @private\n   */\n  runNextAnimationFrame_(callback) {\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = requestAnimationFrame(() => {\n      this.animationFrame_ = 0;\n      clearTimeout(this.animationTimer_);\n      this.animationTimer_ = setTimeout(callback, 0);\n    });\n  }\n}\n\nexport default MDCSnackbarFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Snackbar. Provides an interface for managing:\n * - CSS classes\n * - Event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCSnackbarAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  announce() {}\n\n  notifyOpening() {}\n  notifyOpened() {}\n\n  /**\n   * @param {string} reason\n   */\n  notifyClosing(reason) {}\n\n  /**\n   * @param {string} reason\n   */\n  notifyClosed(reason) {}\n}\n\nexport default MDCSnackbarAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {numbers, strings} from './constants';\n\nconst {ARIA_LIVE_DELAY_MS} = numbers;\nconst {ARIA_LIVE_LABEL_TEXT_ATTR} = strings;\n\n/**\n * @param {!HTMLElement} ariaEl\n * @param {!HTMLElement=} labelEl\n */\nfunction announce(ariaEl, labelEl = ariaEl) {\n  const priority = ariaEl.getAttribute('aria-live');\n  const labelText = labelEl.textContent.trim(); // Ignore `&nbsp;` (see below)\n  if (!labelText) {\n    return;\n  }\n\n  // Temporarily disable `aria-live` to prevent JAWS+Firefox from announcing the message twice.\n  ariaEl.setAttribute('aria-live', 'off');\n\n  // Temporarily clear `textContent` to force a DOM mutation event that will be detected by screen readers.\n  // `aria-live` elements are only announced when the element's `textContent` *changes*, so snackbars\n  // sent to the browser in the initial HTML response won't be read unless we clear the element's `textContent` first.\n  // Similarly, displaying the same snackbar message twice in a row doesn't trigger a DOM mutation event,\n  // so screen readers won't announce the second message unless we first clear `textContent`.\n  //\n  // We have to clear the label text two different ways to make it work in all browsers and screen readers:\n  //\n  //   1. `textContent = ''` is required for IE11 + JAWS\n  //   2. `innerHTML = '&nbsp;'` is required for Chrome + JAWS and NVDA\n  //\n  // All other browser/screen reader combinations support both methods.\n  //\n  // The wrapper `<span>` visually hides the space character so that it doesn't cause jank when added/removed.\n  // N.B.: Setting `position: absolute`, `opacity: 0`, or `height: 0` prevents Chrome from detecting the DOM change.\n  //\n  // This technique has been tested in:\n  //\n  //   * JAWS 2019:\n  //       - Chrome 70\n  //       - Firefox 60 (ESR)\n  //       - IE 11\n  //   * NVDA 2018:\n  //       - Chrome 70\n  //       - Firefox 60 (ESR)\n  //       - IE 11\n  //   * ChromeVox 53\n  labelEl.textContent = '';\n  labelEl.innerHTML = '<span style=\"display: inline-block; width: 0; height: 1px;\">&nbsp;</span>';\n\n  // Prevent visual jank by temporarily displaying the label text in the ::before pseudo-element.\n  // CSS generated content is normally announced by screen readers\n  // (except in IE 11; see https://tink.uk/accessibility-support-for-css-generated-content/);\n  // however, `aria-live` is turned off, so this DOM update will be ignored by screen readers.\n  labelEl.setAttribute(ARIA_LIVE_LABEL_TEXT_ATTR, labelText);\n\n  setTimeout(() => {\n    // Allow screen readers to announce changes to the DOM again.\n    ariaEl.setAttribute('aria-live', priority);\n\n    // Remove the message from the ::before pseudo-element.\n    labelEl.removeAttribute(ARIA_LIVE_LABEL_TEXT_ATTR);\n\n    // Restore the original label text, which will be announced by screen readers.\n    labelEl.textContent = labelText;\n  }, ARIA_LIVE_DELAY_MS);\n}\n\nexport {announce};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst cssClasses = {\n  OPENING: 'mdc-snackbar--opening',\n  OPEN: 'mdc-snackbar--open',\n  CLOSING: 'mdc-snackbar--closing',\n};\n\nconst strings = {\n  SURFACE_SELECTOR: '.mdc-snackbar__surface',\n  LABEL_SELECTOR: '.mdc-snackbar__label',\n  ACTION_SELECTOR: '.mdc-snackbar__action',\n  DISMISS_SELECTOR: '.mdc-snackbar__dismiss',\n\n  OPENING_EVENT: 'MDCSnackbar:opening',\n  OPENED_EVENT: 'MDCSnackbar:opened',\n  CLOSING_EVENT: 'MDCSnackbar:closing',\n  CLOSED_EVENT: 'MDCSnackbar:closed',\n\n  REASON_ACTION: 'action',\n  REASON_DISMISS: 'dismiss',\n\n  ARIA_LIVE_LABEL_TEXT_ATTR: 'data-mdc-snackbar-label-text',\n};\n\nconst numbers = {\n  MIN_AUTO_DISMISS_TIMEOUT_MS: 4000,\n  MAX_AUTO_DISMISS_TIMEOUT_MS: 10000,\n  DEFAULT_AUTO_DISMISS_TIMEOUT_MS: 5000,\n\n  // These variables need to be kept in sync with the values in _variables.scss.\n  SNACKBAR_ANIMATION_OPEN_TIME_MS: 150,\n  SNACKBAR_ANIMATION_CLOSE_TIME_MS: 75,\n\n  /**\n   * Number of milliseconds to wait between temporarily clearing the label text\n   * in the DOM and subsequently restoring it. This is necessary to force IE 11\n   * to pick up the `aria-live` content change and announce it to the user.\n   */\n  ARIA_LIVE_DELAY_MS: 1000,\n};\n\nexport {cssClasses, strings, numbers};\n","import { ViewContainerRef, InjectionToken } from '@angular/core';\r\n\r\n/** Injection token that can be used to access the data that was passed in to a snackbar. */\r\nexport const MDC_SNACKBAR_DATA = new InjectionToken<any>('MdcSnackbarData');\r\n\r\nexport class MdcSnackbarConfig<D = any> {\r\n  /** The view container to place the overlay for the snackbar into. */\r\n  viewContainerRef?: ViewContainerRef;\r\n\r\n  /** Data being injected into the child component. */\r\n  data?: D | null = null;\r\n\r\n  /** Add a CSS class or an array of classes */\r\n  classes?: string | string[];\r\n\r\n  /** Add a CSS class or an array of classes to the action button */\r\n  actionClasses?: string | string[];\r\n\r\n  /** Add a CSS class or an array of classes to the action icon */\r\n  dismissClasses?: string | string[];\r\n\r\n  /** Value must be between 4000 and 10000 or an error will be thrown. Defaults to 5000 (5 seconds). */\r\n  timeoutMs?: number;\r\n\r\n  /** Positions the action button/icon below the label instead of alongside it. */\r\n  stacked?: boolean = false;\r\n\r\n  /** Positions the snackbar on the leading edge of the screen */\r\n  leading?: boolean = false;\r\n\r\n  /** Positions the snackbar on the trailing edge of the screen */\r\n  trailing?: boolean = false;\r\n\r\n  /** The layout direction of the snackbar content */\r\n  direction?: string = 'ltr';\r\n\r\n  /** Show dismiss (\"X\") icon */\r\n  dismiss?: boolean = false;\r\n\r\n  /** Whether the snackbar closes when it is focused and the user presses the ESC key */\r\n  closeOnEscape?: boolean = true;\r\n}\r\n","import { Observable, Subject } from 'rxjs';\r\nimport { OverlayRef } from '@angular-mdc/web/overlay';\r\n\r\nimport { MdcSnackbarContainer } from './snackbar-container';\r\n\r\n/** Event that is emitted when a snackbar is dismissed. */\r\nexport interface MdcSnackbarDismissReason {\r\n  /** Whether the snackbar was dismissed using the action button. */\r\n  action?: boolean;\r\n\r\n  /** Whether the snackbar was dismissed using the dismiss icon button. */\r\n  dismiss?: boolean;\r\n}\r\n\r\n/**\r\n * Reference to a snackbar dispatched from the snackbar service.\r\n */\r\nexport class MdcSnackbarRef<T> {\r\n  /** The instance of the component making up the content of the snackbar. */\r\n  instance!: T;\r\n  componentInstance: MdcSnackbarContainer;\r\n\r\n  /** Whether the snackbar was dismissed using the action button. */\r\n  private _dismissedReason?: MdcSnackbarDismissReason;\r\n\r\n  /** Subject for notifying the user that the snackbar has been dismissed. */\r\n  private readonly _afterDismiss = new Subject<MdcSnackbarDismissReason>();\r\n\r\n  constructor(\r\n    public containerInstance: MdcSnackbarContainer,\r\n    private _overlayRef: OverlayRef) {\r\n\r\n    this.componentInstance = containerInstance;\r\n  }\r\n\r\n  /** Gets an observable that is notified when the snackbar is finished closing. */\r\n  afterDismiss(): Observable<MdcSnackbarDismissReason> {\r\n    return this._afterDismiss.asObservable();\r\n  }\r\n\r\n  dismiss(reason?: MdcSnackbarDismissReason): void {\r\n    if (!this._afterDismiss.closed) {\r\n      this._dismissedReason = reason;\r\n      this._finishDismiss();\r\n    }\r\n  }\r\n\r\n  /** Cleans up the DOM after closing. */\r\n  private _finishDismiss(): void {\r\n    this._overlayRef.dispose();\r\n\r\n    this._afterDismiss.next(this._dismissedReason);\r\n    this._afterDismiss.complete();\r\n  }\r\n}\r\n"],"names":["tslib_1.__assign","tslib_1.__extends","MDCComponent","actionEl_","textContent","actionButtonText","labelEl_","labelText","foundation_","isOpen","setCloseOnEscape","closeOnEscape","getCloseOnEscape","setTimeoutMs","timeoutMs","getTimeoutMs","Boolean","ponyfill","target","DISMISS_SELECTOR","ACTION_SELECTOR","surfaceEl_","removeEventListener","handler","addEventListener","unlisten","listen","reason","emit","CLOSED_EVENT","notifyClosed","CLOSING_EVENT","notifyClosing","OPENED_EVENT","notifyOpened","OPENING_EVENT","notifyOpening","announce_","announce","root_","classList","remove","className","removeClass","add","addClass","MDCSnackbarFoundation","close","open","deregisterSurfaceClickHandler_","handleSurfaceClick_","deregisterKeyDownHandler_","handleKeyDown_","registerSurfaceClickHandler_","registerKeyDownHandler_","handleActionIconClick","evt","isActionIcon_","handleActionButtonClick","isActionButton_","handleKeyDown","querySelector","LABEL_SELECTOR","SURFACE_SELECTOR","announceFactory","util","args","MDCSnackbar","root","strings","nativeMatches","call","element","selector","matches","webkitMatchesSelector","msMatchesSelector","el","parentElement","closest","MDCFoundation","animationTimer_","setTimeout","callback","clearTimeout","animationFrame_","requestAnimationFrame","cancelAnimationFrame","adapter_","cssClasses","CLOSING","OPENING","autoDismissTimer_","REASON_DISMISS","REASON_ACTION","key","keyCode","closeOnEscape_","Error","minValue","maxValue","autoDismissTimeoutMs_","numbers","MAX_AUTO_DISMISS_TIMEOUT_MS","MIN_AUTO_DISMISS_TIMEOUT_MS","isOpen_","SNACKBAR_ANIMATION_CLOSE_TIME_MS","handleAnimationTimerEnd_","OPEN","clearAutoDismissTimer_","SNACKBAR_ANIMATION_OPEN_TIME_MS","runNextAnimationFrame_","DEFAULT_AUTO_DISMISS_TIMEOUT_MS","Object","assign","defaultAdapter","adapter","MDCSnackbarAdapter","dispatchEvent","initCustomEvent","evtType","shouldBubble","evtData","document","createEvent","bubbles","detail","CustomEvent","destroy","initialSyncWithDOM","init","foundation","undefined","getDefaultFoundation","initialize","ARIA_LIVE_DELAY_MS","labelEl","removeAttribute","ARIA_LIVE_LABEL_TEXT_ATTR","ariaEl","setAttribute","priority","innerHTML","trim","getAttribute"],"mappings":"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"}