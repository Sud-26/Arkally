{"version":3,"file":"tab-scroller.es5.js","sources":["../../../packages/tab-scroller/tab-scroller-module.ts","../../../packages/tab-scroller/tab-scroller.ts","../../../node_modules/@material/tab-scroller/index.js","../../../node_modules/@material/tab-scroller/util.js","../../../node_modules/@material/tab-scroller/foundation.js","../../../node_modules/@material/tab-scroller/rtl-reverse-scroller.js","../../../node_modules/@material/tab-scroller/rtl-negative-scroller.js","../../../node_modules/@material/tab-scroller/rtl-default-scroller.js","../../../node_modules/@material/tab-scroller/rtl-scroller.js","../../../node_modules/@material/tab-scroller/constants.js","../../../node_modules/@material/tab-scroller/adapter.js","../../../node_modules/@material/base/component.js","../../../node_modules/@material/base/foundation.js"],"sourcesContent":["import { NgModule } from '@angular/core';\r\n\r\nimport { MdcTabScroller } from './tab-scroller';\r\n\r\n@NgModule({\r\n  exports: [MdcTabScroller],\r\n  declarations: [MdcTabScroller]\r\n})\r\nexport class MdcTabScrollerModule { }\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { merge, fromEvent, Subject, Subscription, Observable } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\n\r\nimport { Platform } from '@angular-mdc/web/common';\r\n\r\nimport { MDCTabScrollerFoundation, util } from '@material/tab-scroller/index';\r\n\r\n/** Possible alignments for tab scroller content. */\r\nexport type MdcTabScrollerAlignment = 'start' | 'center' | 'end' | null;\r\n\r\nconst SCROLLER_EVENTS = [\r\n  'keydown',\r\n  'mousedown',\r\n  'pointerdown',\r\n  'touchstart',\r\n  'wheel'\r\n];\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: '[mdcTabScroller], mdc-tab-scroller',\r\n  exportAs: 'mdcTabScroller',\r\n  host: {\r\n    'class': 'mdc-tab-scroller'\r\n  },\r\n  template: `\r\n  <div #area class=\"mdc-tab-scroller__scroll-area\">\r\n    <div #content class=\"mdc-tab-scroller__scroll-content\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MdcTabScroller implements AfterViewInit, OnDestroy {\r\n  /** Emits whenever the component is destroyed. */\r\n  private _destroy = new Subject<void>();\r\n\r\n  @Input()\r\n  get align(): MdcTabScrollerAlignment { return this._align; }\r\n  set align(value: MdcTabScrollerAlignment) {\r\n    this.setAlign(value);\r\n  }\r\n  private _align: MdcTabScrollerAlignment | null = null;\r\n\r\n  @ViewChild('area') area!: ElementRef;\r\n  @ViewChild('content') content!: ElementRef;\r\n\r\n  private _scrollAreaEventsSubscription: Subscription | null = null;\r\n\r\n  /** Combined stream of all of the scroll area events. */\r\n  get scrollAreaEvents(): Observable<any> {\r\n    return merge(...SCROLLER_EVENTS.map(evt => fromEvent(this._getScrollArea(), evt)));\r\n  }\r\n\r\n  private _createAdapter() {\r\n    return {\r\n      eventTargetMatchesSelector: (evtTarget: any, selector: string) => {\r\n        const MATCHES = util.getMatchesProperty(HTMLElement.prototype);\r\n        return evtTarget[MATCHES](selector);\r\n      },\r\n      addClass: (className: string) => this._getHostElement().classList.add(className),\r\n      removeClass: (className: string) => this._getHostElement().classList.remove(className),\r\n      addScrollAreaClass: (className: string) => this.area.nativeElement.classList.add(className),\r\n      setScrollAreaStyleProperty: (propName: string, value: string) =>\r\n        this.area.nativeElement.style.setProperty(propName, value),\r\n      setScrollContentStyleProperty: (propName: string, value: string) =>\r\n        this.content.nativeElement.style.setProperty(propName, value),\r\n      getScrollContentStyleValue: (propName: string) =>\r\n        this._platform.isBrowser ? window.getComputedStyle(this.content.nativeElement).getPropertyValue(propName) : '',\r\n      setScrollAreaScrollLeft: (scrollX: number) => this.area.nativeElement.scrollLeft = scrollX,\r\n      getScrollAreaScrollLeft: () => this.area.nativeElement.scrollLeft,\r\n      getScrollContentOffsetWidth: () => this.content.nativeElement.offsetWidth,\r\n      getScrollAreaOffsetWidth: () => this.area.nativeElement.offsetWidth,\r\n      computeScrollAreaClientRect: () =>\r\n        this._platform.isBrowser ? this.area.nativeElement.getBoundingClientRect() : {},\r\n      computeScrollContentClientRect: () =>\r\n        this._platform.isBrowser ? this.content.nativeElement.getBoundingClientRect() : {},\r\n      computeHorizontalScrollbarHeight: () =>\r\n        this._platform.isBrowser ? util.computeHorizontalScrollbarHeight(document) : 0\r\n    };\r\n  }\r\n\r\n  private _foundation: {\r\n    init(): void,\r\n    handleInteraction(): void,\r\n    handleTransitionEnd(evt: TransitionEvent): void,\r\n    getScrollPosition(): number,\r\n    offsetWidth(): number,\r\n    incrementScroll(scrollXIncrement: number): void,\r\n    scrollTo(scrollX: number): number\r\n  } = new MDCTabScrollerFoundation(this._createAdapter());\r\n\r\n  constructor(\r\n    private _ngZone: NgZone,\r\n    private _platform: Platform,\r\n    public elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this._foundation.init();\r\n\r\n    this._loadListeners();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._destroy.next();\r\n    this._destroy.complete();\r\n\r\n    if (this._scrollAreaEventsSubscription) {\r\n      this._scrollAreaEventsSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  setAlign(align: MdcTabScrollerAlignment): void {\r\n    this._getHostElement().classList.remove(`mdc-tab-scroller--align-${this._align}`);\r\n\r\n    this._align = align;\r\n    if (align) {\r\n      this._getHostElement().classList.add(`mdc-tab-scroller--align-${align}`);\r\n    }\r\n  }\r\n\r\n  /** Returns the current visual scroll position */\r\n  getScrollPosition(): number {\r\n    if (!this._platform.isBrowser) { return -1; }\r\n\r\n    return this._foundation.getScrollPosition();\r\n  }\r\n\r\n  /** Returns the width of the scroll content */\r\n  getScrollContentWidth(): number {\r\n    return this.content.nativeElement.offsetWidth;\r\n  }\r\n\r\n  /** Increments the scroll value by the given amount */\r\n  incrementScroll(scrollXIncrement: number) {\r\n    if (!this._platform.isBrowser) { return -1; }\r\n\r\n    this._foundation.incrementScroll(scrollXIncrement);\r\n  }\r\n\r\n  /** Scrolls to the given pixel position */\r\n  scrollTo(scrollX: number): void {\r\n    this._foundation.scrollTo(scrollX);\r\n  }\r\n\r\n  private _loadListeners(): void {\r\n    this._scrollAreaEventsSubscription = this.scrollAreaEvents.pipe()\r\n      .subscribe(() => this._foundation.handleInteraction());\r\n\r\n    this._ngZone.runOutsideAngular(() =>\r\n      fromEvent<TransitionEvent>(this._getScrollContent(), 'transitionend')\r\n        .pipe(takeUntil(this._destroy), filter((e: TransitionEvent) =>\r\n          e.target === this._getScrollContent()))\r\n        .subscribe(evt => this._ngZone.run(() => this._foundation.handleTransitionEnd(evt))));\r\n  }\r\n\r\n  private _getScrollArea(): HTMLElement {\r\n    return this.area.nativeElement;\r\n  }\r\n\r\n  private _getScrollContent(): HTMLElement {\r\n    return this.content.nativeElement;\r\n  }\r\n\r\n  /** Retrieves the DOM element of the component host. */\r\n  private _getHostElement(): HTMLElement {\r\n    return this.elementRef.nativeElement;\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\nimport {MDCTabScrollerAdapter} from './adapter';\nimport MDCTabScrollerFoundation from './foundation';\nimport * as util from './util';\n\n/**\n * @extends {MDCComponent<!MDCTabScrollerFoundation>}\n * @final\n */\nclass MDCTabScroller extends MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCTabScroller}\n   */\n  static attachTo(root) {\n    return new MDCTabScroller(root);\n  }\n\n  constructor(...args) {\n    super(...args);\n\n    /** @private {?Element} */\n    this.content_;\n\n    /** @private {?Element} */\n    this.area_;\n\n    /** @private {?function(?Event): undefined} */\n    this.handleInteraction_;\n\n    /** @private {?function(!Event): undefined} */\n    this.handleTransitionEnd_;\n  }\n\n  initialize() {\n    this.area_ = this.root_.querySelector(MDCTabScrollerFoundation.strings.AREA_SELECTOR);\n    this.content_ = this.root_.querySelector(MDCTabScrollerFoundation.strings.CONTENT_SELECTOR);\n  }\n\n  initialSyncWithDOM() {\n    this.handleInteraction_ = () => this.foundation_.handleInteraction();\n    this.handleTransitionEnd_ = (evt) => this.foundation_.handleTransitionEnd(evt);\n\n    this.area_.addEventListener('wheel', this.handleInteraction_);\n    this.area_.addEventListener('touchstart', this.handleInteraction_);\n    this.area_.addEventListener('pointerdown', this.handleInteraction_);\n    this.area_.addEventListener('mousedown', this.handleInteraction_);\n    this.area_.addEventListener('keydown', this.handleInteraction_);\n    this.content_.addEventListener('transitionend', this.handleTransitionEnd_);\n  }\n\n  destroy() {\n    super.destroy();\n\n    this.area_.removeEventListener('wheel', this.handleInteraction_);\n    this.area_.removeEventListener('touchstart', this.handleInteraction_);\n    this.area_.removeEventListener('pointerdown', this.handleInteraction_);\n    this.area_.removeEventListener('mousedown', this.handleInteraction_);\n    this.area_.removeEventListener('keydown', this.handleInteraction_);\n    this.content_.removeEventListener('transitionend', this.handleTransitionEnd_);\n  }\n\n  /**\n   * @return {!MDCTabScrollerFoundation}\n   */\n  getDefaultFoundation() {\n    const adapter = /** @type {!MDCTabScrollerAdapter} */ ({\n      eventTargetMatchesSelector: (evtTarget, selector) => {\n        const MATCHES = util.getMatchesProperty(HTMLElement.prototype);\n        return evtTarget[MATCHES](selector);\n      },\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      addScrollAreaClass: (className) => this.area_.classList.add(className),\n      setScrollAreaStyleProperty: (prop, value) => this.area_.style.setProperty(prop, value),\n      setScrollContentStyleProperty: (prop, value) => this.content_.style.setProperty(prop, value),\n      getScrollContentStyleValue: (propName) => window.getComputedStyle(this.content_).getPropertyValue(propName),\n      setScrollAreaScrollLeft: (scrollX) => this.area_.scrollLeft = scrollX,\n      getScrollAreaScrollLeft: () => this.area_.scrollLeft,\n      getScrollContentOffsetWidth: () => this.content_.offsetWidth,\n      getScrollAreaOffsetWidth: () => this.area_.offsetWidth,\n      computeScrollAreaClientRect: () => this.area_.getBoundingClientRect(),\n      computeScrollContentClientRect: () => this.content_.getBoundingClientRect(),\n      computeHorizontalScrollbarHeight: () => util.computeHorizontalScrollbarHeight(document),\n    });\n\n    return new MDCTabScrollerFoundation(adapter);\n  }\n\n  /**\n   * Returns the current visual scroll position\n   * @return {number}\n   */\n  getScrollPosition() {\n    return this.foundation_.getScrollPosition();\n  }\n\n  /**\n   * Returns the width of the scroll content\n   * @return {number}\n   */\n  getScrollContentWidth() {\n    return this.content_.offsetWidth;\n  }\n\n  /**\n   * Increments the scroll value by the given amount\n   * @param {number} scrollXIncrement The pixel value by which to increment the scroll value\n   */\n  incrementScroll(scrollXIncrement) {\n    this.foundation_.incrementScroll(scrollXIncrement);\n  }\n\n  /**\n   * Scrolls to the given pixel position\n   * @param {number} scrollX The pixel value to scroll to\n   */\n  scrollTo(scrollX) {\n    this.foundation_.scrollTo(scrollX);\n  }\n}\n\nexport {MDCTabScroller, MDCTabScrollerFoundation, util};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {cssClasses} from './constants';\n\n/**\n * Stores result from computeHorizontalScrollbarHeight to avoid redundant processing.\n * @private {number|undefined}\n */\nlet horizontalScrollbarHeight_;\n\n/**\n * Computes the height of browser-rendered horizontal scrollbars using a self-created test element.\n * May return 0 (e.g. on OS X browsers under default configuration).\n * @param {!Document} documentObj\n * @param {boolean=} shouldCacheResult\n * @return {number}\n */\nfunction computeHorizontalScrollbarHeight(documentObj, shouldCacheResult = true) {\n  if (shouldCacheResult && typeof horizontalScrollbarHeight_ !== 'undefined') {\n    return horizontalScrollbarHeight_;\n  }\n\n  const el = documentObj.createElement('div');\n  el.classList.add(cssClasses.SCROLL_TEST);\n  documentObj.body.appendChild(el);\n\n  const horizontalScrollbarHeight = el.offsetHeight - el.clientHeight;\n  documentObj.body.removeChild(el);\n\n  if (shouldCacheResult) {\n    horizontalScrollbarHeight_ = horizontalScrollbarHeight;\n  }\n  return horizontalScrollbarHeight;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {string}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\nexport {computeHorizontalScrollbarHeight, getMatchesProperty};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings} from './constants';\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges, MDCTabScrollerAdapter} from './adapter';\nimport MDCTabScrollerRTL from './rtl-scroller';\n/* eslint-enable no-unused-vars */\nimport MDCTabScrollerRTLDefault from './rtl-default-scroller';\nimport MDCTabScrollerRTLNegative from './rtl-negative-scroller';\nimport MDCTabScrollerRTLReverse from './rtl-reverse-scroller';\n\n/**\n * @extends {MDCFoundation<!MDCTabScrollerAdapter>}\n * @final\n */\nclass MDCTabScrollerFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * @see MDCTabScrollerAdapter for typing information\n   * @return {!MDCTabScrollerAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabScrollerAdapter} */ ({\n      eventTargetMatchesSelector: () => {},\n      addClass: () => {},\n      removeClass: () => {},\n      addScrollAreaClass: () => {},\n      setScrollAreaStyleProperty: () => {},\n      setScrollContentStyleProperty: () => {},\n      getScrollContentStyleValue: () => {},\n      setScrollAreaScrollLeft: () => {},\n      getScrollAreaScrollLeft: () => {},\n      getScrollContentOffsetWidth: () => {},\n      getScrollAreaOffsetWidth: () => {},\n      computeScrollAreaClientRect: () => {},\n      computeScrollContentClientRect: () => {},\n      computeHorizontalScrollbarHeight: () => {},\n    });\n  }\n\n  /** @param {!MDCTabScrollerAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCTabScrollerFoundation.defaultAdapter, adapter));\n\n    /**\n     * This boolean controls whether we should handle the transitionend and interaction events during the animation.\n     * @private {boolean}\n     */\n    this.isAnimating_ = false;\n\n    /**\n     * The MDCTabScrollerRTL instance varies per browser and allows us to encapsulate the peculiar browser behavior\n     * of RTL scrolling in it's own class.\n     * @private {?MDCTabScrollerRTL}\n     */\n    this.rtlScrollerInstance_;\n  }\n\n  init() {\n    // Compute horizontal scrollbar height on scroller with overflow initially hidden, then update overflow to scroll\n    // and immediately adjust bottom margin to avoid the scrollbar initially appearing before JS runs.\n    const horizontalScrollbarHeight = this.adapter_.computeHorizontalScrollbarHeight();\n    this.adapter_.setScrollAreaStyleProperty('margin-bottom', -horizontalScrollbarHeight + 'px');\n    this.adapter_.addScrollAreaClass(MDCTabScrollerFoundation.cssClasses.SCROLL_AREA_SCROLL);\n  }\n\n  /**\n   * Computes the current visual scroll position\n   * @return {number}\n   */\n  getScrollPosition() {\n    if (this.isRTL_()) {\n      return this.computeCurrentScrollPositionRTL_();\n    }\n\n    const currentTranslateX = this.calculateCurrentTranslateX_();\n    const scrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    return scrollLeft - currentTranslateX;\n  }\n\n  /**\n   * Handles interaction events that occur during transition\n   */\n  handleInteraction() {\n    // Early exit if we aren't animating\n    if (!this.isAnimating_) {\n      return;\n    }\n\n    // Prevent other event listeners from handling this event\n    this.stopScrollAnimation_();\n  }\n\n  /**\n   * Handles the transitionend event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Early exit if we aren't animating or the event was triggered by a different element.\n    if (!this.isAnimating_\n      || !this.adapter_.eventTargetMatchesSelector(evt.target, MDCTabScrollerFoundation.strings.CONTENT_SELECTOR)) {\n      return;\n    }\n\n    this.isAnimating_ = false;\n    this.adapter_.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n  }\n\n  /**\n   * Increment the scroll value by the scrollXIncrement\n   * @param {number} scrollXIncrement The value by which to increment the scroll position\n   */\n  incrementScroll(scrollXIncrement) {\n    // Early exit for non-operational increment values\n    if (scrollXIncrement === 0) {\n      return;\n    }\n\n    if (this.isRTL_()) {\n      return this.incrementScrollRTL_(scrollXIncrement);\n    }\n\n    this.incrementScroll_(scrollXIncrement);\n  }\n\n  /**\n   * Scrolls to the given scrollX value\n   * @param {number} scrollX\n   */\n  scrollTo(scrollX) {\n    if (this.isRTL_()) {\n      return this.scrollToRTL_(scrollX);\n    }\n\n    this.scrollTo_(scrollX);\n  }\n\n  /**\n   * Returns the appropriate version of the MDCTabScrollerRTL\n   * @return {!MDCTabScrollerRTL}\n   */\n  getRTLScroller() {\n    if (!this.rtlScrollerInstance_) {\n      this.rtlScrollerInstance_ = this.rtlScrollerFactory_();\n    }\n\n    return this.rtlScrollerInstance_;\n  }\n\n  /**\n   * Returns the translateX value from a CSS matrix transform function string\n   * @return {number}\n   * @private\n   */\n  calculateCurrentTranslateX_() {\n    const transformValue = this.adapter_.getScrollContentStyleValue('transform');\n    // Early exit if no transform is present\n    if (transformValue === 'none') {\n      return 0;\n    }\n\n    // The transform value comes back as a matrix transformation in the form\n    // of `matrix(a, b, c, d, tx, ty)`. We only care about tx (translateX) so\n    // we're going to grab all the parenthesized values, strip out tx, and\n    // parse it.\n    const results = /\\((.+)\\)/.exec(transformValue)[1];\n    const parts = results.split(',');\n    return parseFloat(parts[4]);\n  }\n\n  /**\n   * Calculates a safe scroll value that is > 0 and < the max scroll value\n   * @param {number} scrollX The distance to scroll\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.left, scrollX), edges.right);\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  computeCurrentScrollPositionRTL_() {\n    const translateX = this.calculateCurrentTranslateX_();\n    return this.getRTLScroller().getScrollPositionRTL(translateX);\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: 0,\n      right: contentWidth - rootWidth,\n    });\n  }\n\n  /**\n   * Internal scroll method\n   * @param {number} scrollX The new scroll position\n   * @private\n   */\n  scrollTo_(scrollX) {\n    const currentScrollX = this.getScrollPosition();\n    const safeScrollX = this.clampScrollValue_(scrollX);\n    const scrollDelta = safeScrollX - currentScrollX;\n    this.animate_(/** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: safeScrollX,\n      scrollDelta: scrollDelta,\n    }));\n  }\n\n  /**\n   * Internal RTL scroll method\n   * @param {number} scrollX The new scroll position\n   * @private\n   */\n  scrollToRTL_(scrollX) {\n    const animation = this.getRTLScroller().scrollToRTL(scrollX);\n    this.animate_(animation);\n  }\n\n  /**\n   * Internal increment scroll method\n   * @param {number} scrollX The new scroll position increment\n   * @private\n   */\n  incrementScroll_(scrollX) {\n    const currentScrollX = this.getScrollPosition();\n    const targetScrollX = scrollX + currentScrollX;\n    const safeScrollX = this.clampScrollValue_(targetScrollX);\n    const scrollDelta = safeScrollX - currentScrollX;\n    this.animate_(/** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: safeScrollX,\n      scrollDelta: scrollDelta,\n    }));\n  }\n\n  /**\n   * Internal incremenet scroll RTL method\n   * @param {number} scrollX The new scroll position RTL increment\n   * @private\n   */\n  incrementScrollRTL_(scrollX) {\n    const animation = this.getRTLScroller().incrementScrollRTL(scrollX);\n    this.animate_(animation);\n  }\n\n  /**\n   * Animates the tab scrolling\n   * @param {!MDCTabScrollerAnimation} animation The animation to apply\n   * @private\n   */\n  animate_(animation) {\n    // Early exit if translateX is 0, which means there's no animation to perform\n    if (animation.scrollDelta === 0) {\n      return;\n    }\n\n    this.stopScrollAnimation_();\n    // This animation uses the FLIP approach.\n    // Read more here: https://aerotwist.com/blog/flip-your-animations/\n    this.adapter_.setScrollAreaScrollLeft(animation.finalScrollPosition);\n    this.adapter_.setScrollContentStyleProperty('transform', `translateX(${animation.scrollDelta}px)`);\n    // Force repaint\n    this.adapter_.computeScrollAreaClientRect();\n\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n      this.adapter_.setScrollContentStyleProperty('transform', 'none');\n    });\n\n    this.isAnimating_ = true;\n  }\n\n  /**\n   * Stops scroll animation\n   * @private\n   */\n  stopScrollAnimation_() {\n    this.isAnimating_ = false;\n    const currentScrollPosition = this.getAnimatingScrollPosition_();\n    this.adapter_.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n    this.adapter_.setScrollContentStyleProperty('transform', 'translateX(0px)');\n    this.adapter_.setScrollAreaScrollLeft(currentScrollPosition);\n  }\n\n  /**\n   * Gets the current scroll position during animation\n   * @return {number}\n   * @private\n   */\n  getAnimatingScrollPosition_() {\n    const currentTranslateX = this.calculateCurrentTranslateX_();\n    const scrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    if (this.isRTL_()) {\n      return this.getRTLScroller().getAnimatingScrollPosition(scrollLeft, currentTranslateX);\n    }\n\n    return scrollLeft - currentTranslateX;\n  }\n\n  /**\n   * Determines the RTL Scroller to use\n   * @return {!MDCTabScrollerRTL}\n   * @private\n   */\n  rtlScrollerFactory_() {\n    // Browsers have three different implementations of scrollLeft in RTL mode,\n    // dependent on the browser. The behavior is based off the max LTR\n    // scrollleft value and 0.\n    //\n    // * Default scrolling in RTL *\n    //    - Left-most value: 0\n    //    - Right-most value: Max LTR scrollLeft value\n    //\n    // * Negative scrolling in RTL *\n    //    - Left-most value: Negated max LTR scrollLeft value\n    //    - Right-most value: 0\n    //\n    // * Reverse scrolling in RTL *\n    //    - Left-most value: Max LTR scrollLeft value\n    //    - Right-most value: 0\n    //\n    // We use those principles below to determine which RTL scrollLeft\n    // behavior is implemented in the current browser.\n    const initialScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    this.adapter_.setScrollAreaScrollLeft(initialScrollLeft - 1);\n    const newScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n\n    // If the newScrollLeft value is negative,then we know that the browser has\n    // implemented negative RTL scrolling, since all other implementations have\n    // only positive values.\n    if (newScrollLeft < 0) {\n      // Undo the scrollLeft test check\n      this.adapter_.setScrollAreaScrollLeft(initialScrollLeft);\n      return new MDCTabScrollerRTLNegative(this.adapter_);\n    }\n\n    const rootClientRect = this.adapter_.computeScrollAreaClientRect();\n    const contentClientRect = this.adapter_.computeScrollContentClientRect();\n    const rightEdgeDelta = Math.round(contentClientRect.right - rootClientRect.right);\n    // Undo the scrollLeft test check\n    this.adapter_.setScrollAreaScrollLeft(initialScrollLeft);\n\n    // By calculating the clientRect of the root element and the clientRect of\n    // the content element, we can determine how much the scroll value changed\n    // when we performed the scrollLeft subtraction above.\n    if (rightEdgeDelta === newScrollLeft) {\n      return new MDCTabScrollerRTLReverse(this.adapter_);\n    }\n\n    return new MDCTabScrollerRTLDefault(this.adapter_);\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isRTL_() {\n    return this.adapter_.getScrollContentStyleValue('direction') === 'rtl';\n  }\n}\n\nexport default MDCTabScrollerFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLReverse extends MDCTabScrollerRTL {\n  /**\n   * @param {number} translateX\n   * @return {number}\n   */\n  getScrollPositionRTL(translateX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    // Scroll values on most browsers are ints instead of floats so we round\n    return Math.round(currentScrollLeft - translateX);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: currentScrollLeft - clampedScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft + scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: currentScrollLeft - clampedScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {\n    return scrollX + translateX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: contentWidth - rootWidth,\n      right: 0,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.right, scrollX), edges.left);\n  }\n}\n\nexport default MDCTabScrollerRTLReverse;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLNegative extends MDCTabScrollerRTL {\n  /**\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   */\n  getScrollPositionRTL(translateX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    return Math.round(translateX - currentScrollLeft);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(-scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @param {number} translateX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {\n    return scrollX - translateX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: rootWidth - contentWidth,\n      right: 0,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.max(Math.min(edges.right, scrollX), edges.left);\n  }\n}\n\nexport default MDCTabScrollerRTLNegative;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLDefault extends MDCTabScrollerRTL {\n  /**\n   * @return {number}\n   */\n  getScrollPositionRTL() {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const {right} = this.calculateScrollEdges_();\n    // Scroll values on most browsers are ints instead of floats so we round\n    return Math.round(right - currentScrollLeft);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(edges.right - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX) {\n    return scrollX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: 0,\n      right: contentWidth - rootWidth,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.left, scrollX), edges.right);\n  }\n}\n\nexport default MDCTabScrollerRTLDefault;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAdapter, MDCTabScrollerAnimation} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @abstract\n */\nclass MDCTabScrollerRTL {\n  /** @param {!MDCTabScrollerAdapter} adapter */\n  constructor(adapter) {\n    /** @private */\n    this.adapter_ = adapter;\n  }\n\n  /**\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   * @abstract\n   */\n  getScrollPositionRTL(translateX) {}\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   * @abstract\n   */\n  scrollToRTL(scrollX) {}\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   * @abstract\n   */\n  incrementScrollRTL(scrollX) {}\n\n  /**\n   * @param {number} scrollX The current scrollX position\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   * @abstract\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {}\n}\n\nexport default MDCTabScrollerRTL;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ANIMATING: 'mdc-tab-scroller--animating',\n  SCROLL_TEST: 'mdc-tab-scroller__test',\n  SCROLL_AREA_SCROLL: 'mdc-tab-scroller__scroll-area--scroll',\n};\n\n/** @enum {string} */\nconst strings = {\n  AREA_SELECTOR: '.mdc-tab-scroller__scroll-area',\n  CONTENT_SELECTOR: '.mdc-tab-scroller__scroll-content',\n};\n\nexport {\n  cssClasses,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * MDCTabScrollerAnimation contains the values required for animating from the\n * current scroll position to the new scroll position. The \"finalScrollPosition\"\n * value represents the new scroll position while the \"scrollDelta\" value is the\n * corresponding transformation that is applied to the scroll content. Together,\n * they create the animation by first updating the scroll value then applying\n * the transformation and animating the transition. Both pieces are necessary\n * for the scroll animation to work. The values are used as-is by the tab\n * scroller animation method, ensuring that all logic for determining scroll\n * position or transformation is abstracted away from the animation method.\n * @typedef {{finalScrollPosition: number, scrollDelta: number}}\n */\nlet MDCTabScrollerAnimation;\n\n/**\n * MDCTabScrollerHorizontalEdges represents the left and right edges of the\n * scroll content. These values vary depending on how scrolling in RTL is\n * implemented by the browser. One value is always 0 and one value is always\n * the max scrollable value as either a positive or negative integer.\n * @typedef {{left: number, right: number}}\n */\nlet MDCTabScrollerHorizontalEdges;\n\n/**\n * Adapter for MDC Tab Scroller.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Tab  into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTabScrollerAdapter {\n  /**\n   * Adds the given className to the root element.\n   * @param {string} className The className to add\n   */\n  addClass(className) {}\n\n  /**\n   * Removes the given className from the root element.\n   * @param {string} className The className to remove\n   */\n  removeClass(className) {}\n\n  /**\n   * Adds the given className to the scroll area element.\n   * @param {string} className The className to add\n   */\n  addScrollAreaClass(className) {}\n\n  /**\n   * Returns whether the event target matches given className.\n   * @param {EventTarget} evtTarget The event target\n   * @param {string} selector The selector to check\n   * @return {boolean}\n   */\n  eventTargetMatchesSelector(evtTarget, selector) {}\n\n  /**\n   * Sets a style property of the area element to the passed value.\n   * @param {string} propName The style property name to set\n   * @param {string} value The style property value\n   */\n  setScrollAreaStyleProperty(propName, value) {}\n\n  /**\n   * Sets a style property of the content element to the passed value.\n   * @param {string} propName The style property name to set\n   * @param {string} value The style property value\n   */\n  setScrollContentStyleProperty(propName, value) {}\n\n  /**\n   * Returns the scroll content element's computed style value of the given css property `propertyName`.\n   * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getScrollContentStyleValue(propertyName) {}\n\n  /**\n   * Sets the scrollLeft value of the scroll area element to the passed value.\n   * @param {number} scrollLeft The new scrollLeft value\n   */\n  setScrollAreaScrollLeft(scrollLeft) {}\n\n  /**\n   * Returns the scrollLeft value of the scroll area element.\n   * @return {number}\n   */\n  getScrollAreaScrollLeft() {}\n\n  /**\n   * Returns the offsetWidth of the scroll content element.\n   * @return {number}\n   */\n  getScrollContentOffsetWidth() {}\n\n  /**\n   * Returns the offsetWitdth of the scroll area element.\n   * @return {number}\n   */\n  getScrollAreaOffsetWidth() {}\n\n  /**\n   * Returns the bounding client rect of the scroll area element.\n   * @return {!ClientRect}\n   */\n  computeScrollAreaClientRect() {}\n\n  /**\n   * Returns the bounding client rect of the scroll content element.\n   * @return {!ClientRect}\n   */\n  computeScrollContentClientRect() {}\n\n  /**\n   * Returns the height of the browser's horizontal scrollbars (in px).\n   * @return {number}\n   */\n  computeHorizontalScrollbarHeight() {}\n}\n\nexport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges, MDCTabScrollerAdapter};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n"],"names":["util.computeHorizontalScrollbarHeight","util.getMatchesProperty","MDCComponent","foundation_","scrollTo","scrollX","incrementScroll","scrollXIncrement","content_","offsetWidth","getScrollPosition","MDCTabScrollerFoundation","adapter","util","document","computeHorizontalScrollbarHeight","getBoundingClientRect","computeScrollContentClientRect","area_","computeScrollAreaClientRect","getScrollAreaOffsetWidth","getScrollContentOffsetWidth","scrollLeft","getScrollAreaScrollLeft","setScrollAreaScrollLeft","window","getComputedStyle","getPropertyValue","propName","getScrollContentStyleValue","style","setProperty","prop","value","setScrollContentStyleProperty","setScrollAreaStyleProperty","classList","add","className","addScrollAreaClass","root_","remove","removeClass","addClass","evtTarget","MATCHES","selector","HTMLElement","prototype","eventTargetMatchesSelector","removeEventListener","handleTransitionEnd_","handleInteraction_","addEventListener","handleTransitionEnd","evt","handleInteraction","querySelector","strings","CONTENT_SELECTOR","AREA_SELECTOR","args","MDCTabScroller","root","pop","p","HTMLElementPrototype","filter","getMatchesProperty","horizontalScrollbarHeight","horizontalScrollbarHeight_","shouldCacheResult","documentObj","body","removeChild","el","offsetHeight","clientHeight","appendChild","cssClasses","SCROLL_TEST","createElement","MDCFoundation","adapter_","MDCTabScrollerRTLDefault","MDCTabScrollerRTLReverse","rightEdgeDelta","newScrollLeft","initialScrollLeft","Math","round","contentClientRect","right","rootClientRect","MDCTabScrollerRTLNegative","currentTranslateX","getRTLScroller","getAnimatingScrollPosition","isRTL_","calculateCurrentTranslateX_","currentScrollPosition","ANIMATING","getAnimatingScrollPosition_","isAnimating_","requestAnimationFrame","animation","scrollDelta","finalScrollPosition","stopScrollAnimation_","animate_","incrementScrollRTL","safeScrollX","currentScrollX","clampScrollValue_","targetScrollX","scrollToRTL","contentWidth","rootWidth","left","getScrollPositionRTL","translateX","min","max","edges","calculateScrollEdges_","parseFloat","parts","results","split","exec","transformValue","rtlScrollerInstance_","rtlScrollerFactory_","scrollTo_","scrollToRTL_","incrementScroll_","incrementScrollRTL_","target","computeCurrentScrollPositionRTL_","SCROLL_AREA_SCROLL","Object","assign","defaultAdapter","MDCTabScrollerRTL","currentScrollLeft","clampedScrollLeft","propertyName","MDCTabScrollerAdapter","dispatchEvent","initCustomEvent","evtType","shouldBubble","evtData","createEvent","bubbles","detail","CustomEvent","handler","destroy","Error","initialSyncWithDOM","init","foundation","undefined","getDefaultFoundation","initialize"],"mappings":"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"}