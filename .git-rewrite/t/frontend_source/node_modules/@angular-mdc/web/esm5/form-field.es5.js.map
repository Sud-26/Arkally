{"version":3,"file":"form-field.es5.js","sources":["../../../packages/form-field/form-field-module.ts","../../../packages/form-field/form-field.ts","../../../packages/form-field/helper-text.ts","../../../packages/form-field/form-field-control.ts","../../../packages/form-field/error-state-matcher.ts","../../../packages/form-field/error-state.ts","../../../packages/form-field/character-counter.ts","../../../node_modules/@material/textfield/character-counter/index.js","../../../node_modules/@material/textfield/character-counter/foundation.js","../../../node_modules/@material/textfield/character-counter/constants.js","../../../node_modules/@material/textfield/character-counter/adapter.js","../../../node_modules/@material/base/component.js","../../../node_modules/@material/base/foundation.js"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MdcFormField } from './form-field';\r\nimport { MdcHelperText } from './helper-text';\r\nimport { MdcCharacterCounter } from './character-counter';\r\n\r\nconst FORM_FIELD_DECLARATIONS = [\r\n  MdcCharacterCounter,\r\n  MdcFormField,\r\n  MdcHelperText\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [FORM_FIELD_DECLARATIONS],\r\n  declarations: [FORM_FIELD_DECLARATIONS]\r\n})\r\nexport class MdcFormFieldModule { }\r\n","import {\r\n  AfterContentInit,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  ElementRef,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  QueryList,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { fromEvent, Subject } from 'rxjs';\r\nimport { takeUntil, startWith } from 'rxjs/operators';\r\n\r\nimport { toBoolean } from '@angular-mdc/web/common';\r\n\r\nimport { MdcFormFieldControl } from './form-field-control';\r\nimport { MdcHelperText } from './helper-text';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mdc-form-field',\r\n  exportAs: 'mdcFormField',\r\n  host: {\r\n    '[class.ngx-mdc-form-field--fluid]': 'fluid',\r\n    '[class.mdc-form-field--align-end]': 'alignEnd'\r\n  },\r\n  template: `<ng-content></ng-content>\r\n  <ng-content select=\"[mdcHelperText, mdc-helper-text]\"></ng-content>`,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MdcFormField implements AfterContentInit, OnDestroy {\r\n  /** Emits whenever the component is destroyed. */\r\n  private _destroy = new Subject<void>();\r\n\r\n  public label?: HTMLElement;\r\n\r\n  @Input()\r\n  get fluid(): boolean { return this._fluid; }\r\n  set fluid(value: boolean) {\r\n    this._fluid = toBoolean(value);\r\n  }\r\n  private _fluid: boolean = false;\r\n\r\n  @Input()\r\n  get alignEnd(): boolean { return this._alignEnd; }\r\n  set alignEnd(value: boolean) {\r\n    this._alignEnd = toBoolean(value);\r\n  }\r\n  private _alignEnd: boolean = false;\r\n\r\n  @ContentChild(MdcFormFieldControl) _control!: MdcFormFieldControl<any>;\r\n  @ContentChildren(MdcHelperText, { descendants: true }) assistiveElements!: QueryList<MdcHelperText>;\r\n\r\n  constructor(\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    private _ngZone: NgZone,\r\n    public elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (this._control) {\r\n      const control = this._control.elementRef.nativeElement;\r\n\r\n      if (control.nextElementSibling) {\r\n        if (control.nextElementSibling.tagName === 'LABEL') {\r\n          this.label = control.nextElementSibling;\r\n          if (this.label && this._control.inputId) {\r\n            this.label!.setAttribute('for', this._control.inputId);\r\n            this._loadListeners();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // When assistive elements change, initialize foundation\r\n    this.assistiveElements.changes.pipe(startWith(null), takeUntil(this._destroy))\r\n      .subscribe(() => {\r\n        (this.assistiveElements).forEach(helperText =>\r\n          this._initHelperTextFoundation(helperText));\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._destroy.next();\r\n    this._destroy.complete();\r\n  }\r\n\r\n  private _initHelperTextFoundation(helperText: MdcHelperText): void {\r\n    const control = this._control;\r\n\r\n    if (control && control.controlType) {\r\n      control.helperText = helperText;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  private _loadListeners(): void {\r\n    this._ngZone.runOutsideAngular(() =>\r\n      fromEvent<MouseEvent>(this.label!, 'click').pipe(takeUntil(this._destroy))\r\n        .subscribe(() => this._ngZone.run(() => {\r\n          this._control.ripple!.activateRipple();\r\n\r\n          if (typeof requestAnimationFrame !== 'undefined') {\r\n            requestAnimationFrame(() => this._control.ripple!.deactivateRipple());\r\n          }\r\n        })));\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { toBoolean } from '@angular-mdc/web/common';\r\nimport { MdcCharacterCounter } from './character-counter';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: `mdc-helper-text, [mdcHelperText],\r\n  mdc-text-field-helper-text, [mdcTextFieldHelperText], [mdcSelectHelperText]`,\r\n  exportAs: 'mdcHelperText, mdcSelectHelperText',\r\n  host: { 'class': 'mdc-text-field-helper-line' },\r\n  template: `<div #helperText><ng-content></ng-content></div>\r\n  <div mdcCharacterCounter *ngIf=\"characterCounter\"></div>`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MdcHelperText {\r\n  characterCounter: boolean = false;\r\n\r\n  @Input() id?: string;\r\n\r\n  @Input()\r\n  get persistent(): boolean { return this._persistent; }\r\n  set persistent(value: boolean) {\r\n    this._persistent = toBoolean(value);\r\n    if (this._foundation) {\r\n      this._foundation.setPersistent(this._persistent);\r\n    }\r\n  }\r\n  private _persistent: boolean = false;\r\n\r\n  @Input()\r\n  get validation(): boolean { return this._validation; }\r\n  set validation(value: boolean) {\r\n    this._validation = toBoolean(value);\r\n    if (this._foundation) {\r\n      this._foundation.setValidation(this._validation);\r\n    }\r\n  }\r\n  private _validation: boolean = false;\r\n\r\n  @ViewChild('helperText') _helperTextElement?: ElementRef<HTMLElement>;\r\n  @ViewChild(MdcCharacterCounter) _characterCounterElement?: MdcCharacterCounter;\r\n\r\n  constructor(public elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  private _foundation!: {\r\n    showToScreenReader(): boolean,\r\n    setValidity(inputIsValid: boolean): void,\r\n    setPersistent(isPersistent: boolean): void,\r\n    setValidation(isValidation: boolean): void\r\n  };\r\n\r\n  /** Sets the validity of the helper text based on inputIsValid. */\r\n  setValidity(inputIsValid: boolean): void {\r\n    this._foundation.setValidity(inputIsValid);\r\n  }\r\n\r\n  /** Makes the helper text visible to the screen reader. */\r\n  showToScreenReader(): void {\r\n    this._foundation.showToScreenReader();\r\n  }\r\n\r\n  init(foundation: any): void {\r\n    this._foundation = new foundation(this._createAdapter());\r\n    this._foundation.setPersistent(this.persistent);\r\n    this._foundation.setValidation(this.validation);\r\n  }\r\n\r\n  addHelperTextClass(className: string): void {\r\n    this._helperTextElement!.nativeElement.classList.add(`${className}-helper-text`);\r\n  }\r\n\r\n  private _createAdapter() {\r\n    return {\r\n      addClass: (className: string) => this._helperTextElement!.nativeElement.classList.add(className),\r\n      removeClass: (className: string) => this._helperTextElement!.nativeElement.classList.remove(className),\r\n      hasClass: (className: string) => this._helperTextElement!.nativeElement.classList.contains(className),\r\n      setAttr: (attr: string, value: string) => this._helperTextElement!.nativeElement.setAttribute(attr, value),\r\n      removeAttr: (attr: string) => this._helperTextElement!.nativeElement.removeAttribute(attr)\r\n    };\r\n  }\r\n}\r\n","import { ElementRef } from '@angular/core';\r\nimport { MdcRipple } from '@angular-mdc/web/ripple';\r\nimport { MdcHelperText } from './helper-text';\r\n\r\nexport abstract class MdcFormFieldControl<T> {\r\n  /** The value of the control. */\r\n  value?: T | null = null;\r\n\r\n  /** The element ID for this control. */\r\n  readonly id!: string;\r\n\r\n  /** The element ID for this control's hidden input. */\r\n  readonly inputId?: string;\r\n\r\n  readonly elementRef!: ElementRef;\r\n\r\n  readonly ripple?: MdcRipple;\r\n\r\n  readonly controlType?: string;\r\n\r\n  helperText?: MdcHelperText | null;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\r\n\r\n/** Provider that defines how form controls behave with regards to displaying error messages. */\r\n@Injectable({ providedIn: 'root' })\r\nexport class ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\r\n  }\r\n}\r\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\r\n\r\nimport { ErrorStateMatcher } from './error-state-matcher';\r\n\r\nexport type Constructor<T> = new (...args: any[]) => T;\r\n\r\nexport interface CanUpdateErrorState {\r\n  updateErrorState(): void;\r\n  errorState: boolean;\r\n  errorStateMatcher?: ErrorStateMatcher;\r\n}\r\n\r\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\r\n\r\nexport interface HasErrorState {\r\n  _parentFormGroup: FormGroupDirective;\r\n  _parentForm: NgForm;\r\n  _defaultErrorStateMatcher: ErrorStateMatcher;\r\n  ngControl: NgControl;\r\n}\r\n\r\n/**\r\n * Mixin to augment a directive with updateErrorState method.\r\n * For component with `errorState` and need to update `errorState`.\r\n */\r\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\r\n  : CanUpdateErrorStateCtor & T {\r\n  return class extends base {\r\n    /** Whether the component is in an error state. */\r\n    errorState: boolean = false;\r\n    required: boolean = false;\r\n\r\n    errorStateMatcher?: ErrorStateMatcher;\r\n\r\n    updateErrorState() {\r\n      const oldState = this.errorState;\r\n      const parent = this._parentFormGroup || this._parentForm;\r\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\r\n      const control = this.ngControl ? this.ngControl.control as FormControl : null;\r\n      const newState = matcher.isErrorState(control, parent);\r\n\r\n      if (newState !== oldState) {\r\n        this.errorState = newState;\r\n      }\r\n\r\n      // Currently there isn't a great way to determine if Validators.required\r\n      // has been added to the control since form validators are combined into\r\n      // an aggregate function at initialization.\r\n      if (control && !this.required) {\r\n        this.required = control.hasError('required');\r\n      }\r\n    }\r\n\r\n    constructor(...args: any[]) {\r\n      super(...args);\r\n    }\r\n  };\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { MDCTextFieldCharacterCounterFoundation } from '@material/textfield/character-counter/index';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: '[mdcCharacterCounter]',\r\n  exportAs: 'mdcCharacterCounter',\r\n  host: { 'class': 'mdc-text-field-character-counter' },\r\n  template: '<ng-content></ng-content>'\r\n})\r\nexport class MdcCharacterCounter implements OnDestroy {\r\n  getDefaultFoundation(): any {\r\n    const adapter: any = {\r\n      setContent: (content: string) => this.elementRef.nativeElement.textContent = content\r\n    };\r\n\r\n    return new MDCTextFieldCharacterCounterFoundation(adapter);\r\n  }\r\n\r\n  constructor(public elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.getDefaultFoundation().destroy();\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\nimport MDCTextFieldCharacterCounterAdapter from './adapter';\nimport MDCTextFieldCharacterCounterFoundation from './foundation';\n\n/**\n * @extends {MDCComponent<!MDCTextFieldCharacterCounterFoundation>}\n * @final\n */\nclass MDCTextFieldCharacterCounter extends MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCTextFieldCharacterCounter}\n   */\n  static attachTo(root) {\n    return new MDCTextFieldCharacterCounter(root);\n  }\n\n  /**\n   * @return {!MDCTextFieldCharacterCounterFoundation}\n   */\n  get foundation() {\n    return this.foundation_;\n  }\n\n  /**\n   * @return {!MDCTextFieldCharacterCounterFoundation}\n   */\n  getDefaultFoundation() {\n    return new MDCTextFieldCharacterCounterFoundation(\n      /** @type {!MDCTextFieldCharacterCounterAdapter} */ (Object.assign({\n        setContent: (content) => {\n          this.root_.textContent = content;\n        },\n      })));\n  }\n}\n\nexport {MDCTextFieldCharacterCounter, MDCTextFieldCharacterCounterFoundation};\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldCharacterCounterAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldCharacterCounterAdapter>}\n * @final\n */\nclass MDCTextFieldCharacterCounterFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldCharacterCounterAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldCharacterCounterAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldCharacterCounterAdapter} */ ({\n      setContent: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldCharacterCounterAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldCharacterCounterFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * @param {number} currentLength\n   * @param {number} maxLength\n   */\n  setCounterValue(currentLength, maxLength) {\n    currentLength = Math.min(currentLength, maxLength);\n    this.adapter_.setContent(`${currentLength} / ${maxLength}`);\n  }\n}\n\nexport default MDCTextFieldCharacterCounterFoundation;\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-text-field-character-counter',\n};\n\n/** @enum {string} */\nconst strings = {\n  ROOT_SELECTOR: `.${cssClasses.ROOT}`,\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Character Counter.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the TextField character counter into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldCharacterCounterAdapter {\n  /**\n   * Sets the text content of character counter element.\n   * @param {string} content\n   */\n  setContent(content) {}\n}\n\nexport default MDCTextFieldCharacterCounterAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n"],"names":["tslib_1.__extends","MDCComponent","MDCTextFieldCharacterCounter","root","foundation_","root_","textContent","content","setContent","Object","assign","MDCTextFieldCharacterCounterFoundation","MDCFoundation","adapter_","currentLength","maxLength","Math","min","defaultAdapter","adapter","strings","cssClasses","ROOT_SELECTOR","ROOT","MDCTextFieldCharacterCounterAdapter","dispatchEvent","evt","initCustomEvent","evtType","shouldBubble","evtData","document","createEvent","bubbles","detail","CustomEvent","removeEventListener","handler","addEventListener","destroy","Error","initialSyncWithDOM","init","foundation","undefined","getDefaultFoundation","initialize","args"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AYAA;;;;;;;;;;;;;;;;;;;;;;;;;;IA0BMY;;;;;;;wBAEoB;;;aAGf,EAAP;;;;;;wBAImB;;;aAGZ,EAAP;;;;;;wBAImB;;;aAGZ,EAAP;;;;;;wBAI0B;;;;aAInB,EAAP;;;;;;;;2BAMwB;QAAdO,OAAc,uEAAJ,EAAI;;;;;SAEnBN,QAAL,GAAgBM,OAAhB;;;;;2BAGK;;;;8BAIG;;;;;;;AD3CZ;;;;IAGMlB;;;;;;;;;;6BAKYE,MAAM;;;;;aAKb,IAAIF,YAAJ,CAAiBE,IAAjB,EAAuB,IAAIS,aAAJ,EAAvB,CAAP;;;;;;;;;;wBAQUT,IAAZ,EAAmD;QAAjCwC,UAAiC,uEAApBC,SAAoB;;;;;SAE5CvC,KAAL,GAAaF,IAAb;;sCAF2C4C,IAAM;MAANA,IAAM;;;SAG5CD,UAAL,aAAmBC,IAAnB,EAHiD;;;;;SAO5C3C,WAAL,GAAmBuC,UAAU,KAAKC,SAAf,GAA2B,KAAKC,oBAAL,EAA3B,GAAyDF,UAA5E;SACKvC,WAAL,CAAiBsC,IAAjB;SACKD,kBAAL;;;;;;;;;;;;;;;;;2CAYqB;;;YAGf,IAAID,KAAJ,CAAU,mFACd,kBADI,CAAN;;;;yCAImB;;;;;;;8BAOX;;;WAGHpC,WAAL,CAAiBmC,OAAjB;;;;;;;;;;;2BASKX,SAASS,SAAS;WAClBhC,KAAL,CAAWiC,gBAAX,CAA4BV,OAA5B,EAAqCS,OAArC;;;;;;;;;;;6BASOT,SAASS,SAAS;WACpBhC,KAAL,CAAW+B,mBAAX,CAA+BR,OAA/B,EAAwCS,OAAxC;;;;;;;;;;;;yBAUGT,SAASE,SAA+B;UAAtBD,YAAsB,uEAAP,KAAO;UACvCH,GAAJ;;UACI,OAAOS,WAAP,KAAuB,UAA3B,EAAuC;QACrCT,GAAG,GAAG,IAAIS,WAAJ,CAAgBP,OAAhB,EAAyB;UAC7BM,MAAM,EAAEJ,OADqB;UAE7BG,OAAO,EAAEJ;SAFL,CAAN;OADF,MAKO;QACLH,GAAG,GAAGK,QAAQ,CAACC,WAAT,CAAqB,aAArB,CAAN;QACAN,GAAG,CAACC,eAAJ,CAAoBC,OAApB,EAA6BC,YAA7B,EAA2C,KAA3C,EAAkDC,OAAlD;;;WAGGzB,KAAL,CAAWoB,aAAX,CAAyBC,GAAzB;;;;;;;AD9HJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmCMF;;;;;;;;;;;;;;+BAKOjB,SAAS;;;;;;ADxCtB;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAMc,UAAU,GAAG;EACjBE,IAAI,EAAE;CADR;;;AAKA,IAAMH,OAAO,GAAG;EACdE,aAAa,aAAMD,UAAU,CAACE,IAAjB;CADf;;ADFA;;;;;IAIMZ;;;;;;;;;wBAEoB;aACfU,UAAP;;;;;;wBAImB;aACZD,OAAP;;;;;;;;;;wBAQ0B;;;;UAExBZ,UAAU,EAAE,sBAAM;;;;;;;;;;kDAOVW,OAAZ,EAAqB;;;+GACbV,MAAM,CAACC,MAAP,CAAcC,sCAAsC,CAACO,cAArD,EAAqEC,OAArE,CADa;;;;;;;;;;oCAQLL,eAAeC,WAAW;MACxCD,aAAa,GAAGE,IAAI,CAACC,GAAL,CAASH,aAAT,EAAwBC,SAAxB,CAAhB;WACKF,QAAL,CAAcL,UAAd,WAA4BM,aAA5B,gBAA+CC,SAA/C;;;;;EAnCiDH;;ADHrD;;;;;IAIMV;;;;;;;;;;;;;;;;;2CAmBmB;;;aACd,IAAIS,sCAAJ;;MACgDF,MAAM,CAACC,MAAP,CAAc;QACjEF,UAAU,EAAE,oBAACD,OAAD,EAAa;UACvB,KAAI,CAACF,KAAL,CAAWC,WAAX,GAAyBC,OAAzB;;OAFiD,CADhD,CAAP;;;;;;;;wBARe;aACR,KAAKH,WAAZ;;;;;;;;;6BARcD,MAAM;aACb,IAAID,4BAAJ,CAAiCC,IAAjC,CAAP;;;;;EANuCF;;;;;;ADhC3C,AAQA,IAAA,mBAAA,kBAAA,YAAA;IAgBE,SAAF,mBAAA,CAAqB,UAAmC,EAAxD;QAAqB,IAArB,CAAA,UAA+B,GAAV,UAAU,CAAyB;KAAK;;;;IAR3D,mBAAF,CAAA,SAAA,CAAA,oBAAsB;;;IAApB,YAAF;QAAE,IAAF,KAAA,GAAA,IAAA,CAMG;;QALH,IAAU,OAAO,GAAQ;YACnB,UAAU;;;;YAAE,UAAC,OAAe,EAAlC,EAAuC,OAAA,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,WAAW,GAAG,OAAO,CAA1F,EAA0F,CAAA;SACrF,CAAL;QAEI,OAAO,IAAI,sCAAsC,CAAC,OAAO,CAAC,CAAC;KAC5D,CAAH;;;;IAIE,mBAAF,CAAA,SAAA,CAAA,WAAa;;;IAAX,YAAF;QACI,IAAI,CAAC,oBAAoB,EAAE,CAAC,OAAO,EAAE,CAAC;KACvC,CAAH;;QApBA,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,CAAX,QAAA,EAAA,uBAAA;oBACE,QAAQ,EAAE,qBAAZ;oBACE,IAAF,EAAA,EAAU,OAAV,EAAA,kCAAA,EAAA;oBACE,QAAQ,EAAE,2BAAZ;iBACA,EAAA,EAAA;KACA,CAAA;;;;;IAXA,OAAA,mBAAA,CAAA;;;;;;;;;;;;;;ADuBA,AAAA,SAAgB,eAAe,CAAuC,IAAO,EAA7E;IAEE,sBAAF,UAAA,MAAA,EAAA;QAAuBD,SAAvB,CAAA,OAAA,EAAA,MAAA,CAAA,CAA2B;QA0BvB,SAAJ,OAAA,GAAA;YAAgB,IAAhB,IAAA,GAAA,EAAA,CAA8B;YAA9B,KAAgB,IAAhB,EAAA,GAAA,CAA8B,EAAd,EAAhB,GAAA,SAAA,CAAA,MAA8B,EAAd,EAAhB,EAA8B,EAA9B;gBAAgB,IAAhB,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA,CAA8B;;YAA1B,IAAJ,KAAA,GAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EACe,IAAI,CADnB,IAAA,IAAA,CAEK;;;;YA1BD,KAAJ,CAAA,UAAc,GAAY,KAAK,CAAC;YAC5B,KAAJ,CAAA,QAAY,GAAY,KAAK,CAAC;;SAyBzB;;;;QArBD,OAAJ,CAAA,SAAA,CAAA,gBAAoB;;;QAAhB,YAAJ;;YACA,IAAY,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAtC;;YACA,IAAY,MAAM,GAAG,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,WAAW,CAA9D;;YACA,IAAY,OAAO,GAAG,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,yBAAyB,CAA9E;;YACA,IAAY,OAAO,GAAG,IAAI,CAAC,SAAS,sBAAG,IAAI,CAAC,SAAS,CAAC,OAAO,KAAkB,IAAI,CAAnF;;YACA,IAAY,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAA5D;YAEM,IAAI,QAAQ,KAAK,QAAQ,EAAE;gBACzB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;aAC5B;;;;YAKD,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAC7B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;aAC9C;SACF,CAAL;QAKE,OAAF,OAAG,CAAH;KAAG,CA7BoB,IAAI,CA6B3B,EAAI;CACH;;;;;;;;;AD7CD,AAAA,IAAA,iBAAA,kBAAA,YAAA;IAAA,SAAA,iBAAA,GAAA;KAKC;;;;;;IAHC,iBAAF,CAAA,SAAA,CAAA,YAAc;;;;;IAAZ,UAAa,OAA2B,EAAE,IAAwC,EAApF;QACI,OAAO,CAAC,EAAE,OAAO,IAAI,OAAO,CAAC,OAAO,KAAK,OAAO,CAAC,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KACxF,CAAH;;QAJA,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAE,UAAU,EAAE,MAAM,EAAE,EAAlC,EAAA;;;IAZA,OAAA,iBAAA,CAAA;CAiBC,EAAD,CAAA;;;;;;;;;;ADbA,AAAA,IAAA;;;;;IAAA,SAAA,mBAAA,GAAA;;;;QAEE,IAAF,CAAA,KAAO,GAAc,IAAI,CAAC;KAezB;IAAD,OAAA,mBAAC,CAAD;CAAC,EAAD,CAAA;;;;;;ADrBA,AAYA,IAAA,aAAA,kBAAA,YAAA;IAuCE,SAAF,aAAA,CAAqB,UAAmC,EAAxD;QAAqB,IAArB,CAAA,UAA+B,GAAV,UAAU,CAAyB;QA3BtD,IAAF,CAAA,gBAAkB,GAAY,KAAK,CAAC;QAY1B,IAAV,CAAA,WAAqB,GAAY,KAAK,CAAC;QAU7B,IAAV,CAAA,WAAqB,GAAY,KAAK,CAAC;KAKsB;IAvB3D,MAAF,CAAA,cAAA,CACM,aADN,CAAA,SAAA,EAAA,YACgB,EADhB;;;;QAAE,YAAF,EAC8B,OAAO,IAAI,CAAC,WAAW,CAAC,EAAE;;;;;QACtD,UAAe,KAAc,EAA/B;YACI,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;YACpC,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAClD;SACF;;;KANH,CAAA,CAAwD;IAStD,MAAF,CAAA,cAAA,CACM,aADN,CAAA,SAAA,EAAA,YACgB,EADhB;;;;QAAE,YAAF,EAC8B,OAAO,IAAI,CAAC,WAAW,CAAC,EAAE;;;;;QACtD,UAAe,KAAc,EAA/B;YACI,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;YACpC,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAClD;SACF;;;KANH,CAAA,CAAwD;;;;;;;IAsBtD,aAAF,CAAA,SAAA,CAAA,WAAa;;;;;IAAX,UAAY,YAAqB,EAAnC;QACI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;KAC5C,CAAH;;;;;;IAGE,aAAF,CAAA,SAAA,CAAA,kBAAoB;;;;IAAlB,YAAF;QACI,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;KACvC,CAAH;;;;;IAEE,aAAF,CAAA,SAAA,CAAA,IAAM;;;;IAAJ,UAAK,UAAe,EAAtB;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QACzD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAChD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACjD,CAAH;;;;;IAEE,aAAF,CAAA,SAAA,CAAA,kBAAoB;;;;IAAlB,UAAmB,SAAiB,EAAtC;QACI,mBAAA,IAAI,CAAC,kBAAkB,GAAE,aAAa,CAAC,SAAS,CAAC,GAAG,CAAI,SAAS,GAArE,cAAmF,CAAC,CAAC;KAClF,CAAH;;;;;IAEU,aAAV,CAAA,SAAA,CAAA,cAAwB;;;;IAAtB,YAAF;QAAE,IAAF,KAAA,GAAA,IAAA,CAQG;QAPC,OAAO;YACL,QAAQ;;;;YAAE,UAAC,SAAiB,EAAlC,EAAuC,OAAA,mBAAA,KAAI,CAAC,kBAAkB,GAAE,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAtG,EAAsG,CAAA;YAChG,WAAW;;;;YAAE,UAAC,SAAiB,EAArC,EAA0C,OAAA,mBAAA,KAAI,CAAC,kBAAkB,GAAE,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAA5G,EAA4G,CAAA;YACtG,QAAQ;;;;YAAE,UAAC,SAAiB,EAAlC,EAAuC,OAAA,mBAAA,KAAI,CAAC,kBAAkB,GAAE,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAA3G,EAA2G,CAAA;YACrG,OAAO;;;;;YAAE,UAAC,IAAY,EAAE,KAAa,EAA3C,EAAgD,OAAA,mBAAA,KAAI,CAAC,kBAAkB,GAAE,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAhH,EAAgH,CAAA;YAC1G,UAAU;;;;YAAE,UAAC,IAAY,EAA/B,EAAoC,OAAA,mBAAA,KAAI,CAAC,kBAAkB,GAAE,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAhG,EAAgG,CAAA;SAC3F,CAAC;KACH,CAAH;;QA5EA,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,CAAX,QAAA,EAAA,kHAAA;oBACE,QAAQ,EAAE,oCAAZ;oBACE,IAAF,EAAA,EAAU,OAAV,EAAA,4BAAA,EAAA;oBAEE,QAAQ,EAAE,gHAAZ;oBACE,eAAe,EAAE,uBAAnB,CAAA,MAAiD;oBAC/C,aAAF,EAAA,iBAAA,CAAA,IAAA;iBAEA,EAAA,EAAA;KACA,CAAA;;;;;IAlBA,aAAA,CAAA,cAAA,GAAA;;;QAuBA,UAAA,EAAA,CAAG,EAAH,IAAA,EAAA,KAAA,EAAA,CAAA;QAEA,kBAAA,EAAA,CAAG,EAAH,IAAA,EAAA,SAAA,EAAA,IAAA,EAAA,CAAA,YAAA,EAAA,EAAA,CAAA;QAUA,wBAAA,EAAQ,CAAR,EAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,CAAA;KAUA,CAAA;IACA,OAAA,aAAA,CAAA;;;;;;;ADjDA,AAsBA,IAAA,YAAA,kBAAA,YAAA;IAoCE,SAAF,YAAA,CACY,kBAAqC,EACrC,OAAe,EAChB,UAAmC,EAH9C;QACY,IAAZ,CAAA,kBAA8B,GAAlB,kBAAkB,CAAmB;QACrC,IAAZ,CAAA,OAAmB,GAAP,OAAO,CAAQ;QAChB,IAAX,CAAA,UAAqB,GAAV,UAAU,CAAyB;;;;QAxBpC,IAAV,CAAA,QAAkB,GAAG,IAAI,OAAO,EAAQ,CAAC;QAS/B,IAAV,CAAA,MAAgB,GAAY,KAAK,CAAC;QAOxB,IAAV,CAAA,SAAmB,GAAY,KAAK,CAAC;KAQc;IApBjD,MAAF,CAAA,cAAA,CACM,YADN,CAAA,SAAA,EAAA,OACW,EADX;;;;QAAE,YAAF,EACyB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE;;;;;QAC5C,UAAU,KAAc,EAA1B;YACI,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;SAChC;;;KAHH,CAAA,CAA8C;IAM5C,MAAF,CAAA,cAAA,CACM,YADN,CAAA,SAAA,EAAA,UACc,EADd;;;;QAAE,YAAF,EAC4B,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;;;;;QAClD,UAAa,KAAc,EAA7B;YACI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;SACnC;;;KAHH,CAAA,CAAoD;;;;IAclD,YAAF,CAAA,SAAA,CAAA,kBAAoB;;;IAAlB,YAAF;QAAE,IAAF,KAAA,GAAA,IAAA,CAqBG;QApBC,IAAI,IAAI,CAAC,QAAQ,EAAE;;YACvB,IAAY,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,CAA5D;YAEM,IAAI,OAAO,CAAC,kBAAkB,EAAE;gBAC9B,IAAI,OAAO,CAAC,kBAAkB,CAAC,OAAO,KAAK,OAAO,EAAE;oBAClD,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,kBAAkB,CAAC;oBACxC,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;wBACvC,mBAAA,IAAI,CAAC,KAAK,GAAE,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;wBACvD,IAAI,CAAC,cAAc,EAAE,CAAC;qBACvB;iBACF;aACF;SACF;;QAGD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC3E,SAAS;;;QAAC,YAAjB;YACQ,CAAC,KAAI,CAAC,iBAAiB,EAAE,OAAO;;;;YAAC,UAAA,UAAU,EAAnD;gBACU,OAAA,KAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,CAApD;aAAoD,EAAC,CAAC;SAC/C,EAAC,CAAC;KACN,CAAH;;;;IAEE,YAAF,CAAA,SAAA,CAAA,WAAa;;;IAAX,YAAF;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC1B,CAAH;;;;;;IAEU,YAAV,CAAA,SAAA,CAAA,yBAAmC;;;;;IAAjC,UAAkC,UAAyB,EAA7D;;QACA,IAAU,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAjC;QAEI,IAAI,OAAO,IAAI,OAAO,CAAC,WAAW,EAAE;YAClC,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;YAChC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;SACxC;KACF,CAAH;;;;;IAEU,YAAV,CAAA,SAAA,CAAA,cAAwB;;;;IAAtB,YAAF;QAAE,IAAF,KAAA,GAAA,IAAA,CAUG;QATC,IAAI,CAAC,OAAO,CAAC,iBAAiB;;;QAAC,YAAnC;YACM,OAAA,SAAS,oBAAa,KAAI,CAAC,KAAK,IAAG,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;iBACvE,SAAS;;;YAAC,YAAnB,EAAyB,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG;;;YAAC,YAA1C;gBACU,mBAAA,KAAI,CAAC,QAAQ,CAAC,MAAM,GAAE,cAAc,EAAE,CAAC;gBAEvC,IAAI,OAAO,qBAAqB,KAAK,WAAW,EAAE;oBAChD,qBAAqB;;;oBAAC,YAAlC,EAAwC,OAAA,mBAAA,KAAI,CAAC,QAAQ,CAAC,MAAM,GAAE,gBAAgB,EAAE,CAAhF,EAAgF,EAAC,CAAC;iBACvE;aACF,EAAC,CAAV,EAAU,EAAC,CAAX;SAAW,EAAC,CAAC;KACV,CAAH;;QAxFA,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,CAAX,QAAA,EAAA,gBAAA;oBACE,QAAQ,EAAE,cAAZ;oBACE,IAAF,EAAA;wBACA,mCAAA,EAAA,OAAA;wBACM,mCAAN,EAAA,UAAA;qBACA;oBACA,QAAA,EAAA,oGAAA;oBACA,aAAA,EAAA,iBAAA,CAAA,IAAA;oBACE,eAAF,EAAA,uBAAA,CAAA,MAAA;iBAEA,EAAA,EAAA;KACA,CAAA;;;;;QA/BA,EAAA,IAAA,EAAE,UAAF,EAAA;KAOA,CAAA,EAAA,CAAA;IAFA,YAAE,CAAF,cAAA,GAAA;;;QAkCA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAA,YAAA,EAAA,IAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,CAAA;QAOA,iBAAA,EAAG,CAAH,EAAA,IAAA,EAAA,eAAA,EAAA,IAAA,EAAA,CAAA,aAAA,EAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA;KAOA,CAAA;IACA,OAAA,YAAA,CAAA;;;;;;;ADxDA;AAOA,IAAM,uBAAuB,GAAG;IAC9B,mBAAmB;IACnB,YAAY;IACZ,aAAa;CACd,CAAD;AAEA,AAAA,IAAA,kBAAA,kBAAA,YAAA;IAAA,SAAA,kBAAA,GAAA;KAKmC;;QALnC,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,OAAO,EAAE,CAAC,uBAAuB,CAAC;oBAClC,YAAY,EAAE,CAAC,uBAAuB,CAAC;iBACxC,EAAD,EAAA;;IACkC,OAAlC,kBAAmC,CAAnC;CAAmC,EAAnC,CAAA;;;;;;;;;;;;;;"}