/**
 * @license
 * Copyright (c) 2018 Dominic Carretto
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE
 */
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular-mdc/web/common')) :
    typeof define === 'function' && define.amd ? define('@angular-mdc/web/image-list', ['exports', '@angular/core', '@angular-mdc/web/common'], factory) :
    (global = global || self, factory((global.ng = global.ng || {}, global.ng.web = global.ng.web || {}, global.ng.web.imageList = {}), global.ng.core, global.ng.web.common));
}(this, function (exports, core, common) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MdcImageListItem = /** @class */ (function () {
        function MdcImageListItem(elementRef) {
            this.elementRef = elementRef;
        }
        MdcImageListItem.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcImageListItem], mdc-image-list-item',
                        exportAs: 'mdcImageListItem',
                        host: { 'class': 'mdc-image-list__item' }
                    },] },
        ];
        /** @nocollapse */
        MdcImageListItem.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        return MdcImageListItem;
    }());
    var MdcImageListImageAspect = /** @class */ (function () {
        function MdcImageListImageAspect(elementRef) {
            this.elementRef = elementRef;
        }
        MdcImageListImageAspect.decorators = [
            { type: core.Component, args: [{selector: '[mdcImageListImageAspect], mdc-image-list-image-aspect',
                        exportAs: 'mdcImageListImageAspect',
                        template: "\n  <div class=\"mdc-image-list__image-aspect-container\">\n    <ng-content></ng-content>\n  </div>\n  ",
                        encapsulation: core.ViewEncapsulation.None
                    },] },
        ];
        /** @nocollapse */
        MdcImageListImageAspect.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        return MdcImageListImageAspect;
    }());
    var MdcImageListImage = /** @class */ (function () {
        function MdcImageListImage(elementRef) {
            this.elementRef = elementRef;
        }
        MdcImageListImage.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcImageListImage], mdc-image-list-image',
                        exportAs: 'mdcImageListImage',
                        host: { 'class': 'mdc-image-list__image' }
                    },] },
        ];
        /** @nocollapse */
        MdcImageListImage.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        return MdcImageListImage;
    }());
    var MdcImageListSupporting = /** @class */ (function () {
        function MdcImageListSupporting(elementRef) {
            this.elementRef = elementRef;
        }
        MdcImageListSupporting.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcImageListSupporting], mdc-image-list-supporting',
                        exportAs: 'mdcImageListSupporting',
                        host: { 'class': 'mdc-image-list__supporting' }
                    },] },
        ];
        /** @nocollapse */
        MdcImageListSupporting.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        return MdcImageListSupporting;
    }());
    var MdcImageListLabel = /** @class */ (function () {
        function MdcImageListLabel(elementRef) {
            this.elementRef = elementRef;
        }
        MdcImageListLabel.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcImageListLabel], mdc-image-list-label',
                        exportAs: 'mdcImageListLabel',
                        host: { 'class': 'mdc-image-list__label' }
                    },] },
        ];
        /** @nocollapse */
        MdcImageListLabel.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        return MdcImageListLabel;
    }());
    var MdcImageList = /** @class */ (function () {
        function MdcImageList(elementRef) {
            this.elementRef = elementRef;
            this._masonry = false;
            this._textProtection = false;
        }
        Object.defineProperty(MdcImageList.prototype, "masonry", {
            get: /**
             * @return {?}
             */
            function () { return this._masonry; },
            set: /**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                this._masonry = common.toBoolean(value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MdcImageList.prototype, "textProtection", {
            get: /**
             * @return {?}
             */
            function () { return this._textProtection; },
            set: /**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                this._textProtection = common.toBoolean(value);
            },
            enumerable: true,
            configurable: true
        });
        MdcImageList.decorators = [
            { type: core.Component, args: [{selector: '[mdc-image-list], mdc-image-list',
                        exportAs: 'mdcImageList',
                        host: {
                            'class': 'mdc-image-list',
                            '[class.mdc-image-list--masonry]': 'masonry',
                            '[class.mdc-image-list--with-text-protection]': 'textProtection'
                        },
                        template: '<ng-content></ng-content>',
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        encapsulation: core.ViewEncapsulation.None
                    },] },
        ];
        /** @nocollapse */
        MdcImageList.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        MdcImageList.propDecorators = {
            masonry: [{ type: core.Input }],
            textProtection: [{ type: core.Input }]
        };
        return MdcImageList;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var IMAGE_LIST_DECLARATIONS = [
        MdcImageList,
        MdcImageListImage,
        MdcImageListImageAspect,
        MdcImageListItem,
        MdcImageListLabel,
        MdcImageListSupporting
    ];
    var MdcImageListModule = /** @class */ (function () {
        function MdcImageListModule() {
        }
        MdcImageListModule.decorators = [
            { type: core.NgModule, args: [{
                        exports: IMAGE_LIST_DECLARATIONS,
                        declarations: IMAGE_LIST_DECLARATIONS,
                    },] },
        ];
        return MdcImageListModule;
    }());

    exports.MdcImageListModule = MdcImageListModule;
    exports.MdcImageListItem = MdcImageListItem;
    exports.MdcImageListImageAspect = MdcImageListImageAspect;
    exports.MdcImageListImage = MdcImageListImage;
    exports.MdcImageListSupporting = MdcImageListSupporting;
    exports.MdcImageListLabel = MdcImageListLabel;
    exports.MdcImageList = MdcImageList;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=web-image-list.umd.js.map
