{"version":3,"file":"web-card.umd.js","sources":["../../packages/card/card-module.ts","../../packages/card/card.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  MdcCard,\r\n  MdcCardAction,\r\n  MdcCardActionButtons,\r\n  MdcCardActionIcons,\r\n  MdcCardActions,\r\n  MdcCardMedia,\r\n  MdcCardMediaContent,\r\n  MdcCardPrimaryAction\r\n} from './card';\r\n\r\nconst CARD_DECLARATIONS = [\r\n  MdcCard,\r\n  MdcCardAction,\r\n  MdcCardActionButtons,\r\n  MdcCardActionIcons,\r\n  MdcCardActions,\r\n  MdcCardMedia,\r\n  MdcCardMediaContent,\r\n  MdcCardPrimaryAction\r\n];\r\n\r\n@NgModule({\r\n  exports: CARD_DECLARATIONS,\r\n  declarations: CARD_DECLARATIONS,\r\n})\r\nexport class MdcCardModule { }\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { toBoolean } from '@angular-mdc/web/common';\r\nimport { MdcRipple } from '@angular-mdc/web/ripple';\r\n\r\n@Directive({\r\n  selector: 'mdc-card-media-content, [mdcCardMediaContent]',\r\n  exportAs: 'mdcCardMediaContent',\r\n  host: { 'class': 'mdc-card__media-content' }\r\n})\r\nexport class MdcCardMediaContent {\r\n  constructor(public elementRef: ElementRef<HTMLElement>) { }\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mdc-card-media, [mdcCardMedia]',\r\n  exportAs: 'mdcCardMedia',\r\n  host: {\r\n    'class': 'mdc-card__media',\r\n    '[class.mdc-card__media--square]': 'square',\r\n    '[class.mdc-card__media--16-9]': 'wide'\r\n  },\r\n  template: '<ng-content></ng-content>',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MdcCardMedia {\r\n  @Input()\r\n  get square(): boolean { return this._square; }\r\n  set square(value: boolean) {\r\n    this._square = toBoolean(value);\r\n  }\r\n  private _square: boolean = false;\r\n\r\n  @Input()\r\n  get wide(): boolean { return this._wide; }\r\n  set wide(value: boolean) {\r\n    this._wide = toBoolean(value);\r\n  }\r\n  private _wide: boolean = false;\r\n\r\n  constructor(public elementRef: ElementRef<HTMLElement>) { }\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mdc-card-primary-action, [mdcCardPrimaryAction]',\r\n  exportAs: 'mdcCardPrimaryAction',\r\n  host: { 'class': 'mdc-card__primary-action' },\r\n  template: '<ng-content></ng-content>',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [MdcRipple]\r\n})\r\nexport class MdcCardPrimaryAction implements OnDestroy {\r\n  constructor(\r\n    private _ripple: MdcRipple,\r\n    public elementRef: ElementRef<HTMLElement>) {\r\n\r\n    this._ripple.init({ surface: this.elementRef.nativeElement });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._ripple.destroy();\r\n  }\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mdc-card-actions, [mdcCardActions]',\r\n  template: '<ng-content></ng-content>',\r\n  exportAs: 'mdcCardActions',\r\n  host: {\r\n    'class': 'mdc-card__actions',\r\n    '[class.mdc-card__actions--full-bleed]': 'fullBleed'\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MdcCardActions {\r\n  @Input()\r\n  get fullBleed(): boolean { return this._fullBleed; }\r\n  set fullBleed(value: boolean) {\r\n    this._fullBleed = toBoolean(value);\r\n  }\r\n  private _fullBleed: boolean = false;\r\n\r\n  constructor(public elementRef: ElementRef<HTMLElement>) { }\r\n}\r\n\r\n@Directive({\r\n  selector: 'mdc-card-action-buttons, [mdcCardActionButtons]',\r\n  exportAs: 'mdcCardActionButtons',\r\n  host: { 'class': 'mdc-card__action-buttons' }\r\n})\r\nexport class MdcCardActionButtons {\r\n  constructor(public elementRef: ElementRef<HTMLElement>) { }\r\n}\r\n\r\n@Directive({\r\n  selector: 'mdc-card-action-icons, [mdcCardActionIcons]',\r\n  exportAs: 'mdcCardActionIcons',\r\n  host: { 'class': 'mdc-card__action-icons' }\r\n})\r\nexport class MdcCardActionIcons {\r\n  constructor(public elementRef: ElementRef<HTMLElement>) { }\r\n}\r\n\r\n@Directive({\r\n  selector: '[mdcCardAction]',\r\n  host: { 'class': 'mdc-card__action' }\r\n})\r\nexport class MdcCardAction {\r\n  @Input('mdcCardAction')\r\n  get action(): string { return this._action; }\r\n  set action(action: string) {\r\n    // If the directive is set without a name (updated programatically), then this setter will\r\n    // trigger with an empty string and should not overwrite the programatically set value.\r\n    if (!action) { return; }\r\n\r\n    if (action === 'button') {\r\n      this.elementRef.nativeElement.classList.remove('mdc-card__action--icon');\r\n      this.elementRef.nativeElement.classList.add('mdc-card__action--button');\r\n    } else if (action === 'icon') {\r\n      this.elementRef.nativeElement.classList.remove('mdc-card__action--button');\r\n      this.elementRef.nativeElement.classList.add('mdc-card__action--icon');\r\n      this.elementRef.nativeElement.setAttribute('tabIndex', '0');\r\n      this.elementRef.nativeElement.setAttribute('role', 'button');\r\n    }\r\n    this._action = action;\r\n  }\r\n  private _action: string = '';\r\n\r\n  constructor(public elementRef: ElementRef<HTMLElement>) { }\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mdc-card',\r\n  exportAs: 'mdcCard',\r\n  host: {\r\n    'class': 'mdc-card',\r\n    '[class.mdc-card--outlined]': 'outlined'\r\n  },\r\n  template: '<ng-content></ng-content>',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MdcCard {\r\n  @Input()\r\n  get outlined(): boolean { return this._outlined; }\r\n  set outlined(value: boolean) {\r\n    this._outlined = toBoolean(value);\r\n  }\r\n  private _outlined: boolean = false;\r\n\r\n  constructor(public elementRef: ElementRef<HTMLElement>) { }\r\n}\r\n"],"names":["NgModule","Input","ElementRef","ChangeDetectionStrategy","ViewEncapsulation","Component","toBoolean","Directive","MdcRipple"],"mappings":"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"}