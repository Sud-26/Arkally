{"version":3,"file":"web-portal.umd.js","sources":["../../packages/portal/portal-injector.ts","../../packages/portal/portal-directives.ts","../../packages/portal/dom-portal-outlet.ts","../../packages/portal/portal.ts","../../packages/portal/portal-errors.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Injector } from '@angular/core';\r\n\r\n/**\r\n * Custom injector to be used when providing custom\r\n * injection tokens to components inside a portal.\r\n * @docs-private\r\n */\r\nexport class PortalInjector implements Injector {\r\n  constructor(\r\n    private _parentInjector: Injector,\r\n    private _customTokens: WeakMap<any, any>) { }\r\n\r\n  get(token: any, notFoundValue?: any): any {\r\n    const value = this._customTokens.get(token);\r\n\r\n    if (typeof value !== 'undefined') {\r\n      return value;\r\n    }\r\n\r\n    return this._parentInjector.get<any>(token, notFoundValue);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  EventEmitter,\r\n  NgModule,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { BasePortalOutlet, ComponentPortal, Portal, TemplatePortal } from './portal';\r\n\r\n/**\r\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\r\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\r\n */\r\n@Directive({\r\n  selector: '[cdk-portal], [cdkPortal], [portal]',\r\n  exportAs: 'cdkPortal',\r\n})\r\nexport class CdkPortal extends TemplatePortal {\r\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\r\n    super(templateRef, viewContainerRef);\r\n  }\r\n}\r\n\r\n/**\r\n * Possible attached references to the CdkPortalOutlet.\r\n */\r\nexport type CdkPortalOutletAttachedRef = ComponentRef<any> | EmbeddedViewRef<any> | null;\r\n\r\n/**\r\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\r\n * directly attached to it, enabling declarative use.\r\n *\r\n * Usage:\r\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\r\n */\r\n@Directive({\r\n  selector: '[cdkPortalOutlet], [cdkPortalHost], [portalHost]',\r\n  exportAs: 'cdkPortalOutlet, cdkPortalHost',\r\n  inputs: ['portal: cdkPortalOutlet']\r\n})\r\nexport class CdkPortalOutlet extends BasePortalOutlet implements OnInit, OnDestroy {\r\n  /** Whether the portal component is initialized. */\r\n  private _isInitialized = false;\r\n\r\n  /** Reference to the currently-attached component/view ref. */\r\n  private _attachedRef: CdkPortalOutletAttachedRef = null;\r\n\r\n  constructor(\r\n    private _componentFactoryResolver: ComponentFactoryResolver,\r\n    private _viewContainerRef: ViewContainerRef) {\r\n    super();\r\n  }\r\n\r\n  /** Portal associated with the Portal outlet. */\r\n  get portal(): Portal<any> | null {\r\n    return this._attachedPortal;\r\n  }\r\n\r\n  set portal(portal: Portal<any> | null) {\r\n    // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\r\n    // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\r\n    // and attach a portal programmatically in the parent component. When Angular does the first CD\r\n    // round, it will fire the setter with empty string, causing the user's content to be cleared.\r\n    if (this.hasAttached() && !portal && !this._isInitialized) {\r\n      return;\r\n    }\r\n\r\n    if (this.hasAttached()) {\r\n      super.detach();\r\n    }\r\n\r\n    if (portal) {\r\n      super.attach(portal);\r\n    }\r\n\r\n    this._attachedPortal = portal;\r\n  }\r\n\r\n  /** Emits when a portal is attached to the outlet. */\r\n  @Output() attached: EventEmitter<CdkPortalOutletAttachedRef> =\r\n    new EventEmitter<CdkPortalOutletAttachedRef>();\r\n\r\n  /** Component or view reference that is attached to the portal. */\r\n  get attachedRef(): CdkPortalOutletAttachedRef {\r\n    return this._attachedRef;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._isInitialized = true;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.dispose();\r\n    this._attachedPortal = null;\r\n    this._attachedRef = null;\r\n  }\r\n\r\n  /**\r\n   * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\r\n   *\r\n   * @param portal Portal to be attached to the portal outlet.\r\n   * @returns Reference to the created component.\r\n   */\r\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\r\n    portal.setAttachedHost(this);\r\n\r\n    // If the portal specifies an origin, use that as the logical location of the component\r\n    // in the application tree. Otherwise use the location of this PortalOutlet.\r\n    const viewContainerRef = portal.viewContainerRef != null ?\r\n      portal.viewContainerRef :\r\n      this._viewContainerRef;\r\n\r\n    const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\r\n    const componentFactory = resolver.resolveComponentFactory(portal.component);\r\n    const ref = viewContainerRef.createComponent(\r\n      componentFactory, viewContainerRef.length,\r\n      portal.injector || viewContainerRef.injector);\r\n\r\n    super.setDisposeFn(() => ref.destroy());\r\n    this._attachedPortal = portal;\r\n    this._attachedRef = ref;\r\n    this.attached.emit(ref);\r\n\r\n    return ref;\r\n  }\r\n\r\n  /**\r\n   * Attach the given TemplatePortal to this PortlHost as an embedded View.\r\n   * @param portal Portal to be attached.\r\n   * @returns Reference to the created embedded view.\r\n   */\r\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\r\n    portal.setAttachedHost(this);\r\n    const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\r\n    super.setDisposeFn(() => this._viewContainerRef.clear());\r\n\r\n    this._attachedPortal = portal;\r\n    this._attachedRef = viewRef;\r\n    this.attached.emit(viewRef);\r\n\r\n    return viewRef;\r\n  }\r\n}\r\n\r\n\r\n@NgModule({\r\n  exports: [CdkPortal, CdkPortalOutlet],\r\n  declarations: [CdkPortal, CdkPortalOutlet],\r\n})\r\nexport class PortalModule { }\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  EmbeddedViewRef,\r\n  ApplicationRef,\r\n  Injector,\r\n} from '@angular/core';\r\nimport { BasePortalOutlet, ComponentPortal, TemplatePortal } from './portal';\r\n\r\n/**\r\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\r\n * application context.\r\n */\r\nexport class DomPortalOutlet extends BasePortalOutlet {\r\n  constructor(\r\n    /** Element into which the content is projected. */\r\n    public outletElement: Element,\r\n    private _componentFactoryResolver: ComponentFactoryResolver,\r\n    private _appRef: ApplicationRef,\r\n    private _defaultInjector: Injector) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\r\n   * @param portal Portal to be attached\r\n   * @returns Reference to the created component.\r\n   */\r\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\r\n    const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\r\n    const componentFactory = resolver.resolveComponentFactory(portal.component);\r\n    let componentRef: ComponentRef<T>;\r\n\r\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\r\n    // for the component (in terms of Angular's component tree, not rendering).\r\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\r\n    // and then manually attach the view to the application.\r\n    if (portal.viewContainerRef) {\r\n      componentRef = portal.viewContainerRef.createComponent(\r\n        componentFactory,\r\n        portal.viewContainerRef.length,\r\n        portal.injector || portal.viewContainerRef.injector);\r\n\r\n      this.setDisposeFn(() => componentRef.destroy());\r\n    } else {\r\n      componentRef = componentFactory.create(portal.injector || this._defaultInjector);\r\n      this._appRef.attachView(componentRef.hostView);\r\n      this.setDisposeFn(() => {\r\n        this._appRef.detachView(componentRef.hostView);\r\n        componentRef.destroy();\r\n      });\r\n    }\r\n    // At this point the component has been instantiated, so we move it to the location in the DOM\r\n    // where we want it to be rendered.\r\n    this.outletElement.appendChild(this._getComponentRootNode(componentRef));\r\n\r\n    return componentRef;\r\n  }\r\n\r\n  /**\r\n   * Attaches a template portal to the DOM as an embedded view.\r\n   * @param portal Portal to be attached.\r\n   * @returns Reference to the created embedded view.\r\n   */\r\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\r\n    const viewContainer = portal.viewContainerRef;\r\n    const viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\r\n    viewRef.detectChanges();\r\n\r\n    // The method `createEmbeddedView` will add the view as a child of the viewContainer.\r\n    // But for the DomPortalOutlet the view can be added everywhere in the DOM\r\n    // (e.g Overlay Container) To move the view to the specified host element. We just\r\n    // re-append the existing root nodes.\r\n    viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\r\n\r\n    this.setDisposeFn((() => {\r\n      const index = viewContainer.indexOf(viewRef);\r\n      if (index !== -1) {\r\n        viewContainer.remove(index);\r\n      }\r\n    }));\r\n\r\n    // TODO(jelbourn): Return locals from view.\r\n    return viewRef;\r\n  }\r\n\r\n  /**\r\n   * Clears out a portal from the DOM.\r\n   */\r\n  dispose(): void {\r\n    super.dispose();\r\n    if (this.outletElement.parentNode != null) {\r\n      this.outletElement.parentNode.removeChild(this.outletElement);\r\n    }\r\n  }\r\n\r\n  /** Gets the root HTMLElement for an instantiated component. */\r\n  private _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\r\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  ElementRef,\r\n  ComponentRef,\r\n  EmbeddedViewRef,\r\n  Injector,\r\n  ComponentFactoryResolver,\r\n} from '@angular/core';\r\nimport {\r\n  throwNullPortalOutletError,\r\n  throwPortalAlreadyAttachedError,\r\n  throwNoPortalAttachedError,\r\n  throwNullPortalError,\r\n  throwPortalOutletAlreadyDisposedError,\r\n  throwUnknownPortalTypeError\r\n} from './portal-errors';\r\n\r\n/** Interface that can be used to generically type a class. */\r\nexport interface ComponentType<T> {\r\n  new(...args: any[]): T;\r\n}\r\n\r\n/**\r\n * A `Portal` is something that you want to render somewhere else.\r\n * It can be attach to / detached from a `PortalOutlet`.\r\n */\r\nexport abstract class Portal<T> {\r\n  _attachedHost: PortalOutlet | null = null;\r\n\r\n  /** Attach this portal to a host. */\r\n  attach(host: PortalOutlet): T {\r\n    if (host == null) {\r\n      throwNullPortalOutletError();\r\n    }\r\n\r\n    if (host.hasAttached()) {\r\n      throwPortalAlreadyAttachedError();\r\n    }\r\n    return <T>host.attach(this);\r\n  }\r\n\r\n  /** Detach this portal from its host */\r\n  detach(): void {\r\n    const host = this._attachedHost;\r\n\r\n    if (host == null) {\r\n      throwNoPortalAttachedError();\r\n    } else {\r\n      this._attachedHost = null;\r\n      host.detach();\r\n    }\r\n  }\r\n\r\n  /** Whether this portal is attached to a host. */\r\n  get isAttached(): boolean {\r\n    return !!this._attachedHost;\r\n  }\r\n\r\n  /**\r\n   * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\r\n   * the PortalOutlet when it is performing an `attach()` or `detach()`.\r\n   */\r\n  setAttachedHost(host: PortalOutlet | null) {\r\n    this._attachedHost = host;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\r\n */\r\nexport class ComponentPortal<T> extends Portal<ComponentRef<T>> {\r\n  /** The type of the component that will be instantiated for attachment. */\r\n  component: ComponentType<T>;\r\n\r\n  /**\r\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\r\n   * This is different from where the component *renders*, which is determined by the PortalOutlet.\r\n   * The origin is necessary when the host is outside of the Angular application context.\r\n   */\r\n  viewContainerRef?: ViewContainerRef | null;\r\n\r\n  /** [Optional] Injector used for the instantiation of the component. */\r\n  injector?: Injector | null;\r\n\r\n  /**\r\n   * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\r\n   * Defaults to using the resolver from the outlet that the portal is attached to.\r\n   */\r\n  componentFactoryResolver?: ComponentFactoryResolver | null;\r\n\r\n  constructor(\r\n    component: ComponentType<T>,\r\n    viewContainerRef?: ViewContainerRef | null,\r\n    injector?: Injector | null,\r\n    componentFactoryResolver?: ComponentFactoryResolver | null) {\r\n    super();\r\n    this.component = component;\r\n    this.viewContainerRef = viewContainerRef;\r\n    this.injector = injector;\r\n    this.componentFactoryResolver = componentFactoryResolver;\r\n  }\r\n}\r\n\r\n/**\r\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\r\n */\r\nexport class TemplatePortal<C = any> extends Portal<C> {\r\n  /** The embedded template that will be used to instantiate an embedded View in the host. */\r\n  templateRef: TemplateRef<C>;\r\n\r\n  /** Reference to the ViewContainer into which the template will be stamped out. */\r\n  viewContainerRef: ViewContainerRef;\r\n\r\n  /** Contextual data to be passed in to the embedded view. */\r\n  context: C | undefined;\r\n\r\n  constructor(template: TemplateRef<C>, viewContainerRef: ViewContainerRef, context?: C) {\r\n    super();\r\n    this.templateRef = template;\r\n    this.viewContainerRef = viewContainerRef;\r\n    this.context = context;\r\n  }\r\n\r\n  get origin(): ElementRef {\r\n    return this.templateRef.elementRef;\r\n  }\r\n\r\n  /**\r\n   * Attach the portal to the provided `PortalOutlet`.\r\n   * When a context is provided it will override the `context` property of the `TemplatePortal`\r\n   * instance.\r\n   */\r\n  attach(host: PortalOutlet, context: C | undefined = this.context): C {\r\n    this.context = context;\r\n    return super.attach(host);\r\n  }\r\n\r\n  detach(): void {\r\n    this.context = undefined;\r\n    return super.detach();\r\n  }\r\n}\r\n\r\n\r\n/** A `PortalOutlet` is an space that can contain a single `Portal`. */\r\nexport interface PortalOutlet {\r\n  /** Attaches a portal to this outlet. */\r\n  attach(portal: Portal<any>): any;\r\n\r\n  /** Detaches the currently attached portal from this outlet. */\r\n  detach(): any;\r\n\r\n  /** Performs cleanup before the outlet is destroyed. */\r\n  dispose(): void;\r\n\r\n  /** Whether there is currently a portal attached to this outlet. */\r\n  hasAttached(): boolean;\r\n}\r\n\r\n\r\n/**\r\n * Partial implementation of PortalOutlet that handles attaching\r\n * ComponentPortal and TemplatePortal.\r\n */\r\nexport abstract class BasePortalOutlet implements PortalOutlet {\r\n  /** The portal currently attached to the host. */\r\n  protected _attachedPortal: Portal<any> | null = null;\r\n\r\n  /** A function that will permanently dispose this host. */\r\n  private _disposeFn: (() => void) | null = null;\r\n\r\n  /** Whether this host has already been permanently disposed. */\r\n  private _isDisposed: boolean = false;\r\n\r\n  /** Whether this host has an attached portal. */\r\n  hasAttached(): boolean {\r\n    return !!this._attachedPortal;\r\n  }\r\n\r\n  attach<T>(portal: ComponentPortal<T>): ComponentRef<T>;\r\n  attach<T>(portal: TemplatePortal<T>): EmbeddedViewRef<T>;\r\n  attach(portal: any): any;\r\n\r\n  /** Attaches a portal. */\r\n  attach(portal: Portal<any>): any {\r\n    if (!portal) {\r\n      throwNullPortalError();\r\n    }\r\n\r\n    if (this.hasAttached()) {\r\n      throwPortalAlreadyAttachedError();\r\n    }\r\n\r\n    if (this._isDisposed) {\r\n      throwPortalOutletAlreadyDisposedError();\r\n    }\r\n\r\n    if (portal instanceof ComponentPortal) {\r\n      this._attachedPortal = portal;\r\n      portal._attachedHost = this;\r\n      return this.attachComponentPortal(portal);\r\n    } else if (portal instanceof TemplatePortal) {\r\n      this._attachedPortal = portal;\r\n      portal._attachedHost = this;\r\n      return this.attachTemplatePortal(portal);\r\n    }\r\n\r\n    throwUnknownPortalTypeError();\r\n  }\r\n\r\n  abstract attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T>;\r\n\r\n  abstract attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C>;\r\n\r\n  /** Detaches a previously attached portal. */\r\n  detach(): void {\r\n    if (this._attachedPortal) {\r\n      this._attachedPortal.setAttachedHost(null);\r\n      this._attachedPortal = null;\r\n    }\r\n\r\n    this._invokeDisposeFn();\r\n  }\r\n\r\n  /** Permanently dispose of this portal host. */\r\n  dispose(): void {\r\n    if (this.hasAttached()) {\r\n      this.detach();\r\n    }\r\n\r\n    this._invokeDisposeFn();\r\n    this._isDisposed = true;\r\n  }\r\n\r\n  /** @docs-private */\r\n  setDisposeFn(fn: () => void) {\r\n    this._disposeFn = fn;\r\n  }\r\n\r\n  private _invokeDisposeFn() {\r\n    if (this._disposeFn) {\r\n      this._disposeFn();\r\n      this._disposeFn = null;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Throws an exception when attempting to attach a null portal to a host.\r\n * @docs-private\r\n */\r\nexport function throwNullPortalError() {\r\n  throw Error('Must provide a portal to attach');\r\n}\r\n\r\n/**\r\n * Throws an exception when attempting to attach a portal to a host that is already attached.\r\n * @docs-private\r\n */\r\nexport function throwPortalAlreadyAttachedError() {\r\n  throw Error('Host already has a portal attached');\r\n}\r\n\r\n/**\r\n * Throws an exception when attempting to attach a portal to an already-disposed host.\r\n * @docs-private\r\n */\r\nexport function throwPortalOutletAlreadyDisposedError() {\r\n  throw Error('This PortalOutlet has already been disposed');\r\n}\r\n\r\n/**\r\n * Throws an exception when attempting to attach an unknown portal type.\r\n * @docs-private\r\n */\r\nexport function throwUnknownPortalTypeError() {\r\n  throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\r\n    'a ComponentPortal or a TemplatePortal.');\r\n}\r\n\r\n/**\r\n * Throws an exception when attempting to attach a portal to a null host.\r\n * @docs-private\r\n */\r\nexport function throwNullPortalOutletError() {\r\n  throw Error('Attempting to attach a portal to a null PortalOutlet');\r\n}\r\n\r\n/**\r\n * Throws an exception when attempting to detach a portal that is not attached.\r\n * @docs-private\r\n */\r\nexport function throwNoPortalAttachedError() {\r\n  throw Error('Attempting to detach a portal that is not attached to a host');\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"],"names":["NgModule","Output","ViewContainerRef","ComponentFactoryResolver","Directive","EventEmitter","tslib_1.__extends","TemplateRef","d","prototype","b","Object","create","__","constructor","extendStatics","__extends","hasOwnProperty","p","__proto__","Array","setPrototypeOf"],"mappings":"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"}