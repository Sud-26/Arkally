{"version":3,"file":"web-list.umd.js","sources":["../../packages/list/list-module.ts","../../packages/list/list-divider.ts","../../packages/list/list.ts","../../node_modules/@material/list/index.js","../../node_modules/@material/list/foundation.js","../../node_modules/@material/list/adapter.js","../../node_modules/@material/base/component.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/dom/ponyfill.js","../../node_modules/@material/list/constants.js","../../packages/list/list-item.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MdcListDivider } from './list-divider';\r\nimport {\r\n  MdcList,\r\n  MdcListGroup,\r\n  MdcListGroupSubheader\r\n} from './list';\r\nimport {\r\n  MdcListItem,\r\n  MdcListItemGraphic,\r\n  MdcListItemMeta,\r\n  MdcListItemSecondary,\r\n  MdcListItemText\r\n} from './list-item';\r\n\r\nconst LIST_DECLARATIONS = [\r\n  MdcList,\r\n  MdcListDivider,\r\n  MdcListGroup,\r\n  MdcListGroupSubheader,\r\n  MdcListItem,\r\n  MdcListItemGraphic,\r\n  MdcListItemMeta,\r\n  MdcListItemSecondary,\r\n  MdcListItemText\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: LIST_DECLARATIONS,\r\n  declarations: LIST_DECLARATIONS,\r\n})\r\nexport class MdcListModule { }\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { toBoolean } from '@angular-mdc/web/common';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: '[mdcListDivider], mdc-list-divider',\r\n  exportAs: 'mdcListDivider',\r\n  host: {\r\n    'role': 'separator',\r\n    'class': 'mdc-list-divider',\r\n    '[class.mdc-list-divider--inset]': 'inset',\r\n    '[class.mdc-list-divider--padded]': 'padded'\r\n  },\r\n  template: '',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MdcListDivider {\r\n  @Input()\r\n  get inset(): boolean { return this._inset; }\r\n  set inset(value: boolean) {\r\n    this._inset = toBoolean(value);\r\n  }\r\n  private _inset: boolean = false;\r\n\r\n  @Input()\r\n  get padded(): boolean { return this._padded; }\r\n  set padded(value: boolean) {\r\n    this._padded = toBoolean(value);\r\n  }\r\n  private _padded: boolean = false;\r\n\r\n  constructor(public elementRef: ElementRef) { }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { merge, Observable, Subscription } from 'rxjs';\r\nimport { startWith } from 'rxjs/operators';\r\n\r\nimport { toBoolean, Platform } from '@angular-mdc/web/common';\r\n\r\nimport { MdcListItem, MdcListSelectionChange, MDC_LIST_PARENT_COMPONENT } from './list-item';\r\n\r\nimport { cssClasses, strings } from '@material/list/constants';\r\nimport { matches } from '@material/dom/ponyfill';\r\nimport { MDCListFoundation } from '@material/list/index';\r\n\r\n/** Change event that is being fired whenever the selected state of an option changes. */\r\nexport class MdcListItemChange {\r\n  constructor(\r\n    /** Reference to the selection list that emitted the event. */\r\n    public source: MdcList,\r\n    /** Reference to the option that has been changed. */\r\n    public option: MdcListItem) { }\r\n}\r\n\r\n/** Notifies user action on list item including keyboard and mouse actions. */\r\nexport interface MdcListItemAction {\r\n  index: number;\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: '[mdcListGroup], mdc-list-group',\r\n  exportAs: 'mdcListGroup',\r\n  host: { 'class': 'mdc-list-group' },\r\n  template: `\r\n  <h3 class=\"mdc-list-group__subheader\" *ngIf=\"subheader\">{{subheader}}</h3>\r\n  <ng-content></ng-content>`,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MdcListGroup {\r\n  @Input() subheader?: string;\r\n\r\n  constructor(public elementRef: ElementRef) { }\r\n}\r\n\r\n@Directive({\r\n  selector: '[mdcListGroupSubheader], mdc-list-group-subheader',\r\n  exportAs: 'mdcListGroupSubheader',\r\n  host: { 'class': 'mdc-list-group__subheader' }\r\n})\r\nexport class MdcListGroupSubheader {\r\n  constructor(public elementRef: ElementRef) { }\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mdc-list',\r\n  exportAs: 'mdcList',\r\n  host: {\r\n    'role': 'list',\r\n    'class': 'mdc-list',\r\n    '[attr.aria-orientation]': 'verticalOrientation ? \"vertical\" : \"horizontal\"',\r\n    '[class.mdc-list--dense]': 'dense',\r\n    '[class.mdc-list--avatar-list]': 'avatar',\r\n    '[class.ngx-mdc-list--border]': 'border',\r\n    '[class.mdc-list--non-interactive]': '!interactive',\r\n    '[class.mdc-list--two-line]': 'twoLine',\r\n    '(click)': '_handleClickEvent($event)',\r\n    '(keydown)': '_onKeydown($event)',\r\n    '(focusin)': '_onFocusIn($event)',\r\n    '(focusout)': '_onFocusOut($event)'\r\n  },\r\n  template: '<ng-content></ng-content>',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [{ provide: MDC_LIST_PARENT_COMPONENT, useExisting: MdcList }]\r\n})\r\nexport class MdcList implements AfterViewInit, OnDestroy {\r\n  @Input()\r\n  get twoLine(): boolean { return this._twoLine; }\r\n  set twoLine(value: boolean) {\r\n    this._twoLine = toBoolean(value);\r\n  }\r\n  private _twoLine: boolean = false;\r\n\r\n  @Input()\r\n  get dense(): boolean { return this._dense; }\r\n  set dense(value: boolean) {\r\n    this._dense = toBoolean(value);\r\n  }\r\n  private _dense: boolean = false;\r\n\r\n  @Input()\r\n  get border(): boolean { return this._border; }\r\n  set border(value: boolean) {\r\n    this._border = toBoolean(value);\r\n  }\r\n  private _border: boolean = false;\r\n\r\n  @Input()\r\n  get avatar(): boolean { return this._avatar; }\r\n  set avatar(value: boolean) {\r\n    this._avatar = toBoolean(value);\r\n  }\r\n  private _avatar: boolean = false;\r\n\r\n  @Input()\r\n  get interactive(): boolean { return this._interactive; }\r\n  set interactive(value: boolean) {\r\n    const newValue = toBoolean(value);\r\n    if (newValue !== this._interactive) {\r\n      this._interactive = newValue;\r\n    }\r\n  }\r\n  private _interactive: boolean = true;\r\n\r\n  @Input()\r\n  get disableRipple(): boolean { return this._disableRipple; }\r\n  set disableRipple(value: boolean) {\r\n    const newValue = toBoolean(value);\r\n    if (newValue !== this._disableRipple) {\r\n      this._disableRipple = newValue;\r\n    }\r\n  }\r\n  private _disableRipple: boolean = false;\r\n\r\n  @Input()\r\n  get singleSelection(): boolean | undefined { return this._singleSelection; }\r\n  set singleSelection(value: boolean | undefined) {\r\n    if (value !== undefined) {\r\n      const newValue = toBoolean(value);\r\n\r\n      if (newValue !== this._singleSelection) {\r\n        this._singleSelection = newValue;\r\n        this._foundation.setSingleSelection(this._singleSelection);\r\n\r\n        if (this.getSelectedIndex() > -1) {\r\n          this.setSelectedIndex(this.getSelectedIndex());\r\n        }\r\n        this._changeDetectorRef.markForCheck();\r\n      }\r\n    }\r\n  }\r\n  private _singleSelection: boolean | undefined;\r\n\r\n  @Input()\r\n  get useActivatedClass(): boolean { return this._useActivatedClass; }\r\n  set useActivatedClass(value: boolean) {\r\n    this._useActivatedClass = toBoolean(value);\r\n    this._foundation.setUseActivatedClass(this._useActivatedClass);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  private _useActivatedClass: boolean = false;\r\n\r\n  @Input()\r\n  get useSelectedClass(): boolean { return this._useSelectedClass; }\r\n  set useSelectedClass(value: boolean) {\r\n    this._useSelectedClass = toBoolean(value);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  private _useSelectedClass: boolean = false;\r\n\r\n  @Input()\r\n  get verticalOrientation(): boolean { return this._verticalOrientation; }\r\n  set verticalOrientation(value: boolean) {\r\n    this._verticalOrientation = toBoolean(value);\r\n    this._foundation.setVerticalOrientation(this._verticalOrientation);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  private _verticalOrientation: boolean = true;\r\n\r\n  @Input()\r\n  get wrapFocus(): boolean { return this._wrapFocus; }\r\n  set wrapFocus(value: boolean) {\r\n    this._wrapFocus = toBoolean(value);\r\n    this._foundation.setWrapFocus(this._wrapFocus);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  private _wrapFocus: boolean = false;\r\n\r\n  @ContentChildren(MdcListItem, { descendants: true }) items!: QueryList<MdcListItem>;\r\n\r\n  /** Emits a change event whenever the selected state of an option changes. */\r\n  @Output() readonly selectionChange: EventEmitter<MdcListItemChange> =\r\n    new EventEmitter<MdcListItemChange>();\r\n\r\n  /** Emits an event for keyboard and mouse actions. */\r\n  @Output() readonly actionEvent: EventEmitter<MdcListItemAction> =\r\n    new EventEmitter<MdcListItemAction>();\r\n\r\n  /** Subscription to changes in list items. */\r\n  private _changeSubscription: Subscription | null = null;\r\n\r\n  /** Subscription to selection events in list items. */\r\n  private itemSelectionSubscription: Subscription | null = null;\r\n\r\n  /** Combined stream of all of the list item selection events. */\r\n  get listItemSelections(): Observable<MdcListSelectionChange> {\r\n    return merge(...this.items.map(item => item.selectionChange));\r\n  }\r\n\r\n  private _createAdapter() {\r\n    return {\r\n      getListItemCount: () => this.items.length,\r\n      getFocusedElementIndex: () => {\r\n        if (!this._platform.isBrowser && document.activeElement!) { return -1; }\r\n        return this.items.toArray().findIndex(_ => _.getListItemElement() === document.activeElement!) || -1;\r\n      },\r\n      setAttributeForElementIndex: (index: number, attr: string, value: string) => {\r\n        const item = this.getListItemByIndex(index);\r\n        if (item) {\r\n          item.getListItemElement().setAttribute(attr, value);\r\n        }\r\n      },\r\n      removeAttributeForElementIndex: (index: number, attr: string) =>\r\n        this.items.toArray()[index].getListItemElement().removeAttribute(attr),\r\n      addClassForElementIndex: (index: number, className: string) =>\r\n        this.items.toArray()[index].getListItemElement().classList.add(className),\r\n      removeClassForElementIndex: (index: number, className: string) => {\r\n        const item = this.getListItemByIndex(index);\r\n        if (item) {\r\n          item.getListItemElement().classList.remove(className);\r\n        }\r\n      },\r\n      focusItemAtIndex: (index: number) => this.focusItemAtIndex(index),\r\n      setTabIndexForListItemChildren: (listItemIndex: number, tabIndexValue: number) => {\r\n        const listItemChildren = [].slice.call(this.items.toArray()[listItemIndex].getListItemElement()\r\n          .querySelectorAll(strings.CHILD_ELEMENTS_TO_TOGGLE_TABINDEX));\r\n        listItemChildren.forEach((ele: Element) => ele.setAttribute('tabindex', `${tabIndexValue}`));\r\n      },\r\n      hasCheckboxAtIndex: (index: number) => {\r\n        const listItem = this.items.toArray()[index].getListItemElement();\r\n        return !!listItem.querySelector(strings.CHECKBOX_SELECTOR);\r\n      },\r\n      hasRadioAtIndex: (index: number) => {\r\n        const listItem = this.items.toArray()[index].getListItemElement();\r\n        return !!listItem.querySelector(strings.RADIO_SELECTOR);\r\n      },\r\n      isCheckboxCheckedAtIndex: (index: number) => {\r\n        const listItem = this.items.toArray()[index].getListItemElement();\r\n        const toggleEl = listItem.querySelector(strings.CHECKBOX_SELECTOR);\r\n        return toggleEl.checked;\r\n      },\r\n      setCheckedCheckboxOrRadioAtIndex: (index: number, isChecked: boolean) => {\r\n        const listItem = this.items.toArray()[index].getListItemElement();\r\n        const toggleEl = listItem.querySelector(strings.CHECKBOX_RADIO_SELECTOR);\r\n        toggleEl.checked = isChecked;\r\n\r\n        if (this._platform.isBrowser) {\r\n          const event = document.createEvent('Event');\r\n          event.initEvent('change', true, true);\r\n          toggleEl.dispatchEvent(event);\r\n        }\r\n      },\r\n      isFocusInsideList: () => this._platform.isBrowser ?\r\n        this.elementRef.nativeElement.contains(document.activeElement) : false,\r\n      notifyAction: (index: number) => {\r\n        this.actionEvent.emit({ index: index });\r\n      }\r\n    };\r\n  }\r\n\r\n  private _foundation: {\r\n    init(): void,\r\n    destroy(): void,\r\n    layout(): void,\r\n    setVerticalOrientation(vertical: boolean): void,\r\n    setWrapFocus(wrapFocus: boolean): void,\r\n    handleClick(index: number, toggleCheckbox: boolean): void,\r\n    handleKeydown(evt: KeyboardEvent, isRootListItem: boolean, listItemIndex: number): void,\r\n    handleFocusIn(evt: FocusEvent, listItemIndex: number): void,\r\n    handleFocusOut(evt: FocusEvent, listItemIndex: number): void,\r\n    focusNextElement(index: number): number,\r\n    focusPrevElement(index: number): number,\r\n    focusFirstElement(): number,\r\n    focusLastElement(): number,\r\n    setSelectedIndex(index: number): void,\r\n    setSingleSelection(isSingleSelectionList: boolean): void,\r\n    setUseActivatedClass(useActivated: boolean): void\r\n  } = new MDCListFoundation(this._createAdapter());\r\n\r\n  constructor(\r\n    private _platform: Platform,\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    public elementRef: ElementRef) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this._foundation.init();\r\n    this._foundation.layout();\r\n\r\n    // When list items change, re-subscribe\r\n    this._changeSubscription = this.items.changes.pipe(startWith(null))\r\n      .subscribe(() => {\r\n        if (this.items.length) {\r\n          this._resetListItems();\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._dropSubscriptions();\r\n    if (this._changeSubscription) {\r\n      this._changeSubscription.unsubscribe();\r\n    }\r\n\r\n    this._foundation.destroy();\r\n  }\r\n\r\n  setSelectedIndex(index: number): void {\r\n    this.reset();\r\n    this._foundation.setSelectedIndex(index);\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n\r\n    const selectedItem = this.items.toArray()[index];\r\n    if (selectedItem) {\r\n      this._applySelectionState(selectedItem);\r\n    }\r\n  }\r\n\r\n  setSelectedValue(value: any): void {\r\n    this.reset();\r\n    if (value === null) {\r\n      return;\r\n    }\r\n\r\n    const selectedItem = this.getListItemByValue(value);\r\n    this._foundation.setSelectedIndex(this.getListItemIndexByValue(value));\r\n    if (selectedItem) {\r\n      this._applySelectionState(selectedItem);\r\n    }\r\n  }\r\n\r\n  getSelectedItem(): MdcListItem | undefined {\r\n    return this.items ? this.items.toArray().find(_ => _.selected || _.activated) : undefined;\r\n  }\r\n\r\n  getSelectedIndex(): number {\r\n    return this.items ? this.items.toArray().findIndex(_ => _.selected || _.activated) : -1;\r\n  }\r\n\r\n  getSelectedValue(): any {\r\n    const item = this.items ? this.items.find(_ => _.selected) : null;\r\n    return item && item.value ? item.value : null;\r\n  }\r\n\r\n  getSelectedText(): string {\r\n    const selectedItem = this.getSelectedItem();\r\n    return selectedItem && selectedItem.getListItemElement().textContent || '';\r\n  }\r\n\r\n  getListItemByValue(value: any): MdcListItem | undefined {\r\n    return this.items ? this.items.toArray().find(_ => _.value === value) : undefined;\r\n  }\r\n\r\n  getListItemByIndex(index: number): MdcListItem | undefined {\r\n    return this.items ? this.items.toArray()[index] : undefined;\r\n  }\r\n\r\n  getListItemIndexByValue(value: any): number {\r\n    return this.items ? this.items.toArray().findIndex(_ => _.value === value) : -1;\r\n  }\r\n\r\n  focusItemAtIndex(index: number): void {\r\n    this.items.toArray()[index].getListItemElement().focus();\r\n  }\r\n\r\n  focusFirstElement(): number {\r\n    return this._foundation.focusFirstElement();\r\n  }\r\n\r\n  focusLastElement(): number {\r\n    return this._foundation.focusLastElement();\r\n  }\r\n\r\n  focusNextElement(index: number): number {\r\n    return this._foundation.focusNextElement(index);\r\n  }\r\n\r\n  focusPrevElement(index: number): number {\r\n    return this._foundation.focusPrevElement(index);\r\n  }\r\n\r\n  setRole(role: string): void {\r\n    this._getHostElement().setAttribute('role', role);\r\n  }\r\n\r\n  reset(): void {\r\n    this.items.forEach(_ => {\r\n      _.selected = false;\r\n      _.activated = false;\r\n    });\r\n  }\r\n\r\n  private _applySelectionState(item: MdcListItem): void {\r\n    if (this.useActivatedClass) {\r\n      item.activated = true;\r\n    } else if (this.useSelectedClass) {\r\n      item.selected = true;\r\n    }\r\n  }\r\n\r\n  private _resetListItems() {\r\n    this._dropSubscriptions();\r\n    this._listenForListItemSelection();\r\n  }\r\n\r\n  private _dropSubscriptions() {\r\n    if (this.itemSelectionSubscription) {\r\n      this.itemSelectionSubscription.unsubscribe();\r\n      this.itemSelectionSubscription = null;\r\n    }\r\n  }\r\n\r\n  /** Listens to selected events on each list item. */\r\n  private _listenForListItemSelection(): void {\r\n    this.itemSelectionSubscription = this.listItemSelections.subscribe(event => {\r\n      if (this.singleSelection) {\r\n        this.items.filter(_ => _.id !== event.source.id && (_.activated || _.selected))\r\n          .forEach(_ => {\r\n            _.selected = false;\r\n            _.activated = false;\r\n          });\r\n      }\r\n\r\n      this._applySelectionState(event.source);\r\n\r\n      if (!this.singleSelection) {\r\n        event.source.ripple.handleBlur();\r\n      }\r\n      this.selectionChange.emit(new MdcListItemChange(this, event.source));\r\n    });\r\n  }\r\n\r\n  _onFocusIn(evt: FocusEvent): void {\r\n    const index = this._getListItemIndexByEvent(evt);\r\n    this._foundation.handleFocusIn(evt, index);\r\n  }\r\n\r\n  _onFocusOut(evt: FocusEvent): void {\r\n    const index = this._getListItemIndexByEvent(evt);\r\n\r\n    if (index >= 0) {\r\n      this._foundation.handleFocusOut(evt, index);\r\n    }\r\n  }\r\n\r\n  _onKeydown(evt: KeyboardEvent): void {\r\n    const index = this._getListItemIndexByEvent(evt);\r\n\r\n    if (index >= 0) {\r\n      this._foundation.handleKeydown(evt, (<any>evt.target).classList.contains(cssClasses.LIST_ITEM_CLASS), index);\r\n    }\r\n  }\r\n\r\n  _handleClickEvent(evt: MouseEvent): void {\r\n    const index = this._getListItemIndexByEvent(evt);\r\n\r\n    const listItem = this._getListItemByEventTarget(evt.target!);\r\n    if (listItem && listItem.disabled) {\r\n      return;\r\n    }\r\n\r\n    // Toggle the checkbox only if it's not the target of the event, or the checkbox will have 2 change events.\r\n    const toggleCheckbox = !matches((evt.target), strings.CHECKBOX_RADIO_SELECTOR);\r\n    this._foundation.handleClick(index, toggleCheckbox);\r\n  }\r\n\r\n  private _getListItemByEventTarget(target: EventTarget): MdcListItem | undefined {\r\n    return this.items.toArray().find(_ => _.getListItemElement() === target);\r\n  }\r\n\r\n  private _getListItemIndexByEvent(evt: Event): number {\r\n    return this.items.toArray().findIndex(_ => _.getListItemElement() === evt.target);\r\n  }\r\n\r\n  /** Retrieves the DOM element of the component host. */\r\n  private _getHostElement(): HTMLElement {\r\n    return this.elementRef.nativeElement;\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCListFoundation from './foundation';\nimport MDCListAdapter from './adapter';\nimport {matches} from '@material/dom/ponyfill';\nimport {cssClasses, strings, Index} from './constants'; // eslint-disable-line no-unused-vars\n\n/**\n * @extends MDCComponent<!MDCListFoundation>\n */\nclass MDCList extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n    /** @private {!Function} */\n    this.handleKeydown_;\n    /** @private {!Function} */\n    this.handleClick_;\n    /** @private {!Function} */\n    this.focusInEventListener_;\n    /** @private {!Function} */\n    this.focusOutEventListener_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCList}\n   */\n  static attachTo(root) {\n    return new MDCList(root);\n  }\n\n  destroy() {\n    this.root_.removeEventListener('keydown', this.handleKeydown_);\n    this.root_.removeEventListener('click', this.handleClick_);\n    this.root_.removeEventListener('focusin', this.focusInEventListener_);\n    this.root_.removeEventListener('focusout', this.focusOutEventListener_);\n  }\n\n  initialSyncWithDOM() {\n    this.handleClick_ = this.handleClickEvent_.bind(this);\n    this.handleKeydown_ = this.handleKeydownEvent_.bind(this);\n    this.focusInEventListener_ = this.handleFocusInEvent_.bind(this);\n    this.focusOutEventListener_ = this.handleFocusOutEvent_.bind(this);\n    this.root_.addEventListener('keydown', this.handleKeydown_);\n    this.root_.addEventListener('focusin', this.focusInEventListener_);\n    this.root_.addEventListener('focusout', this.focusOutEventListener_);\n    this.root_.addEventListener('click', this.handleClick_);\n    this.layout();\n    this.initializeListType();\n  }\n\n  layout() {\n    const direction = this.root_.getAttribute(strings.ARIA_ORIENTATION);\n    this.vertical = direction !== strings.ARIA_ORIENTATION_HORIZONTAL;\n\n    // List items need to have at least tabindex=-1 to be focusable.\n    [].slice.call(this.root_.querySelectorAll('.mdc-list-item:not([tabindex])'))\n      .forEach((ele) => {\n        ele.setAttribute('tabindex', -1);\n      });\n\n    // Child button/a elements are not tabbable until the list item is focused.\n    [].slice.call(this.root_.querySelectorAll(strings.FOCUSABLE_CHILD_ELEMENTS))\n      .forEach((ele) => ele.setAttribute('tabindex', -1));\n\n    this.foundation_.layout();\n  }\n\n  /**\n   * Used to figure out which list item this event is targetting. Or returns -1 if\n   * there is no list item\n   * @param {Event} evt\n   * @private\n   */\n  getListItemIndex_(evt) {\n    let eventTarget = /** @type {HTMLElement} */ (evt.target);\n    let index = -1;\n\n    // Find the first ancestor that is a list item or the list.\n    while (!eventTarget.classList.contains(cssClasses.LIST_ITEM_CLASS)\n    && !eventTarget.classList.contains(cssClasses.ROOT)) {\n      eventTarget = eventTarget.parentElement;\n    }\n\n    // Get the index of the element if it is a list item.\n    if (eventTarget.classList.contains(cssClasses.LIST_ITEM_CLASS)) {\n      index = this.listElements.indexOf(eventTarget);\n    }\n\n    return index;\n  }\n\n  /**\n   * Used to figure out which element was clicked before sending the event to the foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleFocusInEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n    this.foundation_.handleFocusIn(evt, index);\n  }\n\n  /**\n   * Used to figure out which element was clicked before sending the event to the foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleFocusOutEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n    this.foundation_.handleFocusOut(evt, index);\n  }\n\n  /**\n   * Used to figure out which element was focused when keydown event occurred before sending the event to the\n   * foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleKeydownEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n\n    if (index >= 0) {\n      this.foundation_.handleKeydown(evt, evt.target.classList.contains(cssClasses.LIST_ITEM_CLASS), index);\n    }\n  }\n\n  /**\n   * Used to figure out which element was clicked before sending the event to the foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleClickEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n\n    // Toggle the checkbox only if it's not the target of the event, or the checkbox will have 2 change events.\n    const toggleCheckbox = !matches(/** @type {!Element} */ (evt.target), strings.CHECKBOX_RADIO_SELECTOR);\n    this.foundation_.handleClick(index, toggleCheckbox);\n  }\n\n  /**\n   * Initialize selectedIndex value based on pre-selected checkbox list items, single selection or radio.\n   */\n  initializeListType() {\n    const checkboxListItems = this.root_.querySelectorAll(strings.ARIA_ROLE_CHECKBOX_SELECTOR);\n    const singleSelectedListItem = this.root_.querySelector(`.${cssClasses.LIST_ITEM_ACTIVATED_CLASS},\n        .${cssClasses.LIST_ITEM_SELECTED_CLASS}`);\n    const radioSelectedListItem = this.root_.querySelector(strings.ARIA_CHECKED_RADIO_SELECTOR);\n\n    if (checkboxListItems.length) {\n      const preselectedItems = this.root_.querySelectorAll(strings.ARIA_CHECKED_CHECKBOX_SELECTOR);\n      this.selectedIndex = [].map.call(preselectedItems, (listItem) => this.listElements.indexOf(listItem));\n    } else if (singleSelectedListItem) {\n      if (singleSelectedListItem.classList.contains(cssClasses.LIST_ITEM_ACTIVATED_CLASS)) {\n        this.foundation_.setUseActivatedClass(true);\n      }\n\n      this.singleSelection = true;\n      this.selectedIndex = this.listElements.indexOf(singleSelectedListItem);\n    } else if (radioSelectedListItem) {\n      this.selectedIndex = this.listElements.indexOf(radioSelectedListItem);\n    }\n  }\n\n  /** @param {boolean} value */\n  set vertical(value) {\n    this.foundation_.setVerticalOrientation(value);\n  }\n\n  /** @return Array<!Element>*/\n  get listElements() {\n    return [].slice.call(this.root_.querySelectorAll(strings.ENABLED_ITEMS_SELECTOR));\n  }\n\n  /** @param {boolean} value */\n  set wrapFocus(value) {\n    this.foundation_.setWrapFocus(value);\n  }\n\n  /** @param {boolean} isSingleSelectionList */\n  set singleSelection(isSingleSelectionList) {\n    this.foundation_.setSingleSelection(isSingleSelectionList);\n  }\n\n  /** @return {!Index} */\n  get selectedIndex() {\n    return this.foundation_.getSelectedIndex();\n  }\n\n  /** @param {!Index} index */\n  set selectedIndex(index) {\n    this.foundation_.setSelectedIndex(index);\n  }\n\n  /** @return {!MDCListFoundation} */\n  getDefaultFoundation() {\n    return new MDCListFoundation(/** @type {!MDCListAdapter} */ (Object.assign({\n      getListItemCount: () => this.listElements.length,\n      getFocusedElementIndex: () => this.listElements.indexOf(document.activeElement),\n      setAttributeForElementIndex: (index, attr, value) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.setAttribute(attr, value);\n        }\n      },\n      removeAttributeForElementIndex: (index, attr) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.removeAttribute(attr);\n        }\n      },\n      addClassForElementIndex: (index, className) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.classList.add(className);\n        }\n      },\n      removeClassForElementIndex: (index, className) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.classList.remove(className);\n        }\n      },\n      focusItemAtIndex: (index) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.focus();\n        }\n      },\n      setTabIndexForListItemChildren: (listItemIndex, tabIndexValue) => {\n        const element = this.listElements[listItemIndex];\n        const listItemChildren = [].slice.call(element.querySelectorAll(strings.CHILD_ELEMENTS_TO_TOGGLE_TABINDEX));\n        listItemChildren.forEach((ele) => ele.setAttribute('tabindex', tabIndexValue));\n      },\n      hasCheckboxAtIndex: (index) => {\n        const listItem = this.listElements[index];\n        return !!listItem.querySelector(strings.CHECKBOX_SELECTOR);\n      },\n      hasRadioAtIndex: (index) => {\n        const listItem = this.listElements[index];\n        return !!listItem.querySelector(strings.RADIO_SELECTOR);\n      },\n      isCheckboxCheckedAtIndex: (index) => {\n        const listItem = this.listElements[index];\n        const toggleEl = listItem.querySelector(strings.CHECKBOX_SELECTOR);\n        return toggleEl.checked;\n      },\n      setCheckedCheckboxOrRadioAtIndex: (index, isChecked) => {\n        const listItem = this.listElements[index];\n        const toggleEl = listItem.querySelector(strings.CHECKBOX_RADIO_SELECTOR);\n        toggleEl.checked = isChecked;\n\n        const event = document.createEvent('Event');\n        event.initEvent('change', true, true);\n        toggleEl.dispatchEvent(event);\n      },\n      notifyAction: (index) => {\n        this.emit(strings.ACTION_EVENT, index, /** shouldBubble */ true);\n      },\n      isFocusInsideList: () => {\n        return this.root_.contains(document.activeElement);\n      },\n    })));\n  }\n}\n\nexport {MDCList, MDCListFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCListAdapter from './adapter';\nimport {strings, cssClasses, Index} from './constants'; // eslint-disable-line no-unused-vars\n\nconst ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\n\nclass MDCListFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCListAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCListAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCListAdapter} */ ({\n      getListItemCount: () => {},\n      getFocusedElementIndex: () => {},\n      setAttributeForElementIndex: () => {},\n      removeAttributeForElementIndex: () => {},\n      addClassForElementIndex: () => {},\n      removeClassForElementIndex: () => {},\n      focusItemAtIndex: () => {},\n      setTabIndexForListItemChildren: () => {},\n      hasRadioAtIndex: () => {},\n      hasCheckboxAtIndex: () => {},\n      isCheckboxCheckedAtIndex: () => {},\n      setCheckedCheckboxOrRadioAtIndex: () => {},\n      notifyAction: () => {},\n      isFocusInsideList: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCListAdapter=} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCListFoundation.defaultAdapter, adapter));\n    /** @private {boolean} */\n    this.wrapFocus_ = false;\n\n    /** @private {boolean} */\n    this.isVertical_ = true;\n\n    /** @private {boolean} */\n    this.isSingleSelectionList_ = false;\n\n    /** @private {!Index} */\n    this.selectedIndex_ = -1;\n\n    /** @private {number} */\n    this.focusedItemIndex_ = -1;\n\n    /** @private {boolean} */\n    this.useActivatedClass_ = false;\n\n    /** @private {boolean} */\n    this.isCheckboxList_ = false;\n\n    /** @private {boolean} */\n    this.isRadioList_ = false;\n  }\n\n  layout() {\n    if (this.adapter_.getListItemCount() === 0) return;\n\n    if (this.adapter_.hasCheckboxAtIndex(0)) {\n      this.isCheckboxList_ = true;\n    } else if (this.adapter_.hasRadioAtIndex(0)) {\n      this.isRadioList_ = true;\n    }\n  }\n\n  /**\n   * Sets the private wrapFocus_ variable.\n   * @param {boolean} value\n   */\n  setWrapFocus(value) {\n    this.wrapFocus_ = value;\n  }\n\n  /**\n   * Sets the isVertical_ private variable.\n   * @param {boolean} value\n   */\n  setVerticalOrientation(value) {\n    this.isVertical_ = value;\n  }\n\n  /**\n   * Sets the isSingleSelectionList_ private variable.\n   * @param {boolean} value\n   */\n  setSingleSelection(value) {\n    this.isSingleSelectionList_ = value;\n  }\n\n  /**\n   * Sets the useActivatedClass_ private variable.\n   * @param {boolean} useActivated\n   */\n  setUseActivatedClass(useActivated) {\n    this.useActivatedClass_ = useActivated;\n  }\n\n  /** @return {!Index} */\n  getSelectedIndex() {\n    return this.selectedIndex_;\n  }\n\n  /** @param {!Index} index */\n  setSelectedIndex(index) {\n    if (!this.isIndexValid_(index)) return;\n\n    if (this.isCheckboxList_) {\n      this.setCheckboxAtIndex_(/** @type {!Array<number>} */ (index));\n    } else if (this.isRadioList_) {\n      this.setRadioAtIndex_(/** @type {number} */ (index));\n    } else {\n      this.setSingleSelectionAtIndex_(/** @type {number} */ (index));\n    }\n  }\n\n  /**\n   * Focus in handler for the list items.\n   * @param evt\n   * @param {number} listItemIndex\n   */\n  handleFocusIn(evt, listItemIndex) {\n    if (listItemIndex >= 0) {\n      this.adapter_.setTabIndexForListItemChildren(listItemIndex, 0);\n    }\n  }\n\n  /**\n   * Focus out handler for the list items.\n   * @param {Event} evt\n   * @param {number} listItemIndex\n   */\n  handleFocusOut(evt, listItemIndex) {\n    if (listItemIndex >= 0) {\n      this.adapter_.setTabIndexForListItemChildren(listItemIndex, -1);\n    }\n\n    /**\n     * Between Focusout & Focusin some browsers do not have focus on any element. Setting a delay to wait till the focus\n     * is moved to next element.\n     */\n    setTimeout(() => {\n      if (!this.adapter_.isFocusInsideList()) {\n        this.setTabindexToFirstSelectedItem_();\n      }\n    }, 0);\n  }\n\n  /**\n   * Key handler for the list.\n   * @param {Event} evt\n   * @param {boolean} isRootListItem\n   * @param {number} listItemIndex\n   */\n  handleKeydown(evt, isRootListItem, listItemIndex) {\n    const arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;\n    const arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;\n    const arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;\n    const arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;\n    const isHome = evt.key === 'Home' || evt.keyCode === 36;\n    const isEnd = evt.key === 'End' || evt.keyCode === 35;\n    const isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n    const isSpace = evt.key === 'Space' || evt.keyCode === 32;\n\n    let currentIndex = this.adapter_.getFocusedElementIndex();\n    let nextIndex = -1;\n    if (currentIndex === -1) {\n      currentIndex = listItemIndex;\n      if (currentIndex < 0) {\n        // If this event doesn't have a mdc-list-item ancestor from the\n        // current list (not from a sublist), return early.\n        return;\n      }\n    }\n\n    if ((this.isVertical_ && arrowDown) || (!this.isVertical_ && arrowRight)) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusNextElement(currentIndex);\n    } else if ((this.isVertical_ && arrowUp) || (!this.isVertical_ && arrowLeft)) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusPrevElement(currentIndex);\n    } else if (isHome) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusFirstElement();\n    } else if (isEnd) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusLastElement();\n    } else if (isEnter || isSpace) {\n      if (isRootListItem) {\n        // Return early if enter key is pressed on anchor element which triggers synthetic MouseEvent event.\n        if (evt.target.tagName === 'A' && isEnter) return;\n        this.preventDefaultEvent_(evt);\n\n        if (this.isSelectableList_()) {\n          this.setSelectedIndexOnAction_(currentIndex);\n        }\n\n        this.adapter_.notifyAction(currentIndex);\n      }\n    }\n\n    this.focusedItemIndex_ = currentIndex;\n\n    if (nextIndex >= 0) {\n      this.setTabindexAtIndex_(nextIndex);\n      this.focusedItemIndex_ = nextIndex;\n    }\n  }\n\n  /**\n   * Click handler for the list.\n   * @param {number} index\n   * @param {boolean} toggleCheckbox\n   */\n  handleClick(index, toggleCheckbox) {\n    if (index === -1) return;\n\n    if (this.isSelectableList_()) {\n      this.setSelectedIndexOnAction_(index, toggleCheckbox);\n    }\n\n    this.adapter_.notifyAction(index);\n\n    this.setTabindexAtIndex_(index);\n    this.focusedItemIndex_ = index;\n  }\n\n  /**\n   * Ensures that preventDefault is only called if the containing element doesn't\n   * consume the event, and it will cause an unintended scroll.\n   * @param {Event} evt\n   * @private\n   */\n  preventDefaultEvent_(evt) {\n    const tagName = `${evt.target.tagName}`.toLowerCase();\n    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n      evt.preventDefault();\n    }\n  }\n\n  /**\n   * Focuses the next element on the list.\n   * @param {number} index\n   * @return {number}\n   */\n  focusNextElement(index) {\n    const count = this.adapter_.getListItemCount();\n    let nextIndex = index + 1;\n    if (nextIndex >= count) {\n      if (this.wrapFocus_) {\n        nextIndex = 0;\n      } else {\n        // Return early because last item is already focused.\n        return index;\n      }\n    }\n    this.adapter_.focusItemAtIndex(nextIndex);\n\n    return nextIndex;\n  }\n\n  /**\n   * Focuses the previous element on the list.\n   * @param {number} index\n   * @return {number}\n   */\n  focusPrevElement(index) {\n    let prevIndex = index - 1;\n    if (prevIndex < 0) {\n      if (this.wrapFocus_) {\n        prevIndex = this.adapter_.getListItemCount() - 1;\n      } else {\n        // Return early because first item is already focused.\n        return index;\n      }\n    }\n    this.adapter_.focusItemAtIndex(prevIndex);\n\n    return prevIndex;\n  }\n\n  /**\n   * @return {number}\n   */\n  focusFirstElement() {\n    this.adapter_.focusItemAtIndex(0);\n    return 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  focusLastElement() {\n    const lastIndex = this.adapter_.getListItemCount() - 1;\n    this.adapter_.focusItemAtIndex(lastIndex);\n    return lastIndex;\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  setSingleSelectionAtIndex_(index) {\n    let selectedClassName = cssClasses.LIST_ITEM_SELECTED_CLASS;\n    if (this.useActivatedClass_) {\n      selectedClassName = cssClasses.LIST_ITEM_ACTIVATED_CLASS;\n    }\n\n    if (this.selectedIndex_ >= 0 && this.selectedIndex_ !== index) {\n      this.adapter_.removeClassForElementIndex(this.selectedIndex_, selectedClassName);\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, strings.ARIA_SELECTED, 'false');\n    }\n\n    this.adapter_.addClassForElementIndex(index, selectedClassName);\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_SELECTED, 'true');\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * Toggles radio at give index. Radio doesn't change the checked state if it is already checked.\n   * @param {number} index\n   * @private\n   */\n  setRadioAtIndex_(index) {\n    this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, true);\n\n    if (this.selectedIndex_ >= 0) {\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, strings.ARIA_CHECKED, 'false');\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_CHECKED, 'true');\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * @param {!Array<number>} index\n   * @private\n   */\n  setCheckboxAtIndex_(index) {\n    for (let i = 0; i < this.adapter_.getListItemCount(); i++) {\n      let isChecked = false;\n      if (index.indexOf(i) >= 0) {\n        isChecked = true;\n      }\n\n      this.adapter_.setCheckedCheckboxOrRadioAtIndex(i, isChecked);\n      this.adapter_.setAttributeForElementIndex(i, strings.ARIA_CHECKED, isChecked ? 'true' : 'false');\n    }\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  setTabindexAtIndex_(index) {\n    if (this.focusedItemIndex_ === -1 && index !== 0) {\n      // If no list item was selected set first list item's tabindex to -1.\n      // Generally, tabindex is set to 0 on first list item of list that has no preselected items.\n      this.adapter_.setAttributeForElementIndex(0, 'tabindex', -1);\n    } else if (this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {\n      this.adapter_.setAttributeForElementIndex(this.focusedItemIndex_, 'tabindex', -1);\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, 'tabindex', 0);\n  }\n\n  /**\n   * @return {boolean} Return true if it is single selectin list, checkbox list or radio list.\n   * @private\n   */\n  isSelectableList_() {\n    return this.isSingleSelectionList_ || this.isCheckboxList_ || this.isRadioList_;\n  }\n\n  /** @private */\n  setTabindexToFirstSelectedItem_() {\n    let targetIndex = 0;\n\n    if (this.isSelectableList_()) {\n      if (typeof this.selectedIndex_ === 'number' && this.selectedIndex_ !== -1) {\n        targetIndex = this.selectedIndex_;\n      } else if (this.selectedIndex_ instanceof Array && this.selectedIndex_.length > 0) {\n        targetIndex = this.selectedIndex_.reduce((currentIndex, minIndex) => Math.min(currentIndex, minIndex));\n      }\n    }\n\n    this.setTabindexAtIndex_(targetIndex);\n  }\n\n  /**\n   * @param {!Index} index\n   * @return {boolean}\n   * @private\n   */\n  isIndexValid_(index) {\n    if (index instanceof Array) {\n      if (!this.isCheckboxList_) {\n        throw new Error('MDCListFoundation: Array of index is only supported for checkbox based list');\n      }\n\n      if (index.length === 0) {\n        return true;\n      } else {\n        return index.some((i) => this.isIndexInRange_(i));\n      }\n    } else if (typeof index === 'number') {\n      if (this.isCheckboxList_) {\n        throw new Error('MDCListFoundation: Expected array of index for checkbox based list but got number: ' + index);\n      }\n      return this.isIndexInRange_(index);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @return {boolean}\n   * @private\n   */\n  isIndexInRange_(index) {\n    const listSize = this.adapter_.getListItemCount();\n    return index >= 0 && index < listSize;\n  }\n\n  /**\n   * @param {number} index\n   * @param {boolean=} toggleCheckbox\n   * @private\n   */\n  setSelectedIndexOnAction_(index, toggleCheckbox = true) {\n    if (this.isCheckboxList_) {\n      this.toggleCheckboxAtIndex_(index, toggleCheckbox);\n    } else {\n      this.setSelectedIndex(index);\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @param {boolean} toggleCheckbox\n   * @private\n   */\n  toggleCheckboxAtIndex_(index, toggleCheckbox) {\n    let isChecked = this.adapter_.isCheckboxCheckedAtIndex(index);\n\n    if (toggleCheckbox) {\n      isChecked = !isChecked;\n      this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, isChecked);\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_CHECKED, isChecked ? 'true' : 'false');\n\n    // If none of the checkbox items are selected and selectedIndex is not initialized then provide a default value.\n    if (this.selectedIndex_ === -1) {\n      this.selectedIndex_ = [];\n    }\n\n    if (isChecked) {\n      this.selectedIndex_.push(index);\n    } else {\n      this.selectedIndex_ = this.selectedIndex_.filter((i) => i !== index);\n    }\n  }\n}\n\nexport default MDCListFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC List. Provides an interface for managing focus.\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCListAdapter {\n  /** @return {number} */\n  getListItemCount() {}\n\n  /**\n   * @return {number} */\n  getFocusedElementIndex() {}\n\n  /**\n   * @param {number} index\n   * @param {string} attribute\n   * @param {string} value\n   */\n  setAttributeForElementIndex(index, attribute, value) {}\n\n  /**\n   * @param {number} index\n   * @param {string} attribute\n   */\n  removeAttributeForElementIndex(index, attribute) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  addClassForElementIndex(index, className) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  removeClassForElementIndex(index, className) {}\n\n  /**\n   * Focuses list item at the index specified.\n   * @param {number} index\n   */\n  focusItemAtIndex(index) {}\n\n  /**\n   * Sets the tabindex to the value specified for all button/a element children of\n   * the list item at the index specified.\n   * @param {number} listItemIndex\n   * @param {number} tabIndexValue\n   */\n  setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {}\n\n  /**\n   * @param {number} index\n   * @return {boolean} Returns true if radio button is present at given list item index.\n   */\n  hasRadioAtIndex(index) {}\n\n  /**\n   * @param {number} index\n   * @return {boolean} Returns true if checkbox is present at given list item index.\n   */\n  hasCheckboxAtIndex(index) {}\n\n  /**\n   * @param {number} index\n   * @return {boolean} Returns true if checkbox inside a list item is checked.\n   */\n  isCheckboxCheckedAtIndex(index) {}\n\n  /**\n   * Sets the checked status of checkbox or radio at given list item index.\n   * @param {number} index\n   * @param {boolean} isChecked\n   */\n  setCheckedCheckboxOrRadioAtIndex(index, isChecked) {}\n\n  /**\n   * Notifies user action on list item.\n   */\n  notifyAction(index) {}\n\n  /**\n   * @return {boolean} Returns true when the current focused element is inside list root.\n   */\n  isFocusInsideList() {}\n}\n\nexport default MDCListAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element}\n */\nfunction closest(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  let el = element;\n  while (el) {\n    if (matches(el, selector)) {\n      return el;\n    }\n    el = el.parentElement;\n  }\n  return null;\n}\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {boolean}\n */\nfunction matches(element, selector) {\n  const nativeMatches = element.matches\n    || element.webkitMatchesSelector\n    || element.msMatchesSelector;\n  return nativeMatches.call(element, selector);\n}\n\nexport {closest, matches};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-list',\n  LIST_ITEM_CLASS: 'mdc-list-item',\n  LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',\n  LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_ORIENTATION: 'aria-orientation',\n  ARIA_ORIENTATION_HORIZONTAL: 'horizontal',\n  ARIA_SELECTED: 'aria-selected',\n  ARIA_CHECKED: 'aria-checked',\n  ARIA_CHECKED_RADIO_SELECTOR: '[role=\"radio\"][aria-checked=\"true\"]',\n  ARIA_ROLE_CHECKBOX_SELECTOR: '[role=\"checkbox\"]',\n  ARIA_CHECKED_CHECKBOX_SELECTOR: '[role=\"checkbox\"][aria-checked=\"true\"]',\n  RADIO_SELECTOR: 'input[type=\"radio\"]:not(:disabled)',\n  CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled)',\n  CHECKBOX_RADIO_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled), input[type=\"radio\"]:not(:disabled)',\n  CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled),\n  .${cssClasses.LIST_ITEM_CLASS} a`,\n  FOCUSABLE_CHILD_ELEMENTS: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled), .${cssClasses.LIST_ITEM_CLASS} a,\n  .${cssClasses.LIST_ITEM_CLASS} input[type=\"radio\"]:not(:disabled),\n  .${cssClasses.LIST_ITEM_CLASS} input[type=\"checkbox\"]:not(:disabled)`,\n  ENABLED_ITEMS_SELECTOR: '.mdc-list-item:not(.mdc-list-item--disabled)',\n  ACTION_EVENT: 'MDCList:action',\n};\n\n/** @typedef {number|!Array<number>} */\nlet Index;\n\nexport {strings, cssClasses, Index};\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { toBoolean, ENTER, SPACE } from '@angular-mdc/web/common';\r\nimport { MdcRipple } from '@angular-mdc/web/ripple';\r\n\r\n/** Change event that is fired whenever the selected state of an option changes. */\r\nexport class MdcListSelectionChange {\r\n  constructor(\r\n    public source: MdcListItem) { }\r\n}\r\n\r\n/**\r\n * Describes a parent MdcList component.\r\n * Contains properties that MdcListItem can inherit.\r\n */\r\nexport interface MdcListParentComponent {\r\n  disableRipple(): boolean;\r\n}\r\n\r\n/**\r\n * Injection token used to provide the parent MdcList component to MdcListItem.\r\n */\r\nexport const MDC_LIST_PARENT_COMPONENT =\r\n  new InjectionToken<MdcListParentComponent>('MDC_LIST_PARENT_COMPONENT');\r\n\r\nlet uniqueIdCounter = 0;\r\n\r\n@Directive({\r\n  selector: '[mdcListItemGraphic], mdc-list-item-graphic',\r\n  exportAs: 'mdcListItemGraphic',\r\n  host: {\r\n    'role': 'presentation',\r\n    'class': 'mdc-list-item__graphic',\r\n    '[attr.aria-hidden]': 'true'\r\n  }\r\n})\r\nexport class MdcListItemGraphic {\r\n  constructor(public elementRef: ElementRef<HTMLElement>) { }\r\n}\r\n\r\n@Directive({\r\n  selector: '[mdcListItemMeta], mdc-list-item-meta',\r\n  exportAs: 'mdcListItemMeta',\r\n  host: { 'class': 'mdc-list-item__meta' }\r\n})\r\nexport class MdcListItemMeta {\r\n  constructor(public elementRef: ElementRef<HTMLElement>) { }\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: '[mdcListItemText], mdc-list-item-text',\r\n  exportAs: 'mdcListItemText',\r\n  host: { 'class': 'mdc-list-item__text' },\r\n  template: `\r\n  <ng-container>\r\n    <span class=\"mdc-list-item__primary-text\"><ng-content></ng-content></span>\r\n    <span class=\"mdc-list-item__secondary-text\" *ngIf=\"secondaryText\">{{secondaryText}}</span>\r\n  </ng-container>`,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MdcListItemText {\r\n  @Input() secondaryText?: string;\r\n\r\n  constructor(public elementRef: ElementRef<HTMLElement>) { }\r\n}\r\n\r\n@Directive({\r\n  selector: '[mdcListItemSecondary], mdc-list-item-secondary',\r\n  exportAs: 'mdcListItemSecondary',\r\n  host: { 'class': 'mdc-list-item__secondary-text' }\r\n})\r\nexport class MdcListItemSecondary {\r\n  constructor(public elementRef: ElementRef<HTMLElement>) { }\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mdc-list-item, a[mdc-list-item]',\r\n  exportAs: 'mdcListItem',\r\n  host: {\r\n    'role': 'listitem',\r\n    '[id]': 'id',\r\n    '[tabIndex]': 'tabIndex',\r\n    'class': 'mdc-list-item',\r\n    '[class.mdc-list-item--selected]': 'selected',\r\n    '[class.mdc-list-item--activated]': 'activated',\r\n    '[class.mdc-list-item--disabled]': 'disabled',\r\n    '(click)': '_emitChangeEvent()',\r\n    '(keydown)': '_onKeydown($event)'\r\n  },\r\n  template: '<ng-content></ng-content>',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [MdcRipple]\r\n})\r\nexport class MdcListItem implements OnInit, OnDestroy {\r\n  private _id = `mdc-list-item-${uniqueIdCounter++}`;\r\n\r\n  /** The unique ID of the list item. */\r\n  get id(): string { return this._id; }\r\n\r\n  @Input() value: any;\r\n  @Input() tabIndex: number = -1;\r\n\r\n  /** Whether the list item is selected. */\r\n  @Input()\r\n  get selected(): boolean { return this._selected; }\r\n  set selected(value: boolean) {\r\n    const newValue = toBoolean(value);\r\n    if (newValue !== this._selected) {\r\n      this._selected = newValue;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n  private _selected: boolean = false;\r\n\r\n  /** Whether the list item is activated. */\r\n  @Input()\r\n  get activated(): boolean { return this._activated; }\r\n  set activated(value: boolean) {\r\n    const newValue = toBoolean(value);\r\n    if (newValue !== this._activated) {\r\n      this._activated = newValue;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n  private _activated: boolean = false;\r\n\r\n  /** Whether the list item is disabled. */\r\n  @Input()\r\n  get disabled(): boolean { return this._disabled; }\r\n  set disabled(value: boolean) {\r\n    const newValue = toBoolean(value);\r\n    if (newValue !== this._disabled) {\r\n      this._disabled = newValue;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n  private _disabled: boolean = false;\r\n\r\n  @Output() readonly selectionChange: EventEmitter<MdcListSelectionChange>\r\n    = new EventEmitter<MdcListSelectionChange>();\r\n\r\n  constructor(\r\n    public ripple: MdcRipple,\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    public elementRef: ElementRef,\r\n    @Optional() @Inject(MDC_LIST_PARENT_COMPONENT) private _parent: MdcListParentComponent) { }\r\n\r\n  ngOnInit(): void {\r\n    this._initRipple();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ripple.destroy();\r\n  }\r\n\r\n  private _initRipple(): void {\r\n    this.ripple.init({\r\n      surface: this.elementRef.nativeElement\r\n    }, Object.assign(this.ripple.createAdapter(), {\r\n      isSurfaceDisabled: () => this._disabled || this._parent.disableRipple\r\n    }));\r\n  }\r\n\r\n  focus(): void {\r\n    this.getListItemElement().focus();\r\n  }\r\n\r\n  setRole(role: string): void {\r\n    this.getListItemElement().setAttribute('role', role);\r\n  }\r\n\r\n  getListItemElement(): HTMLElement {\r\n    return this.elementRef.nativeElement;\r\n  }\r\n\r\n  _onKeydown(evt: KeyboardEvent): void {\r\n    if (evt.keyCode === ENTER || evt.keyCode === SPACE) {\r\n      this._emitChangeEvent();\r\n    }\r\n  }\r\n\r\n  /** Emits a change event if the selected state of an option changed. */\r\n  _emitChangeEvent(): void {\r\n    if (this._disabled) { return; }\r\n\r\n    this.selectionChange.emit(new MdcListSelectionChange(this));\r\n  }\r\n}\r\n"],"names":["CommonModule","NgModule","ChangeDetectionStrategy","ViewEncapsulation","Component","toBoolean","Output","ContentChildren","Input","Platform","startWith","Directive","MDCComponent","MDCList","root","foundation_","setSelectedIndex","index","getSelectedIndex","setSingleSelection","isSingleSelectionList","setWrapFocus","value","slice","call","root_","querySelectorAll","strings","ENABLED_ITEMS_SELECTOR","setVerticalOrientation","contains","document","activeElement","isFocusInsideList","emit","ACTION_EVENT","notifyAction","toggleEl","dispatchEvent","event","initEvent","createEvent","checked","isChecked","listItem","querySelector","CHECKBOX_RADIO_SELECTOR","listElements","setCheckedCheckboxOrRadioAtIndex","CHECKBOX_SELECTOR","isCheckboxCheckedAtIndex","RADIO_SELECTOR","hasRadioAtIndex","hasCheckboxAtIndex","ele","setAttribute","tabIndexValue","listItemChildren","forEach","element","CHILD_ELEMENTS_TO_TOGGLE_TABINDEX","listItemIndex","setTabIndexForListItemChildren","focus","focusItemAtIndex","classList","remove","className","removeClassForElementIndex","add","addClassForElementIndex","removeAttribute","attr","removeAttributeForElementIndex","setAttributeForElementIndex","indexOf","getFocusedElementIndex","length","getListItemCount","Object","assign","MDCListFoundation","selectedIndex","radioSelectedListItem","singleSelectedListItem","singleSelection","setUseActivatedClass","cssClasses","LIST_ITEM_ACTIVATED_CLASS","map","preselectedItems","ARIA_CHECKED_CHECKBOX_SELECTOR","checkboxListItems","ARIA_CHECKED_RADIO_SELECTOR","LIST_ITEM_SELECTED_CLASS","ARIA_ROLE_CHECKBOX_SELECTOR","handleClick","toggleCheckbox","evt","target","matches","getListItemIndex_","handleKeydown","LIST_ITEM_CLASS","handleFocusOut","handleFocusIn","eventTarget","parentElement","ROOT","layout","FOCUSABLE_CHILD_ELEMENTS","vertical","direction","ARIA_ORIENTATION_HORIZONTAL","getAttribute","ARIA_ORIENTATION","initializeListType","addEventListener","handleClick_","focusOutEventListener_","focusInEventListener_","handleKeydown_","handleFocusOutEvent_","bind","handleFocusInEvent_","handleKeydownEvent_","handleClickEvent_","removeEventListener","args","MDCFoundation","i","selectedIndex_","filter","push","adapter_","ARIA_CHECKED","toggleCheckboxAtIndex_","isCheckboxList_","listSize","isIndexInRange_","Error","some","Array","setTabindexAtIndex_","targetIndex","Math","min","currentIndex","minIndex","reduce","isSelectableList_","isSingleSelectionList_","isRadioList_","focusedItemIndex_","ARIA_SELECTED","selectedClassName","useActivatedClass_","lastIndex","prevIndex","wrapFocus_","nextIndex","count","preventDefault","ELEMENTS_KEY_ALLOWED_IN","tagName","toLowerCase","setSelectedIndexOnAction_","preventDefaultEvent_","isEnter","isRootListItem","isSpace","focusLastElement","isEnd","focusFirstElement","isHome","focusPrevElement","isVertical_","arrowUp","arrowLeft","focusNextElement","arrowDown","arrowRight","key","keyCode","setTabindexToFirstSelectedItem_","setTimeout","setSingleSelectionAtIndex_","setRadioAtIndex_","setCheckboxAtIndex_","isIndexValid_","useActivated","defaultAdapter","adapter","attribute","MDCListAdapter","initCustomEvent","evtType","shouldBubble","evtData","bubbles","detail","CustomEvent","handler","destroy","initialSyncWithDOM","init","foundation","undefined","getDefaultFoundation","initialize","nativeMatches","selector","webkitMatchesSelector","msMatchesSelector","MdcRipple","EventEmitter","ElementRef","InjectionToken"],"mappings":"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"}