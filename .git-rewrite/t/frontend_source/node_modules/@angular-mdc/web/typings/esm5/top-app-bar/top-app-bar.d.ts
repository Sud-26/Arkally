import { AfterContentInit, AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, QueryList } from '@angular/core';
import { Platform } from '@angular-mdc/web/common';
import { MdcTopAppBarActionItem, MdcTopAppBarNavigationIcon } from './top-app-bar.directives';
/** Event object emitted by MdcTopAppBar navigation icon selected. */
export declare class MdcTopAppBarNavSelected {
    source: MdcTopAppBar;
    constructor(source: MdcTopAppBar);
}
export declare class MdcTopAppBar implements AfterContentInit, AfterViewInit, OnDestroy {
    private _ngZone;
    private _platform;
    private _changeDetectorRef;
    elementRef: ElementRef;
    /** Emits whenever the component is destroyed. */
    private _destroyed;
    private _isFoundationInit;
    fixed: boolean;
    private _fixed;
    prominent: boolean;
    private _prominent;
    short: boolean;
    private _short;
    shortCollapsed: boolean;
    private _shortCollapsed;
    dense: boolean;
    private _dense;
    fixedAdjustElement: HTMLElement | null;
    private _fixedAdjustElement;
    scrollTarget: any;
    private _scrollTarget;
    /** Event emitted when the navigation icon is selected. */
    readonly navigationSelected: EventEmitter<MdcTopAppBarNavSelected>;
    navigationIcon?: MdcTopAppBarNavigationIcon;
    actions: QueryList<MdcTopAppBarActionItem>;
    private _scrollTargetSubscription;
    private _createAdapter;
    private _foundation;
    constructor(_ngZone: NgZone, _platform: Platform, _changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef);
    ngAfterContentInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /** Sets the top app bar to fixed or not. */
    setFixed(fixed: boolean, isUserInput?: boolean): void;
    /** Sets the top app bar to prominent or not. */
    setProminent(prominent: boolean, isUserInput?: boolean): void;
    /** Sets the top app bar to dense variant. */
    setDense(dense: boolean, isUserInput?: boolean): void;
    /** Sets the top app bar to short or not. */
    setShort(short: boolean, isUserInput?: boolean): void;
    /** Sets the top app bar to short-collapsed or not. */
    setShortCollapsed(shortCollapsed: boolean, isUserInput?: boolean): void;
    isCollapsed(): boolean;
    private _initFoundation;
    private _resetFixedShort;
    private _initTopAppBar;
    private _removeFixedAdjustClasses;
    private _addFixedAdjustClass;
    private _destroyFoundation;
    private _initScrollHandler;
    private _getScrollOffset;
    /** Retrieves the DOM element of the component host. */
    private _getHostElement;
}
