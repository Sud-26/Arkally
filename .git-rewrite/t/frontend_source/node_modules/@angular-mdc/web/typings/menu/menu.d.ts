import { AfterContentInit, ElementRef, EventEmitter, OnDestroy } from '@angular/core';
import { MdcList, MdcListItem } from '@angular-mdc/web/list';
import { MdcMenuSurfaceBase } from '@angular-mdc/web/menu-surface';
export declare class MdcMenuSelectedEvent {
    index: number;
    source: MdcListItem;
    constructor(index: number, source: MdcListItem);
}
export declare class MdcMenuSelectionGroup {
    elementRef: ElementRef<HTMLElement>;
    constructor(elementRef: ElementRef<HTMLElement>);
}
export declare class MdcMenuSelectionGroupIcon {
    elementRef: ElementRef<HTMLElement>;
    constructor(elementRef: ElementRef<HTMLElement>);
}
export declare class MdcMenu extends MdcMenuSurfaceBase implements AfterContentInit, OnDestroy {
    /** Emits whenever the component is destroyed. */
    private _destroyed;
    private _uniqueId;
    id: string;
    wrapFocus: boolean;
    private _wrapFocus;
    readonly selected: EventEmitter<MdcMenuSelectedEvent>;
    _list: MdcList;
    private _createAdapter;
    private _menuFoundation;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    focus(): void;
    _handleKeydown(evt: KeyboardEvent): void;
    private _initList;
    /** Listens to action events on each list item. */
    private _listenForListItemActions;
}
