{"version":3,"file":"dialog-service.js","sources":["ng://dialog-service/lib/DialogService.ts","ng://dialog-service/lib/mat/Alert.component.ts","ng://dialog-service/lib/mat/Progress.component.ts","ng://dialog-service/lib/mat/Confirm.component.ts","ng://dialog-service/lib/util/assert.ts","ng://dialog-service/lib/util/markAllAsDirtyAndTouched.ts","ng://dialog-service/lib/BaseFormComponent.ts","ng://dialog-service/lib/mat/Form.component.ts","ng://dialog-service/lib/MatDialogService.ts","ng://dialog-service/lib/MatDialogService.module.ts","ng://dialog-service/lib/mdc/Progress.component.ts","ng://dialog-service/lib/mdc/Alert.component.ts","ng://dialog-service/lib/mdc/Confirm.component.ts","ng://dialog-service/lib/MdcDialogService.ts","ng://dialog-service/lib/MdcDialogService.module.ts"],"sourcesContent":["import { Observable, Subject } from 'rxjs'\nimport { QuickFormField } from 'ng-quick-form'\nimport { FormGroup } from '@angular/forms'\nimport { ChangeDetectorRef } from '@angular/core'\n\n/**\n * The DialogService class exposes functions used to create alert, confirmation, progress and form\n *  based dialogs.\n */\nexport abstract class DialogService {\n  /**\n   * Display progress dialog that blocks UI interaction until processing of completes.\n   *\n   * When observable completes, return the last value emitted by observable workload.\n   *\n   * If observable throws error, progress dialog will close with undefined value.\n   *\n   * @param work Observable workload\n   * @param title Dialog title (defaults to 'Please Wait...')\n   * @param options Dialog options. 'dialogOptions' are options that will be passed to underlying\n   * dialog implementation (i.e. Angular Material). It provides a way to supply options to\n   * MatDialogConfig.\n   */\n  abstract withProgress<T = any> (work: Observable<T>, title?: string,\n                                  options?: {\n                                    dialogOptions?: { [ key: string ]: any }\n                                  }): Observable<T | undefined>\n\n  /**\n   * Display alert dialog.\n   *\n   * @param title Dialog title\n   * @param options Dialog options. 'content' represents content to be display in dialog\n   * @returns Observable with true value if user clicks OK to accept the alert message, false\n   * otherwise\n   */\n  abstract withAlert (\n    title: string,\n    options?: {\n      content?: string\n      acceptButton?: string\n      dialogOptions?: { [ key: string ]: any }\n    }\n  ): Observable<boolean>\n\n  /**\n   * Display confirmation dialog.\n   *\n   * @param title Optional dialog title (defaults to 'Confirm?')\n   * @param options Dialog options. 'content' represents content to be display in dialog;\n   * 'acceptButton' represents label to accept confirmation (defaults to 'Yes'); 'cancelButton'\n   * represents label to cancel confirmation (defaults to 'No')\n   * @returns Observable with true value if user accepts the confirmation, false otherwise\n   */\n  abstract withConfirm (\n    title?: string,\n    options?: {\n      content?: string\n      acceptButton?: string\n      cancelButton?: string\n      cancelMessage?: string\n      dialogOptions?: { [ key: string ]: any }\n    }\n  ): Observable<boolean>\n\n  /**\n   * Display a dialog with form fields for data collection. Each form field definition describes:\n   *\n   * - title. Label for the field. Required.\n   *\n   * - id. Unique identifier for the field. Optional. Defaults to camel case representation of\n   * title.\n   *\n   * - type. Field type. Valid values are 'text', 'textarea', 'switch', 'radio', 'checkbox',\n   * 'select' and 'password'. Optional. Defaults to 'text'.\n   *\n   * - value. Default value for the field when the form is displayed. Optional.\n   *\n   * - options. List of possible options for 'radio', 'checkbox' and 'select' field types. Options\n   * can be specified as an \"array of string\" or an \"array of object with 'value' and 'label' as\n   * keys\". Optional.\n   *\n   * - required. Flag to indicate that field input is required. Optional. Defaults to false.\n   *\n   * - validators. Array of Angular validation functions (i.e. ValidatorFn). Optional.\n   *\n   * - asyncValidators. Array of asynchronous Angular validation functions (i.e. AsyncValidatorFn).\n   * Optional.\n   *\n   * The dialog will close and return form values (as a JSON object) when user clicks on submit\n   * button (provided all field validation passed).If user cancels the form, the dialog will close\n   * and return false.\n   *\n   * @param title\n   * @param fields\n   * @param options Dialog options.\n   *  - 'content' represents content to be display in dialog;\n   *  - 'submitButton' represents label to submit form (defaults to 'Submit');\n   *  - 'cancelButton' represents label to cancel form (defaults to 'Cancel');\n   *  - 'layout' defines the form's layout attributes (uses \"flex-cell\");\n   *  - 'rawValue' is used to get form raw value. Default is false.\n   *  - 'valueChanges' is used to receive form value change (experimental)\n   *  - 'formCreated' if specified, this callback function is called when the form is created. It\n   *      let user perform post FormGroup creation processing (experimental). e.g. to listen to\n   *      specific field value changes for advanced form manipulation/validation requirements.\n   * @returns Observable with form value object on submission, or false if form was cancelled\n   */\n  abstract withForm (\n    title: string,\n    fields: QuickFormField[],\n    options?: {\n      content?: string\n      submitButton?: string\n      cancelButton?: string\n      layout?: {\n        flexCell?: boolean | 6 | 12\n        gutter?: boolean\n        growItems?: boolean\n        debug?: boolean\n      },\n      rawValue?: boolean,\n      valueChanges?: Subject<{ value: any, form: FormGroup, cd: ChangeDetectorRef }>\n      formCreated?: (form: FormGroup, cd: ChangeDetectorRef) => void\n      dialogOptions?: { [ key: string ]: any }\n    }): Observable<any>\n}\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core'\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog'\n\n// @dynamic\n@Component({\n  templateUrl: './Alert.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AlertComponent {\n  constructor (@Inject(MAT_DIALOG_DATA) public data: {\n    title: string\n    acceptButton: string\n    content?: string\n  }) {\n  }\n}\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core'\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog'\n\n// @dynamic\n@Component({\n  templateUrl: './Progress.component.html',\n  styleUrls: [ './Progress.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProgressComponent {\n  constructor (@Inject(MAT_DIALOG_DATA) public data: { title: string }\n  ) {\n  }\n}\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core'\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog'\n\n// @dynamic\n@Component({\n  templateUrl: './Confirm.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConfirmComponent {\n  constructor (@Inject(MAT_DIALOG_DATA) public data: {\n    title: string\n    acceptButton: string\n    cancelButton: string\n    content?: string\n  }) {\n  }\n}\n","export const assert = (condition: boolean, message?: string) => {\n  if (!condition) {\n    if (message) {\n      throw new Error(`Assertion error: ${message}`)\n    } else {\n      throw new Error('Assertion error: Unexpected condition')\n    }\n  }\n}\n","import { AbstractControl, FormArray, FormGroup } from '@angular/forms'\n\n/**\n * Mark form control and all descendents as dirty and touched.\n *\n * @param control\n */\nexport const markAllAsDirtyAndTouched = (control: AbstractControl) => {\n  control.markAsDirty()\n  control.markAsTouched()\n  if (control instanceof FormGroup) {\n    const keys = Object.keys(control.controls)\n    for (let key of keys) {\n      markAllAsDirtyAndTouched(control.controls[ key ])\n    }\n  } else if (control instanceof FormArray) {\n    for (let child of control.controls) {\n      markAllAsDirtyAndTouched(child)\n    }\n  }\n}\n","import { FormGroup } from '@angular/forms'\nimport { ChangeDetectorRef, OnDestroy } from '@angular/core'\nimport { DialogService } from './DialogService'\nimport { debounceTime, filter, startWith, take, tap } from 'rxjs/operators'\nimport { assert } from './util/assert'\nimport { QuickForm, QuickFormField } from 'ng-quick-form'\nimport { markAllAsDirtyAndTouched } from './util/markAllAsDirtyAndTouched'\nimport { Subject, Subscription } from 'rxjs'\n\ntype Closeable = {\n  close: (result: any) => void\n}\n\n/**\n * Manage form creation and submission.\n */\nexport class BaseFormComponent implements OnDestroy {\n  submitted = false\n  form: FormGroup\n  formSubscription?: Subscription\n\n  constructor (\n    private cd: ChangeDetectorRef,\n    private dialogService: DialogService,\n    private closeable: Closeable,\n    private cancelMessage: string,\n    public formFields: QuickFormField[],\n    private rawValue: boolean,\n    private valueChanges?: Subject<{ value: any, form: FormGroup, cd: ChangeDetectorRef }>,\n    private formCreated?: (form: FormGroup, cd: ChangeDetectorRef) => void\n  ) {\n    this.form = QuickForm.makeForm(this.formFields)\n\n    if (formCreated) {\n      formCreated(this.form, this.cd)\n    }\n    if (this.valueChanges) {\n      this.formSubscription = this.form.valueChanges.pipe(\n        debounceTime(100),\n        tap(value => this.valueChanges!.next({\n          value, form: this.form, cd\n        }))\n      ).subscribe()\n    }\n  }\n\n  doClose () {\n    // close form dialog, return false as result\n    this.dialogService.withConfirm(this.cancelMessage).pipe(\n      filter(confirm => confirm),\n      tap(() => this.closeable.close(false))\n    ).subscribe()\n  }\n\n  doSubmit () {\n    if (this.form.status === 'PENDING') {\n      // if form is pending validation, let's wait...\n      this.dialogService.withProgress(this.form.statusChanges.pipe(\n        startWith(this.form.status),\n        filter(status => status !== 'PENDING'),\n        take(1),\n        tap(() => this.doNonPendingSubmit())\n      ))\n    } else {\n      this.doNonPendingSubmit()\n    }\n  }\n\n  doNonPendingSubmit () {\n    assert(this.form.status !== 'PENDING', 'Form status should not be pending')\n\n    markAllAsDirtyAndTouched(this.form)\n    this.submitted = true // attempted to submit (affects validation messages)\n    this.cd.markForCheck()\n    if (!this.form.valid) {\n      return\n    }\n\n    // close form dialog, return form value object as result\n    this.closeable.close(QuickForm.preProcessFormValues(\n      this.rawValue ? this.form.getRawValue() : this.form.value))\n  }\n\n  ngOnDestroy (): void {\n    if (this.formSubscription) {\n      this.formSubscription.unsubscribe()\n    }\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject } from '@angular/core'\nimport { DialogService } from '../DialogService'\nimport { BaseFormComponent } from '../BaseFormComponent'\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog'\nimport { QuickFormField } from 'ng-quick-form'\nimport { Subject } from 'rxjs'\nimport { FormGroup } from '@angular/forms'\n\n// @dynamic\n@Component({\n  templateUrl: './Form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class FormComponent extends BaseFormComponent {\n  constructor (\n    cd: ChangeDetectorRef,\n    dialogRef: MatDialogRef<FormComponent>,\n    dialogService: DialogService,\n    @Inject(MAT_DIALOG_DATA) public data: {\n      title: string\n      fields: QuickFormField[]\n      content?: string\n      submitButton: string\n      cancelButton: string\n      cancelMessage: string\n      rawValue: boolean\n      layout?: {\n        flexCell?: boolean | 6 | 12\n        gutter?: boolean\n        growItems?: boolean\n        debug?: boolean\n      }\n      valueChanges?: Subject<{ value: any, form: FormGroup, cd: ChangeDetectorRef }>,\n      formCreated?: (form: FormGroup, cd: ChangeDetectorRef) => void\n    }\n  ) {\n    super(cd, dialogService, dialogRef, data.cancelMessage, data.fields,\n      data.rawValue, data.valueChanges, data.formCreated)\n  }\n\n  get attrFlexCell () {\n    const flexCell = this.data.layout && this.data.layout.flexCell\n    // must return null for Angular to remove the attribute\n    return flexCell ? true : null\n  }\n\n  get attrGutter () {\n    const gutter = this.data.layout && this.data.layout.gutter\n    // must return null for Angular to remove the attribute\n    return gutter ? true : null\n  }\n\n  get attrGrowItems () {\n    const growItems = this.data.layout && this.data.layout.growItems\n    // must return null for Angular to remove the attribute\n    return growItems ? true : null\n  }\n\n  get attrDefaultCell6 () {\n    const flexCell = this.data.layout && this.data.layout.flexCell\n    // must return null for Angular to remove the attribute\n    return flexCell === 6 ? true : null\n  }\n\n  get attrDefaultCell12 () {\n    const flexCell = this.data.layout && this.data.layout.flexCell\n    // must return null for Angular to remove the attribute\n    return flexCell === 12 ? true : null\n  }\n\n  get attrDebug () {\n    const debug = this.data.layout && this.data.layout.debug\n    // must return null for Angular to remove the attribute\n    return debug ? true : null\n  }\n}\n","import { ChangeDetectorRef, Injectable } from '@angular/core'\nimport { Observable, Subject } from 'rxjs'\nimport { DialogService } from './DialogService'\nimport { MatDialog } from '@angular/material/dialog'\nimport { concatMap, finalize, map, tap } from 'rxjs/operators'\nimport { AlertComponent } from './mat/Alert.component'\nimport { ProgressComponent } from './mat/Progress.component'\nimport { ConfirmComponent } from './mat/Confirm.component'\nimport { FormComponent } from './mat/Form.component'\nimport { QuickFormField } from 'ng-quick-form'\nimport { FormGroup } from '@angular/forms'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatDialogService extends DialogService {\n  constructor (private dialog: MatDialog) {\n    super()\n  }\n\n  withProgress<T = any> (\n    work: Observable<T>, title?: string,\n    options?: {\n      dialogOptions?: { [ key: string ]: any }\n    }): Observable<T | undefined> {\n    title = title || 'Please Wait...'\n    let workOutput: T\n\n    const ref = this.dialog.open(ProgressComponent, {\n      disableClose: true,\n      data: { title },\n      ...(options && options.dialogOptions || {})\n    })\n\n    ref.afterOpened().pipe(\n      concatMap(() => work),\n      tap(val => workOutput = val), // set workOutput\n      finalize(() => ref.close())\n    ).subscribe()\n\n    return ref.afterClosed().pipe(\n      map(() => workOutput) // return workOutput\n    )\n  }\n\n  withAlert (title: string, options?: {\n    content?: string\n    acceptButton?: string\n    dialogOptions?: { [ key: string ]: any }\n  }): Observable<boolean> {\n    options = options || {}\n    options.acceptButton = options.acceptButton || 'OK'\n\n    const dialogRef = this.dialog.open(AlertComponent, {\n      disableClose: true,\n      minWidth: 200,\n      data: { title, ...options },\n      ...(options && options.dialogOptions || {})\n    })\n\n    return dialogRef.afterClosed().pipe(\n      map(result => result === true)\n    )\n  }\n\n  withConfirm (title?: string, options?: {\n    content?: string\n    acceptButton?: string\n    cancelButton?: string\n    dialogOptions?: { [ key: string ]: any }\n  }): Observable<boolean> {\n    title = title || 'Confirm?'\n    options = options || {}\n    options.acceptButton = options.acceptButton || 'Yes'\n    options.cancelButton = options.cancelButton || 'No'\n\n    const ref = this.dialog.open(ConfirmComponent, {\n      disableClose: true,\n      data: { title, ...options },\n      ...(options && options.dialogOptions || {})\n    })\n    return ref.afterClosed().pipe(\n      map(result => result)\n    )\n  }\n\n  withForm (title: string, fields: QuickFormField[], options?: {\n    content?: string\n    submitButton?: string\n    cancelButton?: string\n    cancelMessage?: string\n    rawValue?: boolean\n    layout?: {\n      flexCell?: boolean | 6 | 12\n      gutter?: boolean\n      growItems?: boolean\n      debug?: boolean\n    },\n    valueChanges?: Subject<{ value: any, form: FormGroup, cd: ChangeDetectorRef }>\n    formCreated?: (form: FormGroup, cd: ChangeDetectorRef) => void\n    dialogOptions?: { [ key: string ]: any }\n  }): Observable<any> {\n    options = options || {}\n    options.submitButton = options.submitButton || 'Submit'\n    options.cancelButton = options.cancelButton || 'Cancel'\n    options.cancelMessage = options.cancelMessage || 'Cancel?'\n    options.rawValue = options.rawValue || false\n\n    const ref = this.dialog.open(FormComponent, {\n      disableClose: true,\n      data: { title, fields, ...options },\n      ...(options && options.dialogOptions || {})\n    })\n\n    return ref.afterClosed()\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { NgModule } from '@angular/core'\nimport { DialogService } from './DialogService'\nimport { AlertComponent } from './mat/Alert.component'\nimport { MatDialogService } from './MatDialogService'\nimport { ProgressComponent } from './mat/Progress.component'\nimport { ConfirmComponent } from './mat/Confirm.component'\nimport { FormComponent } from './mat/Form.component'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\nimport { MatRadioModule } from '@angular/material/radio'\nimport { MatSelectModule } from '@angular/material/select'\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'\nimport { QuickFormModule } from 'ng-quick-form'\n\n@NgModule({\n  declarations: [\n    AlertComponent,\n    ConfirmComponent,\n    FormComponent,\n    ProgressComponent\n  ],\n  entryComponents: [\n    AlertComponent,\n    ConfirmComponent,\n    FormComponent,\n    ProgressComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatButtonModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    QuickFormModule\n  ],\n  providers: [\n    MatDialogService,\n    { provide: DialogService, useClass: MatDialogService }\n  ]\n})\nexport class MatDialogServiceModule {\n}\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core'\nimport { MDC_DIALOG_DATA } from '@angular-mdc/web'\n\n// @dynamic\n@Component({\n  templateUrl: './Progress.component.html',\n  styleUrls: [ './Progress.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProgressComponent {\n  constructor (@Inject(MDC_DIALOG_DATA) public data: { title: string }\n  ) {\n  }\n}\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core'\nimport { MDC_DIALOG_DATA } from '@angular-mdc/web'\n\n// @dynamic\n@Component({\n  templateUrl: './Alert.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AlertComponent {\n  constructor (@Inject(MDC_DIALOG_DATA) public data: {\n    title: string\n    acceptButton: string\n    content?: string\n  }) {\n  }\n}\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core'\nimport { MDC_DIALOG_DATA } from '@angular-mdc/web'\n\n// @dynamic\n@Component({\n  templateUrl: './Confirm.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConfirmComponent {\n  constructor (@Inject(MDC_DIALOG_DATA) public data: {\n    title: string\n    acceptButton: string\n    cancelButton: string\n    content?: string\n  }) {\n  }\n}\n","import { MdcDialog } from '@angular-mdc/web'\nimport { Injectable } from '@angular/core'\nimport { Observable, throwError } from 'rxjs'\nimport { concatMap, finalize, map, tap } from 'rxjs/operators'\nimport { DialogService } from './DialogService'\nimport { ProgressComponent } from './mdc/Progress.component'\nimport { AlertComponent } from './mdc/Alert.component'\nimport { ConfirmComponent } from './mdc/Confirm.component'\nimport { QuickFormField } from 'ng-quick-form'\n\n/**\n * @deprecated No longer supported. Not enough time to maintain this implementation, contributions\n * welcomed.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MdcDialogService extends DialogService {\n  constructor (private dialog: MdcDialog) {\n    super()\n  }\n\n  withProgress<T = any> (work: Observable<T>, title?: string): Observable<T | undefined> {\n    title = title || 'Please Wait...'\n    let workOutput: T\n\n    const ref = this.dialog.open(ProgressComponent, {\n      clickOutsideToClose: false,\n      escapeToClose: false,\n      data: { title }\n    })\n\n    ref.afterOpened().pipe(\n      concatMap(() => work),\n      tap(val => workOutput = val), // set workOutput\n      finalize(() => ref.close())\n    ).subscribe()\n\n    return ref.afterClosed().pipe(\n      map(() => workOutput) // return workOutput\n    )\n  }\n\n  withAlert (title: string, options?: { content?: string, acceptButton?: string }): Observable<boolean> {\n    options = options || {}\n    options.acceptButton = options.acceptButton || 'OK'\n\n    const dialogRef = this.dialog.open(AlertComponent, {\n      escapeToClose: false,\n      clickOutsideToClose: false,\n      data: { title, ...options }\n    })\n\n    return dialogRef.afterClosed().pipe(\n      map(result => result === 'accept')\n    )\n  }\n\n  withConfirm (title?: string, options?: {\n    content?: string\n    acceptButton?: string\n    cancelButton?: string\n  }): Observable<boolean> {\n    title = title || 'Confirm?'\n    options = options || {}\n    options.acceptButton = options.acceptButton || 'Yes'\n    options.cancelButton = options.cancelButton || 'No'\n\n    const ref = this.dialog.open(ConfirmComponent, {\n      escapeToClose: false,\n      clickOutsideToClose: false,\n      data: { title, ...options }\n    })\n    return ref.afterClosed().pipe(\n      map(result => result === 'accept')\n    )\n  }\n\n  withForm (title: string, fields: QuickFormField[], options?: {\n    content?: string\n    submitButton?: string\n    cancelButton?: string\n    cancelMessage?: string\n  }): Observable<any> {\n    return throwError('withForm() is not supported in MDC mode')\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { NgModule } from '@angular/core'\nimport { DialogService } from './DialogService'\nimport { MdcDialogService } from './MdcDialogService'\nimport { AlertComponent } from './mdc/Alert.component'\nimport { ConfirmComponent } from './mdc/Confirm.component'\nimport { ProgressComponent } from './mdc/Progress.component'\nimport {\n  MdcButtonModule,\n  MdcCheckboxModule,\n  MdcDialogModule,\n  MdcFormFieldModule,\n  MdcLinearProgressModule,\n  MdcRadioModule,\n  MdcSelectModule,\n  MdcSwitchModule,\n  MdcTextFieldModule\n} from '@angular-mdc/web'\n\n@NgModule({\n  declarations: [\n    AlertComponent,\n    ConfirmComponent,\n    ProgressComponent\n  ],\n  entryComponents: [\n    AlertComponent,\n    ConfirmComponent,\n    ProgressComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MdcButtonModule,\n    MdcCheckboxModule,\n    MdcDialogModule,\n    MdcFormFieldModule,\n    MdcLinearProgressModule,\n    MdcRadioModule,\n    MdcSelectModule,\n    MdcSwitchModule,\n    MdcTextFieldModule\n  ],\n  providers: [\n    MdcDialogService,\n    { provide: DialogService, useClass: MdcDialogService }\n  ]\n})\nexport class MdcDialogServiceModule {\n}\n"],"names":["ProgressComponent","AlertComponent","ConfirmComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AASA,MAAsB,aAAa;CAoHlC;;;;;;AC7HD;AAQA,MAAa,cAAc;;;;IACzB,YAA6C,IAI5C;QAJ4C,SAAI,GAAJ,IAAI,CAIhD;KACA;;;YAVF,SAAS,SAAC;gBACT,oTAAqC;gBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;;4CAEe,MAAM,SAAC,eAAe;;;;;;;ACTtC;AASA,MAAa,iBAAiB;;;;IAC5B,YAA6C,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;KAEnE;;;YARF,SAAS,SAAC;gBACT,mFAAwC;gBAExC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAChD;;;;4CAEe,MAAM,SAAC,eAAe;;;;;;;ACVtC;AAQA,MAAa,gBAAgB;;;;IAC3B,YAA6C,IAK5C;QAL4C,SAAI,GAAJ,IAAI,CAKhD;KACA;;;YAXF,SAAS,SAAC;gBACT,wYAAuC;gBACvC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;;4CAEe,MAAM,SAAC,eAAe;;;;;;;;ACTtC,MAAa,MAAM;;;;;AAAG,CAAC,SAAkB,EAAE,OAAgB;IACzD,IAAI,CAAC,SAAS,EAAE;QACd,IAAI,OAAO,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,oBAAoB,OAAO,EAAE,CAAC,CAAA;SAC/C;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAA;SACzD;KACF;CACF,CAAA;;;;;;ACRD;;;;;;AAOA,MAAa,wBAAwB;;;;AAAG,CAAC,OAAwB;IAC/D,OAAO,CAAC,WAAW,EAAE,CAAA;IACrB,OAAO,CAAC,aAAa,EAAE,CAAA;IACvB,IAAI,OAAO,YAAY,SAAS,EAAE;;cAC1B,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC1C,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;YACpB,wBAAwB,CAAC,OAAO,CAAC,QAAQ,CAAE,GAAG,CAAE,CAAC,CAAA;SAClD;KACF;SAAM,IAAI,OAAO,YAAY,SAAS,EAAE;QACvC,KAAK,IAAI,KAAK,IAAI,OAAO,CAAC,QAAQ,EAAE;YAClC,wBAAwB,CAAC,KAAK,CAAC,CAAA;SAChC;KACF;CACF,CAAA;;;;;;ACjBD;;;AAaA,MAAa,iBAAiB;;;;;;;;;;;IAK5B,YACU,EAAqB,EACrB,aAA4B,EAC5B,SAAoB,EACpB,aAAqB,EACtB,UAA4B,EAC3B,QAAiB,EACjB,YAA8E,EAC9E,WAA8D;QAP9D,OAAE,GAAF,EAAE,CAAmB;QACrB,kBAAa,GAAb,aAAa,CAAe;QAC5B,cAAS,GAAT,SAAS,CAAW;QACpB,kBAAa,GAAb,aAAa,CAAQ;QACtB,eAAU,GAAV,UAAU,CAAkB;QAC3B,aAAQ,GAAR,QAAQ,CAAS;QACjB,iBAAY,GAAZ,YAAY,CAAkE;QAC9E,gBAAW,GAAX,WAAW,CAAmD;QAZxE,cAAS,GAAG,KAAK,CAAA;QAcf,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;QAE/C,IAAI,WAAW,EAAE;YACf,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAA;SAChC;QACD,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CACjD,YAAY,CAAC,GAAG,CAAC,EACjB,GAAG;;;;YAAC,KAAK,IAAI,mBAAA,IAAI,CAAC,YAAY,GAAE,IAAI,CAAC;gBACnC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE;aAC3B,CAAC,EAAC,CACJ,CAAC,SAAS,EAAE,CAAA;SACd;KACF;;;;IAED,OAAO;;QAEL,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CACrD,MAAM;;;;QAAC,OAAO,IAAI,OAAO,EAAC,EAC1B,GAAG;;;QAAC,MAAM,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,EAAC,CACvC,CAAC,SAAS,EAAE,CAAA;KACd;;;;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;;YAElC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAC1D,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAC3B,MAAM;;;;YAAC,MAAM,IAAI,MAAM,KAAK,SAAS,EAAC,EACtC,IAAI,CAAC,CAAC,CAAC,EACP,GAAG;;;YAAC,MAAM,IAAI,CAAC,kBAAkB,EAAE,EAAC,CACrC,CAAC,CAAA;SACH;aAAM;YACL,IAAI,CAAC,kBAAkB,EAAE,CAAA;SAC1B;KACF;;;;IAED,kBAAkB;QAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE,mCAAmC,CAAC,CAAA;QAE3E,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;QACrB,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAA;QACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACpB,OAAM;SACP;;QAGD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,oBAAoB,CACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;KAC9D;;;;IAED,WAAW;QACT,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAA;SACpC;KACF;CACF;;;;;;ACxFD;AAcA,MAAa,aAAc,SAAQ,iBAAiB;;;;;;;IAClD,YACE,EAAqB,EACrB,SAAsC,EACtC,aAA4B,EACI,IAgB/B;QAED,KAAK,CAAC,EAAE,EAAE,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,EACjE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAA;QAnBrB,SAAI,GAAJ,IAAI,CAgBnC;KAIF;;;;IAED,IAAI,YAAY;;cACR,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ;;;;QAE9D,OAAO,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAA;KAC9B;;;;IAED,IAAI,UAAU;;cACN,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM;;;;QAE1D,OAAO,MAAM,GAAG,IAAI,GAAG,IAAI,CAAA;KAC5B;;;;IAED,IAAI,aAAa;;cACT,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS;;;;QAEhE,OAAO,SAAS,GAAG,IAAI,GAAG,IAAI,CAAA;KAC/B;;;;IAED,IAAI,gBAAgB;;cACZ,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ;;;;QAE9D,OAAO,QAAQ,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,CAAA;KACpC;;;;IAED,IAAI,iBAAiB;;cACb,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ;;;;QAE9D,OAAO,QAAQ,KAAK,EAAE,GAAG,IAAI,GAAG,IAAI,CAAA;KACrC;;;;IAED,IAAI,SAAS;;cACL,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK;;;;QAExD,OAAO,KAAK,GAAG,IAAI,GAAG,IAAI,CAAA;KAC3B;;;YAlEF,SAAS,SAAC;gBACT,m+BAAoC;gBACpC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;;YAZiC,iBAAiB;YAGzB,YAAY;YAF7B,aAAa;4CAkBjB,MAAM,SAAC,eAAe;;;;;;;ACnB3B,MAea,gBAAiB,SAAQ,aAAa;;;;IACjD,YAAqB,MAAiB;QACpC,KAAK,EAAE,CAAA;QADY,WAAM,GAAN,MAAM,CAAW;KAErC;;;;;;;;IAED,YAAY,CACV,IAAmB,EAAE,KAAc,EACnC,OAEC;QACD,KAAK,GAAG,KAAK,IAAI,gBAAgB,CAAA;;YAC7B,UAAa;;cAEX,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,kBAC5C,YAAY,EAAE,IAAI,EAClB,IAAI,EAAE,EAAE,KAAK,EAAE,KACX,OAAO,IAAI,OAAO,CAAC,aAAa,IAAI,EAAE,GAC1C;QAEF,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,CACpB,SAAS;;;QAAC,MAAM,IAAI,EAAC,EACrB,GAAG;;;;QAAC,GAAG,IAAI,UAAU,GAAG,GAAG,EAAC;QAC5B,QAAQ;;;QAAC,MAAM,GAAG,CAAC,KAAK,EAAE,EAAC,CAC5B,CAAC,SAAS,EAAE,CAAA;QAEb,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,CAC3B,GAAG;;;QAAC,MAAM,UAAU,EAAC;SACtB,CAAA;KACF;;;;;;IAED,SAAS,CAAE,KAAa,EAAE,OAIzB;QACC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAA;QACvB,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,IAAI,CAAA;;cAE7C,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,kBAC/C,YAAY,EAAE,IAAI,EAClB,QAAQ,EAAE,GAAG,EACb,IAAI,kBAAI,KAAK,IAAK,OAAO,MACrB,OAAO,IAAI,OAAO,CAAC,aAAa,IAAI,EAAE,GAC1C;QAEF,OAAO,SAAS,CAAC,WAAW,EAAE,CAAC,IAAI,CACjC,GAAG;;;;QAAC,MAAM,IAAI,MAAM,KAAK,IAAI,EAAC,CAC/B,CAAA;KACF;;;;;;IAED,WAAW,CAAE,KAAc,EAAE,OAK5B;QACC,KAAK,GAAG,KAAK,IAAI,UAAU,CAAA;QAC3B,OAAO,GAAG,OAAO,IAAI,EAAE,CAAA;QACvB,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,KAAK,CAAA;QACpD,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,IAAI,CAAA;;cAE7C,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,kBAC3C,YAAY,EAAE,IAAI,EAClB,IAAI,kBAAI,KAAK,IAAK,OAAO,MACrB,OAAO,IAAI,OAAO,CAAC,aAAa,IAAI,EAAE,GAC1C;QACF,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,CAC3B,GAAG;;;;QAAC,MAAM,IAAI,MAAM,EAAC,CACtB,CAAA;KACF;;;;;;;IAED,QAAQ,CAAE,KAAa,EAAE,MAAwB,EAAE,OAelD;QACC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAA;QACvB,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,QAAQ,CAAA;QACvD,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,QAAQ,CAAA;QACvD,OAAO,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,IAAI,SAAS,CAAA;QAC1D,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,KAAK,CAAA;;cAEtC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,kBACxC,YAAY,EAAE,IAAI,EAClB,IAAI,kBAAI,KAAK,EAAE,MAAM,IAAK,OAAO,MAC7B,OAAO,IAAI,OAAO,CAAC,aAAa,IAAI,EAAE,GAC1C;QAEF,OAAO,GAAG,CAAC,WAAW,EAAE,CAAA;KACzB;;;YAvGF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAXQ,SAAS;;;;;;;;ACHlB,MAoDa,sBAAsB;;;YAjClC,QAAQ,SAAC;gBACR,YAAY,EAAE;oBACZ,cAAc;oBACd,gBAAgB;oBAChB,aAAa;oBACb,iBAAiB;iBAClB;gBACD,eAAe,EAAE;oBACf,cAAc;oBACd,gBAAgB;oBAChB,aAAa;oBACb,iBAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,YAAY;oBACZ,WAAW;oBACX,mBAAmB;oBAEnB,eAAe;oBACf,iBAAiB;oBACjB,eAAe;oBACf,cAAc;oBACd,wBAAwB;oBACxB,cAAc;oBACd,eAAe;oBACf,oBAAoB;oBACpB,eAAe;iBAChB;gBACD,SAAS,EAAE;oBACT,gBAAgB;oBAChB,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,gBAAgB,EAAE;iBACvD;aACF;;;;;;;ACnDD;AASA,MAAaA,mBAAiB;;;;IAC5B,YAA6C,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;KAEnE;;;YARF,SAAS,SAAC;gBACT,4dAAwC;gBAExC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAChD;;;;4CAEe,MAAM,SAAC,eAAe;;;;;;;ACVtC;AAQA,MAAaC,gBAAc;;;;IACzB,YAA6C,IAI5C;QAJ4C,SAAI,GAAJ,IAAI,CAIhD;KACA;;;YAVF,SAAS,SAAC;gBACT,8gBAAqC;gBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;;4CAEe,MAAM,SAAC,eAAe;;;;;;;ACTtC;AAQA,MAAaC,kBAAgB;;;;IAC3B,YAA6C,IAK5C;QAL4C,SAAI,GAAJ,IAAI,CAKhD;KACA;;;YAXF,SAAS,SAAC;gBACT,wpBAAuC;gBACvC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;;4CAEe,MAAM,SAAC,eAAe;;;;;;;ACTtC;;;;AAiBA,MAAa,gBAAiB,SAAQ,aAAa;;;;IACjD,YAAqB,MAAiB;QACpC,KAAK,EAAE,CAAA;QADY,WAAM,GAAN,MAAM,CAAW;KAErC;;;;;;;IAED,YAAY,CAAW,IAAmB,EAAE,KAAc;QACxD,KAAK,GAAG,KAAK,IAAI,gBAAgB,CAAA;;YAC7B,UAAa;;cAEX,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAACF,mBAAiB,EAAE;YAC9C,mBAAmB,EAAE,KAAK;YAC1B,aAAa,EAAE,KAAK;YACpB,IAAI,EAAE,EAAE,KAAK,EAAE;SAChB,CAAC;QAEF,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,CACpB,SAAS;;;QAAC,MAAM,IAAI,EAAC,EACrB,GAAG;;;;QAAC,GAAG,IAAI,UAAU,GAAG,GAAG,EAAC;QAC5B,QAAQ;;;QAAC,MAAM,GAAG,CAAC,KAAK,EAAE,EAAC,CAC5B,CAAC,SAAS,EAAE,CAAA;QAEb,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,CAC3B,GAAG;;;QAAC,MAAM,UAAU,EAAC;SACtB,CAAA;KACF;;;;;;IAED,SAAS,CAAE,KAAa,EAAE,OAAqD;QAC7E,OAAO,GAAG,OAAO,IAAI,EAAE,CAAA;QACvB,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,IAAI,CAAA;;cAE7C,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAACC,gBAAc,EAAE;YACjD,aAAa,EAAE,KAAK;YACpB,mBAAmB,EAAE,KAAK;YAC1B,IAAI,kBAAI,KAAK,IAAK,OAAO,CAAE;SAC5B,CAAC;QAEF,OAAO,SAAS,CAAC,WAAW,EAAE,CAAC,IAAI,CACjC,GAAG;;;;QAAC,MAAM,IAAI,MAAM,KAAK,QAAQ,EAAC,CACnC,CAAA;KACF;;;;;;IAED,WAAW,CAAE,KAAc,EAAE,OAI5B;QACC,KAAK,GAAG,KAAK,IAAI,UAAU,CAAA;QAC3B,OAAO,GAAG,OAAO,IAAI,EAAE,CAAA;QACvB,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,KAAK,CAAA;QACpD,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,IAAI,CAAA;;cAE7C,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAACC,kBAAgB,EAAE;YAC7C,aAAa,EAAE,KAAK;YACpB,mBAAmB,EAAE,KAAK;YAC1B,IAAI,kBAAI,KAAK,IAAK,OAAO,CAAE;SAC5B,CAAC;QACF,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,CAC3B,GAAG;;;;QAAC,MAAM,IAAI,MAAM,KAAK,QAAQ,EAAC,CACnC,CAAA;KACF;;;;;;;IAED,QAAQ,CAAE,KAAa,EAAE,MAAwB,EAAE,OAKlD;QACC,OAAO,UAAU,CAAC,yCAAyC,CAAC,CAAA;KAC7D;;;YAvEF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAhBQ,SAAS;;;;;;;;ACAlB,MAkDa,sBAAsB;;;YA9BlC,QAAQ,SAAC;gBACR,YAAY,EAAE;oBACZD,gBAAc;oBACdC,kBAAgB;oBAChBF,mBAAiB;iBAClB;gBACD,eAAe,EAAE;oBACfC,gBAAc;oBACdC,kBAAgB;oBAChBF,mBAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,YAAY;oBACZ,WAAW;oBACX,mBAAmB;oBACnB,eAAe;oBACf,iBAAiB;oBACjB,eAAe;oBACf,kBAAkB;oBAClB,uBAAuB;oBACvB,cAAc;oBACd,eAAe;oBACf,eAAe;oBACf,kBAAkB;iBACnB;gBACD,SAAS,EAAE;oBACT,gBAAgB;oBAChB,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,gBAAgB,EAAE;iBACvD;aACF;;;;;;;;;;;;;;;"}