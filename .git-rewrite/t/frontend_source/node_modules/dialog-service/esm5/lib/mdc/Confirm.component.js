/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';
import { MDC_DIALOG_DATA } from '@angular-mdc/web';
// @dynamic
var ConfirmComponent = /** @class */ (function () {
    function ConfirmComponent(data) {
        this.data = data;
    }
    ConfirmComponent.decorators = [
        { type: Component, args: [{
                    template: "<mdc-dialog>\n    <mdc-dialog-container>\n        <mdc-dialog-surface>\n            <mdc-dialog-title>{{data.title}}</mdc-dialog-title>\n            <mdc-dialog-content *ngIf=\"data.content\">{{data.content}}</mdc-dialog-content>\n            <mdc-dialog-actions>\n                <button mdcDialogButton mdcDialogAction=\"accept\">\n                    {{data.acceptButton}}\n                </button>\n                <button mdcDialogButton mdcDialogAction=\"close\">\n                    {{data.cancelButton}}\n                </button>\n            </mdc-dialog-actions>\n        </mdc-dialog-surface>\n    </mdc-dialog-container>\n</mdc-dialog>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    ConfirmComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [MDC_DIALOG_DATA,] }] }
    ]; };
    return ConfirmComponent;
}());
export { ConfirmComponent };
if (false) {
    /** @type {?} */
    ConfirmComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uZmlybS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9kaWFsb2ctc2VydmljZS8iLCJzb3VyY2VzIjpbImxpYi9tZGMvQ29uZmlybS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFBO0FBQzFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQTs7QUFHbEQ7SUFLRSwwQkFBNkMsSUFLNUM7UUFMNEMsU0FBSSxHQUFKLElBQUksQ0FLaEQ7SUFDRCxDQUFDOztnQkFYRixTQUFTLFNBQUM7b0JBQ1Qsd3BCQUF1QztvQkFDdkMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEOzs7O2dEQUVlLE1BQU0sU0FBQyxlQUFlOztJQU90Qyx1QkFBQztDQUFBLEFBWkQsSUFZQztTQVJZLGdCQUFnQjs7O0lBQ2QsZ0NBS1oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJ1xuaW1wb3J0IHsgTURDX0RJQUxPR19EQVRBIH0gZnJvbSAnQGFuZ3VsYXItbWRjL3dlYidcblxuLy8gQGR5bmFtaWNcbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZVVybDogJy4vQ29uZmlybS5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIENvbmZpcm1Db21wb25lbnQge1xuICBjb25zdHJ1Y3RvciAoQEluamVjdChNRENfRElBTE9HX0RBVEEpIHB1YmxpYyBkYXRhOiB7XG4gICAgdGl0bGU6IHN0cmluZ1xuICAgIGFjY2VwdEJ1dHRvbjogc3RyaW5nXG4gICAgY2FuY2VsQnV0dG9uOiBzdHJpbmdcbiAgICBjb250ZW50Pzogc3RyaW5nXG4gIH0pIHtcbiAgfVxufVxuIl19