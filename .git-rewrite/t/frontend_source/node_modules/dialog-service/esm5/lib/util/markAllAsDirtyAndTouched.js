/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { FormArray, FormGroup } from '@angular/forms';
/**
 * Mark form control and all descendents as dirty and touched.
 *
 * \@param control
 * @type {?}
 */
export var markAllAsDirtyAndTouched = (/**
 * @param {?} control
 * @return {?}
 */
function (control) {
    var e_1, _a, e_2, _b;
    control.markAsDirty();
    control.markAsTouched();
    if (control instanceof FormGroup) {
        /** @type {?} */
        var keys = Object.keys(control.controls);
        try {
            for (var keys_1 = tslib_1.__values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {
                var key = keys_1_1.value;
                markAllAsDirtyAndTouched(control.controls[key]);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    else if (control instanceof FormArray) {
        try {
            for (var _c = tslib_1.__values(control.controls), _d = _c.next(); !_d.done; _d = _c.next()) {
                var child = _d.value;
                markAllAsDirtyAndTouched(child);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
            }
            finally { if (e_2) throw e_2.error; }
        }
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFya0FsbEFzRGlydHlBbmRUb3VjaGVkLmpzIiwic291cmNlUm9vdCI6Im5nOi8vZGlhbG9nLXNlcnZpY2UvIiwic291cmNlcyI6WyJsaWIvdXRpbC9tYXJrQWxsQXNEaXJ0eUFuZFRvdWNoZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQW1CLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQTs7Ozs7OztBQU90RSxNQUFNLEtBQU8sd0JBQXdCOzs7O0FBQUcsVUFBQyxPQUF3Qjs7SUFDL0QsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFBO0lBQ3JCLE9BQU8sQ0FBQyxhQUFhLEVBQUUsQ0FBQTtJQUN2QixJQUFJLE9BQU8sWUFBWSxTQUFTLEVBQUU7O1lBQzFCLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7O1lBQzFDLEtBQWdCLElBQUEsU0FBQSxpQkFBQSxJQUFJLENBQUEsMEJBQUEsNENBQUU7Z0JBQWpCLElBQUksR0FBRyxpQkFBQTtnQkFDVix3QkFBd0IsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFFLEdBQUcsQ0FBRSxDQUFDLENBQUE7YUFDbEQ7Ozs7Ozs7OztLQUNGO1NBQU0sSUFBSSxPQUFPLFlBQVksU0FBUyxFQUFFOztZQUN2QyxLQUFrQixJQUFBLEtBQUEsaUJBQUEsT0FBTyxDQUFDLFFBQVEsQ0FBQSxnQkFBQSw0QkFBRTtnQkFBL0IsSUFBSSxLQUFLLFdBQUE7Z0JBQ1osd0JBQXdCLENBQUMsS0FBSyxDQUFDLENBQUE7YUFDaEM7Ozs7Ozs7OztLQUNGO0FBQ0gsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sLCBGb3JtQXJyYXksIEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJ1xuXG4vKipcbiAqIE1hcmsgZm9ybSBjb250cm9sIGFuZCBhbGwgZGVzY2VuZGVudHMgYXMgZGlydHkgYW5kIHRvdWNoZWQuXG4gKlxuICogQHBhcmFtIGNvbnRyb2xcbiAqL1xuZXhwb3J0IGNvbnN0IG1hcmtBbGxBc0RpcnR5QW5kVG91Y2hlZCA9IChjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpID0+IHtcbiAgY29udHJvbC5tYXJrQXNEaXJ0eSgpXG4gIGNvbnRyb2wubWFya0FzVG91Y2hlZCgpXG4gIGlmIChjb250cm9sIGluc3RhbmNlb2YgRm9ybUdyb3VwKSB7XG4gICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKGNvbnRyb2wuY29udHJvbHMpXG4gICAgZm9yIChsZXQga2V5IG9mIGtleXMpIHtcbiAgICAgIG1hcmtBbGxBc0RpcnR5QW5kVG91Y2hlZChjb250cm9sLmNvbnRyb2xzWyBrZXkgXSlcbiAgICB9XG4gIH0gZWxzZSBpZiAoY29udHJvbCBpbnN0YW5jZW9mIEZvcm1BcnJheSkge1xuICAgIGZvciAobGV0IGNoaWxkIG9mIGNvbnRyb2wuY29udHJvbHMpIHtcbiAgICAgIG1hcmtBbGxBc0RpcnR5QW5kVG91Y2hlZChjaGlsZClcbiAgICB9XG4gIH1cbn1cbiJdfQ==