import { ChangeDetectorRef } from '@angular/core';
import { DialogService } from '../DialogService';
import { BaseFormComponent } from '../BaseFormComponent';
import { MatDialogRef } from '@angular/material/dialog';
import { QuickFormField } from 'ng-quick-form';
import { Subject } from 'rxjs';
import { FormGroup } from '@angular/forms';
export declare class FormComponent extends BaseFormComponent {
    data: {
        title: string;
        fields: QuickFormField[];
        content?: string;
        submitButton: string;
        cancelButton: string;
        cancelMessage: string;
        rawValue: boolean;
        layout?: {
            flexCell?: boolean | 6 | 12;
            gutter?: boolean;
            growItems?: boolean;
            debug?: boolean;
        };
        valueChanges?: Subject<{
            value: any;
            form: FormGroup;
            cd: ChangeDetectorRef;
        }>;
        formCreated?: (form: FormGroup, cd: ChangeDetectorRef) => void;
    };
    constructor(cd: ChangeDetectorRef, dialogRef: MatDialogRef<FormComponent>, dialogService: DialogService, data: {
        title: string;
        fields: QuickFormField[];
        content?: string;
        submitButton: string;
        cancelButton: string;
        cancelMessage: string;
        rawValue: boolean;
        layout?: {
            flexCell?: boolean | 6 | 12;
            gutter?: boolean;
            growItems?: boolean;
            debug?: boolean;
        };
        valueChanges?: Subject<{
            value: any;
            form: FormGroup;
            cd: ChangeDetectorRef;
        }>;
        formCreated?: (form: FormGroup, cd: ChangeDetectorRef) => void;
    });
    readonly attrFlexCell: true | null;
    readonly attrGutter: true | null;
    readonly attrGrowItems: true | null;
    readonly attrDefaultCell6: true | null;
    readonly attrDefaultCell12: true | null;
    readonly attrDebug: true | null;
}
