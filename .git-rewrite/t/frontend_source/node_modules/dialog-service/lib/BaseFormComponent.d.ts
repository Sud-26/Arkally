import { FormGroup } from '@angular/forms';
import { ChangeDetectorRef, OnDestroy } from '@angular/core';
import { DialogService } from './DialogService';
import { QuickFormField } from 'ng-quick-form';
import { Subject, Subscription } from 'rxjs';
declare type Closeable = {
    close: (result: any) => void;
};
/**
 * Manage form creation and submission.
 */
export declare class BaseFormComponent implements OnDestroy {
    private cd;
    private dialogService;
    private closeable;
    private cancelMessage;
    formFields: QuickFormField[];
    private rawValue;
    private valueChanges?;
    private formCreated?;
    submitted: boolean;
    form: FormGroup;
    formSubscription?: Subscription;
    constructor(cd: ChangeDetectorRef, dialogService: DialogService, closeable: Closeable, cancelMessage: string, formFields: QuickFormField[], rawValue: boolean, valueChanges?: Subject<{
        value: any;
        form: FormGroup;
        cd: ChangeDetectorRef;
    }> | undefined, formCreated?: ((form: FormGroup, cd: ChangeDetectorRef) => void) | undefined);
    doClose(): void;
    doSubmit(): void;
    doNonPendingSubmit(): void;
    ngOnDestroy(): void;
}
export {};
