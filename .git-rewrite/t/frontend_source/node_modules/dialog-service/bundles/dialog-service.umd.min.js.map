{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://dialog-service/lib/DialogService.ts","ng://dialog-service/lib/mat/Alert.component.ts","ng://dialog-service/lib/mat/Progress.component.ts","ng://dialog-service/lib/mat/Confirm.component.ts","ng://dialog-service/lib/util/markAllAsDirtyAndTouched.ts","ng://dialog-service/lib/BaseFormComponent.ts","ng://dialog-service/lib/util/assert.ts","ng://dialog-service/lib/mat/Form.component.ts","ng://dialog-service/lib/MatDialogService.ts","ng://dialog-service/lib/MatDialogService.module.ts","ng://dialog-service/lib/mdc/Progress.component.ts","ng://dialog-service/lib/mdc/Alert.component.ts","ng://dialog-service/lib/mdc/Confirm.component.ts","ng://dialog-service/lib/MdcDialogService.ts","ng://dialog-service/lib/MdcDialogService.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","AlertComponent","data","Component","args","template","changeDetection","ChangeDetectionStrategy","OnPush","Inject","MAT_DIALOG_DATA","ProgressComponent","ConfirmComponent","markAllAsDirtyAndTouched","control","markAsDirty","markAsTouched","FormGroup","keys","controls","keys_1","tslib_1.__values","keys_1_1","key","FormArray","_c","_d","child","BaseFormComponent","cd","dialogService","closeable","cancelMessage","formFields","rawValue","valueChanges","formCreated","_this","submitted","form","QuickForm","makeForm","formSubscription","pipe","debounceTime","tap","subscribe","doClose","withConfirm","filter","confirm","close","doSubmit","status","withProgress","statusChanges","startWith","take","doNonPendingSubmit","condition","message","Error","assert","markForCheck","valid","preProcessFormValues","getRawValue","ngOnDestroy","unsubscribe","FormComponent","_super","dialogRef","fields","tslib_1.__extends","defineProperty","layout","flexCell","gutter","growItems","debug","ChangeDetectorRef","MatDialogRef","DialogService","MatDialogService","dialog","work","title","options","workOutput","ref","open","disableClose","dialogOptions","afterOpened","concatMap","val","finalize","afterClosed","map","withAlert","acceptButton","minWidth","result","cancelButton","withForm","submitButton","Injectable","providedIn","MatDialog","MatDialogServiceModule","NgModule","declarations","entryComponents","imports","CommonModule","FormsModule","ReactiveFormsModule","MatButtonModule","MatCheckboxModule","MatDialogModule","MatInputModule","MatProgressSpinnerModule","MatRadioModule","MatSelectModule","MatSlideToggleModule","QuickFormModule","providers","provide","useClass","ProgressComponent$1","MDC_DIALOG_DATA","AlertComponent$1","ConfirmComponent$1","MdcDialogService","clickOutsideToClose","escapeToClose","throwError","MdcDialog","MdcDialogServiceModule","MdcButtonModule","MdcCheckboxModule","MdcDialogModule","MdcFormFieldModule","MdcLinearProgressModule","MdcRadioModule","MdcSelectModule","MdcSwitchModule","MdcTextFieldModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Observable, Subject } from 'rxjs'\nimport { QuickFormField } from 'ng-quick-form'\nimport { FormGroup } from '@angular/forms'\nimport { ChangeDetectorRef } from '@angular/core'\n\n/**\n * The DialogService class exposes functions used to create alert, confirmation, progress and form\n *  based dialogs.\n */\nexport abstract class DialogService {\n  /**\n   * Display progress dialog that blocks UI interaction until processing of completes.\n   *\n   * When observable completes, return the last value emitted by observable workload.\n   *\n   * If observable throws error, progress dialog will close with undefined value.\n   *\n   * @param work Observable workload\n   * @param title Dialog title (defaults to 'Please Wait...')\n   * @param options Dialog options. 'dialogOptions' are options that will be passed to underlying\n   * dialog implementation (i.e. Angular Material). It provides a way to supply options to\n   * MatDialogConfig.\n   */\n  abstract withProgress<T = any> (work: Observable<T>, title?: string,\n                                  options?: {\n                                    dialogOptions?: { [ key: string ]: any }\n                                  }): Observable<T | undefined>\n\n  /**\n   * Display alert dialog.\n   *\n   * @param title Dialog title\n   * @param options Dialog options. 'content' represents content to be display in dialog\n   * @returns Observable with true value if user clicks OK to accept the alert message, false\n   * otherwise\n   */\n  abstract withAlert (\n    title: string,\n    options?: {\n      content?: string\n      acceptButton?: string\n      dialogOptions?: { [ key: string ]: any }\n    }\n  ): Observable<boolean>\n\n  /**\n   * Display confirmation dialog.\n   *\n   * @param title Optional dialog title (defaults to 'Confirm?')\n   * @param options Dialog options. 'content' represents content to be display in dialog;\n   * 'acceptButton' represents label to accept confirmation (defaults to 'Yes'); 'cancelButton'\n   * represents label to cancel confirmation (defaults to 'No')\n   * @returns Observable with true value if user accepts the confirmation, false otherwise\n   */\n  abstract withConfirm (\n    title?: string,\n    options?: {\n      content?: string\n      acceptButton?: string\n      cancelButton?: string\n      cancelMessage?: string\n      dialogOptions?: { [ key: string ]: any }\n    }\n  ): Observable<boolean>\n\n  /**\n   * Display a dialog with form fields for data collection. Each form field definition describes:\n   *\n   * - title. Label for the field. Required.\n   *\n   * - id. Unique identifier for the field. Optional. Defaults to camel case representation of\n   * title.\n   *\n   * - type. Field type. Valid values are 'text', 'textarea', 'switch', 'radio', 'checkbox',\n   * 'select' and 'password'. Optional. Defaults to 'text'.\n   *\n   * - value. Default value for the field when the form is displayed. Optional.\n   *\n   * - options. List of possible options for 'radio', 'checkbox' and 'select' field types. Options\n   * can be specified as an \"array of string\" or an \"array of object with 'value' and 'label' as\n   * keys\". Optional.\n   *\n   * - required. Flag to indicate that field input is required. Optional. Defaults to false.\n   *\n   * - validators. Array of Angular validation functions (i.e. ValidatorFn). Optional.\n   *\n   * - asyncValidators. Array of asynchronous Angular validation functions (i.e. AsyncValidatorFn).\n   * Optional.\n   *\n   * The dialog will close and return form values (as a JSON object) when user clicks on submit\n   * button (provided all field validation passed).If user cancels the form, the dialog will close\n   * and return false.\n   *\n   * @param title\n   * @param fields\n   * @param options Dialog options.\n   *  - 'content' represents content to be display in dialog;\n   *  - 'submitButton' represents label to submit form (defaults to 'Submit');\n   *  - 'cancelButton' represents label to cancel form (defaults to 'Cancel');\n   *  - 'layout' defines the form's layout attributes (uses \"flex-cell\");\n   *  - 'rawValue' is used to get form raw value. Default is false.\n   *  - 'valueChanges' is used to receive form value change (experimental)\n   *  - 'formCreated' if specified, this callback function is called when the form is created. It\n   *      let user perform post FormGroup creation processing (experimental). e.g. to listen to\n   *      specific field value changes for advanced form manipulation/validation requirements.\n   * @returns Observable with form value object on submission, or false if form was cancelled\n   */\n  abstract withForm (\n    title: string,\n    fields: QuickFormField[],\n    options?: {\n      content?: string\n      submitButton?: string\n      cancelButton?: string\n      layout?: {\n        flexCell?: boolean | 6 | 12\n        gutter?: boolean\n        growItems?: boolean\n        debug?: boolean\n      },\n      rawValue?: boolean,\n      valueChanges?: Subject<{ value: any, form: FormGroup, cd: ChangeDetectorRef }>\n      formCreated?: (form: FormGroup, cd: ChangeDetectorRef) => void\n      dialogOptions?: { [ key: string ]: any }\n    }): Observable<any>\n}\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core'\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog'\n\n// @dynamic\n@Component({\n  templateUrl: './Alert.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AlertComponent {\n  constructor (@Inject(MAT_DIALOG_DATA) public data: {\n    title: string\n    acceptButton: string\n    content?: string\n  }) {\n  }\n}\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core'\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog'\n\n// @dynamic\n@Component({\n  templateUrl: './Progress.component.html',\n  styleUrls: [ './Progress.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProgressComponent {\n  constructor (@Inject(MAT_DIALOG_DATA) public data: { title: string }\n  ) {\n  }\n}\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core'\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog'\n\n// @dynamic\n@Component({\n  templateUrl: './Confirm.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConfirmComponent {\n  constructor (@Inject(MAT_DIALOG_DATA) public data: {\n    title: string\n    acceptButton: string\n    cancelButton: string\n    content?: string\n  }) {\n  }\n}\n","import { AbstractControl, FormArray, FormGroup } from '@angular/forms'\n\n/**\n * Mark form control and all descendents as dirty and touched.\n *\n * @param control\n */\nexport const markAllAsDirtyAndTouched = (control: AbstractControl) => {\n  control.markAsDirty()\n  control.markAsTouched()\n  if (control instanceof FormGroup) {\n    const keys = Object.keys(control.controls)\n    for (let key of keys) {\n      markAllAsDirtyAndTouched(control.controls[ key ])\n    }\n  } else if (control instanceof FormArray) {\n    for (let child of control.controls) {\n      markAllAsDirtyAndTouched(child)\n    }\n  }\n}\n","import { FormGroup } from '@angular/forms'\nimport { ChangeDetectorRef, OnDestroy } from '@angular/core'\nimport { DialogService } from './DialogService'\nimport { debounceTime, filter, startWith, take, tap } from 'rxjs/operators'\nimport { assert } from './util/assert'\nimport { QuickForm, QuickFormField } from 'ng-quick-form'\nimport { markAllAsDirtyAndTouched } from './util/markAllAsDirtyAndTouched'\nimport { Subject, Subscription } from 'rxjs'\n\ntype Closeable = {\n  close: (result: any) => void\n}\n\n/**\n * Manage form creation and submission.\n */\nexport class BaseFormComponent implements OnDestroy {\n  submitted = false\n  form: FormGroup\n  formSubscription?: Subscription\n\n  constructor (\n    private cd: ChangeDetectorRef,\n    private dialogService: DialogService,\n    private closeable: Closeable,\n    private cancelMessage: string,\n    public formFields: QuickFormField[],\n    private rawValue: boolean,\n    private valueChanges?: Subject<{ value: any, form: FormGroup, cd: ChangeDetectorRef }>,\n    private formCreated?: (form: FormGroup, cd: ChangeDetectorRef) => void\n  ) {\n    this.form = QuickForm.makeForm(this.formFields)\n\n    if (formCreated) {\n      formCreated(this.form, this.cd)\n    }\n    if (this.valueChanges) {\n      this.formSubscription = this.form.valueChanges.pipe(\n        debounceTime(100),\n        tap(value => this.valueChanges!.next({\n          value, form: this.form, cd\n        }))\n      ).subscribe()\n    }\n  }\n\n  doClose () {\n    // close form dialog, return false as result\n    this.dialogService.withConfirm(this.cancelMessage).pipe(\n      filter(confirm => confirm),\n      tap(() => this.closeable.close(false))\n    ).subscribe()\n  }\n\n  doSubmit () {\n    if (this.form.status === 'PENDING') {\n      // if form is pending validation, let's wait...\n      this.dialogService.withProgress(this.form.statusChanges.pipe(\n        startWith(this.form.status),\n        filter(status => status !== 'PENDING'),\n        take(1),\n        tap(() => this.doNonPendingSubmit())\n      ))\n    } else {\n      this.doNonPendingSubmit()\n    }\n  }\n\n  doNonPendingSubmit () {\n    assert(this.form.status !== 'PENDING', 'Form status should not be pending')\n\n    markAllAsDirtyAndTouched(this.form)\n    this.submitted = true // attempted to submit (affects validation messages)\n    this.cd.markForCheck()\n    if (!this.form.valid) {\n      return\n    }\n\n    // close form dialog, return form value object as result\n    this.closeable.close(QuickForm.preProcessFormValues(\n      this.rawValue ? this.form.getRawValue() : this.form.value))\n  }\n\n  ngOnDestroy (): void {\n    if (this.formSubscription) {\n      this.formSubscription.unsubscribe()\n    }\n  }\n}\n","export const assert = (condition: boolean, message?: string) => {\n  if (!condition) {\n    if (message) {\n      throw new Error(`Assertion error: ${message}`)\n    } else {\n      throw new Error('Assertion error: Unexpected condition')\n    }\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject } from '@angular/core'\nimport { DialogService } from '../DialogService'\nimport { BaseFormComponent } from '../BaseFormComponent'\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog'\nimport { QuickFormField } from 'ng-quick-form'\nimport { Subject } from 'rxjs'\nimport { FormGroup } from '@angular/forms'\n\n// @dynamic\n@Component({\n  templateUrl: './Form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class FormComponent extends BaseFormComponent {\n  constructor (\n    cd: ChangeDetectorRef,\n    dialogRef: MatDialogRef<FormComponent>,\n    dialogService: DialogService,\n    @Inject(MAT_DIALOG_DATA) public data: {\n      title: string\n      fields: QuickFormField[]\n      content?: string\n      submitButton: string\n      cancelButton: string\n      cancelMessage: string\n      rawValue: boolean\n      layout?: {\n        flexCell?: boolean | 6 | 12\n        gutter?: boolean\n        growItems?: boolean\n        debug?: boolean\n      }\n      valueChanges?: Subject<{ value: any, form: FormGroup, cd: ChangeDetectorRef }>,\n      formCreated?: (form: FormGroup, cd: ChangeDetectorRef) => void\n    }\n  ) {\n    super(cd, dialogService, dialogRef, data.cancelMessage, data.fields,\n      data.rawValue, data.valueChanges, data.formCreated)\n  }\n\n  get attrFlexCell () {\n    const flexCell = this.data.layout && this.data.layout.flexCell\n    // must return null for Angular to remove the attribute\n    return flexCell ? true : null\n  }\n\n  get attrGutter () {\n    const gutter = this.data.layout && this.data.layout.gutter\n    // must return null for Angular to remove the attribute\n    return gutter ? true : null\n  }\n\n  get attrGrowItems () {\n    const growItems = this.data.layout && this.data.layout.growItems\n    // must return null for Angular to remove the attribute\n    return growItems ? true : null\n  }\n\n  get attrDefaultCell6 () {\n    const flexCell = this.data.layout && this.data.layout.flexCell\n    // must return null for Angular to remove the attribute\n    return flexCell === 6 ? true : null\n  }\n\n  get attrDefaultCell12 () {\n    const flexCell = this.data.layout && this.data.layout.flexCell\n    // must return null for Angular to remove the attribute\n    return flexCell === 12 ? true : null\n  }\n\n  get attrDebug () {\n    const debug = this.data.layout && this.data.layout.debug\n    // must return null for Angular to remove the attribute\n    return debug ? true : null\n  }\n}\n","import { ChangeDetectorRef, Injectable } from '@angular/core'\nimport { Observable, Subject } from 'rxjs'\nimport { DialogService } from './DialogService'\nimport { MatDialog } from '@angular/material/dialog'\nimport { concatMap, finalize, map, tap } from 'rxjs/operators'\nimport { AlertComponent } from './mat/Alert.component'\nimport { ProgressComponent } from './mat/Progress.component'\nimport { ConfirmComponent } from './mat/Confirm.component'\nimport { FormComponent } from './mat/Form.component'\nimport { QuickFormField } from 'ng-quick-form'\nimport { FormGroup } from '@angular/forms'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatDialogService extends DialogService {\n  constructor (private dialog: MatDialog) {\n    super()\n  }\n\n  withProgress<T = any> (\n    work: Observable<T>, title?: string,\n    options?: {\n      dialogOptions?: { [ key: string ]: any }\n    }): Observable<T | undefined> {\n    title = title || 'Please Wait...'\n    let workOutput: T\n\n    const ref = this.dialog.open(ProgressComponent, {\n      disableClose: true,\n      data: { title },\n      ...(options && options.dialogOptions || {})\n    })\n\n    ref.afterOpened().pipe(\n      concatMap(() => work),\n      tap(val => workOutput = val), // set workOutput\n      finalize(() => ref.close())\n    ).subscribe()\n\n    return ref.afterClosed().pipe(\n      map(() => workOutput) // return workOutput\n    )\n  }\n\n  withAlert (title: string, options?: {\n    content?: string\n    acceptButton?: string\n    dialogOptions?: { [ key: string ]: any }\n  }): Observable<boolean> {\n    options = options || {}\n    options.acceptButton = options.acceptButton || 'OK'\n\n    const dialogRef = this.dialog.open(AlertComponent, {\n      disableClose: true,\n      minWidth: 200,\n      data: { title, ...options },\n      ...(options && options.dialogOptions || {})\n    })\n\n    return dialogRef.afterClosed().pipe(\n      map(result => result === true)\n    )\n  }\n\n  withConfirm (title?: string, options?: {\n    content?: string\n    acceptButton?: string\n    cancelButton?: string\n    dialogOptions?: { [ key: string ]: any }\n  }): Observable<boolean> {\n    title = title || 'Confirm?'\n    options = options || {}\n    options.acceptButton = options.acceptButton || 'Yes'\n    options.cancelButton = options.cancelButton || 'No'\n\n    const ref = this.dialog.open(ConfirmComponent, {\n      disableClose: true,\n      data: { title, ...options },\n      ...(options && options.dialogOptions || {})\n    })\n    return ref.afterClosed().pipe(\n      map(result => result)\n    )\n  }\n\n  withForm (title: string, fields: QuickFormField[], options?: {\n    content?: string\n    submitButton?: string\n    cancelButton?: string\n    cancelMessage?: string\n    rawValue?: boolean\n    layout?: {\n      flexCell?: boolean | 6 | 12\n      gutter?: boolean\n      growItems?: boolean\n      debug?: boolean\n    },\n    valueChanges?: Subject<{ value: any, form: FormGroup, cd: ChangeDetectorRef }>\n    formCreated?: (form: FormGroup, cd: ChangeDetectorRef) => void\n    dialogOptions?: { [ key: string ]: any }\n  }): Observable<any> {\n    options = options || {}\n    options.submitButton = options.submitButton || 'Submit'\n    options.cancelButton = options.cancelButton || 'Cancel'\n    options.cancelMessage = options.cancelMessage || 'Cancel?'\n    options.rawValue = options.rawValue || false\n\n    const ref = this.dialog.open(FormComponent, {\n      disableClose: true,\n      data: { title, fields, ...options },\n      ...(options && options.dialogOptions || {})\n    })\n\n    return ref.afterClosed()\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { NgModule } from '@angular/core'\nimport { DialogService } from './DialogService'\nimport { AlertComponent } from './mat/Alert.component'\nimport { MatDialogService } from './MatDialogService'\nimport { ProgressComponent } from './mat/Progress.component'\nimport { ConfirmComponent } from './mat/Confirm.component'\nimport { FormComponent } from './mat/Form.component'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\nimport { MatRadioModule } from '@angular/material/radio'\nimport { MatSelectModule } from '@angular/material/select'\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'\nimport { QuickFormModule } from 'ng-quick-form'\n\n@NgModule({\n  declarations: [\n    AlertComponent,\n    ConfirmComponent,\n    FormComponent,\n    ProgressComponent\n  ],\n  entryComponents: [\n    AlertComponent,\n    ConfirmComponent,\n    FormComponent,\n    ProgressComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatButtonModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    QuickFormModule\n  ],\n  providers: [\n    MatDialogService,\n    { provide: DialogService, useClass: MatDialogService }\n  ]\n})\nexport class MatDialogServiceModule {\n}\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core'\nimport { MDC_DIALOG_DATA } from '@angular-mdc/web'\n\n// @dynamic\n@Component({\n  templateUrl: './Progress.component.html',\n  styleUrls: [ './Progress.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProgressComponent {\n  constructor (@Inject(MDC_DIALOG_DATA) public data: { title: string }\n  ) {\n  }\n}\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core'\nimport { MDC_DIALOG_DATA } from '@angular-mdc/web'\n\n// @dynamic\n@Component({\n  templateUrl: './Alert.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AlertComponent {\n  constructor (@Inject(MDC_DIALOG_DATA) public data: {\n    title: string\n    acceptButton: string\n    content?: string\n  }) {\n  }\n}\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core'\nimport { MDC_DIALOG_DATA } from '@angular-mdc/web'\n\n// @dynamic\n@Component({\n  templateUrl: './Confirm.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConfirmComponent {\n  constructor (@Inject(MDC_DIALOG_DATA) public data: {\n    title: string\n    acceptButton: string\n    cancelButton: string\n    content?: string\n  }) {\n  }\n}\n","import { MdcDialog } from '@angular-mdc/web'\nimport { Injectable } from '@angular/core'\nimport { Observable, throwError } from 'rxjs'\nimport { concatMap, finalize, map, tap } from 'rxjs/operators'\nimport { DialogService } from './DialogService'\nimport { ProgressComponent } from './mdc/Progress.component'\nimport { AlertComponent } from './mdc/Alert.component'\nimport { ConfirmComponent } from './mdc/Confirm.component'\nimport { QuickFormField } from 'ng-quick-form'\n\n/**\n * @deprecated No longer supported. Not enough time to maintain this implementation, contributions\n * welcomed.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MdcDialogService extends DialogService {\n  constructor (private dialog: MdcDialog) {\n    super()\n  }\n\n  withProgress<T = any> (work: Observable<T>, title?: string): Observable<T | undefined> {\n    title = title || 'Please Wait...'\n    let workOutput: T\n\n    const ref = this.dialog.open(ProgressComponent, {\n      clickOutsideToClose: false,\n      escapeToClose: false,\n      data: { title }\n    })\n\n    ref.afterOpened().pipe(\n      concatMap(() => work),\n      tap(val => workOutput = val), // set workOutput\n      finalize(() => ref.close())\n    ).subscribe()\n\n    return ref.afterClosed().pipe(\n      map(() => workOutput) // return workOutput\n    )\n  }\n\n  withAlert (title: string, options?: { content?: string, acceptButton?: string }): Observable<boolean> {\n    options = options || {}\n    options.acceptButton = options.acceptButton || 'OK'\n\n    const dialogRef = this.dialog.open(AlertComponent, {\n      escapeToClose: false,\n      clickOutsideToClose: false,\n      data: { title, ...options }\n    })\n\n    return dialogRef.afterClosed().pipe(\n      map(result => result === 'accept')\n    )\n  }\n\n  withConfirm (title?: string, options?: {\n    content?: string\n    acceptButton?: string\n    cancelButton?: string\n  }): Observable<boolean> {\n    title = title || 'Confirm?'\n    options = options || {}\n    options.acceptButton = options.acceptButton || 'Yes'\n    options.cancelButton = options.cancelButton || 'No'\n\n    const ref = this.dialog.open(ConfirmComponent, {\n      escapeToClose: false,\n      clickOutsideToClose: false,\n      data: { title, ...options }\n    })\n    return ref.afterClosed().pipe(\n      map(result => result === 'accept')\n    )\n  }\n\n  withForm (title: string, fields: QuickFormField[], options?: {\n    content?: string\n    submitButton?: string\n    cancelButton?: string\n    cancelMessage?: string\n  }): Observable<any> {\n    return throwError('withForm() is not supported in MDC mode')\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { NgModule } from '@angular/core'\nimport { DialogService } from './DialogService'\nimport { MdcDialogService } from './MdcDialogService'\nimport { AlertComponent } from './mdc/Alert.component'\nimport { ConfirmComponent } from './mdc/Confirm.component'\nimport { ProgressComponent } from './mdc/Progress.component'\nimport {\n  MdcButtonModule,\n  MdcCheckboxModule,\n  MdcDialogModule,\n  MdcFormFieldModule,\n  MdcLinearProgressModule,\n  MdcRadioModule,\n  MdcSelectModule,\n  MdcSwitchModule,\n  MdcTextFieldModule\n} from '@angular-mdc/web'\n\n@NgModule({\n  declarations: [\n    AlertComponent,\n    ConfirmComponent,\n    ProgressComponent\n  ],\n  entryComponents: [\n    AlertComponent,\n    ConfirmComponent,\n    ProgressComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MdcButtonModule,\n    MdcCheckboxModule,\n    MdcDialogModule,\n    MdcFormFieldModule,\n    MdcLinearProgressModule,\n    MdcRadioModule,\n    MdcSelectModule,\n    MdcSwitchModule,\n    MdcTextFieldModule\n  ],\n  providers: [\n    MdcDialogService,\n    { provide: DialogService, useClass: MdcDialogService }\n  ]\n})\nexport class MdcDialogServiceModule {\n}\n"]}